Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading splitter info files (read 1 spinfo file, 2 splitters)
Reading declaration files ...velocity: 2 of 2 splitters successful
(read 1 decls file)
Processing trace data; reading 1 dtrace file:

===========================================================================
..main():::EXIT
return == 0
===========================================================================
..state(geometry_msgs/TransformStamped):::ENTER
param0 != null
param0.child_frame_id == "vicon/TELLO/TELLO"
param0.header.frame_id == "/world"
param0.transform.translation.y != 0
param0.transform.rotation.y < param0.transform.rotation.z
param0.transform.rotation.y < param0.transform.rotation.x
param0.transform.rotation.y < param0.transform.rotation.w
param0.child_frame_id > param0.header.frame_id
param0.transform.rotation.z < param0.transform.rotation.x
param0.transform.rotation.z < param0.transform.rotation.w
param0.transform.translation.z > param0.transform.translation.x
param0.transform.translation.z != param0.transform.translation.y
param0.transform.translation.x != param0.transform.translation.y
param0.transform.rotation.x < param0.transform.rotation.w
===========================================================================
..state(geometry_msgs/TransformStamped):::EXIT
return != null
===========================================================================
..velocity(geometry_msgs/TransformStamped):::ENTER
param0 != null
param0.transform.rotation.y != 0
param0.child_frame_id == "vicon/TELLO/TELLO"
param0.header.frame_id == "/world"
param0.transform.translation.x != 0
param0.transform.translation.y != 0
param0.transform.rotation.w != 0
param0.transform.rotation.y != param0.transform.rotation.z
param0.transform.rotation.y != param0.transform.rotation.x
param0.transform.rotation.y < param0.transform.rotation.w
param0.child_frame_id > param0.header.frame_id
param0.transform.rotation.z != param0.transform.rotation.x
param0.transform.rotation.z != param0.transform.rotation.w
param0.transform.translation.z > param0.transform.translation.x
param0.transform.translation.z != param0.transform.translation.y
param0.transform.translation.x != param0.transform.translation.y
param0.transform.rotation.x != param0.transform.rotation.w
===========================================================================
..velocity(geometry_msgs/TransformStamped):::EXIT
return.angular.y == return.angular.x
return.angular.y == return.angular.z
(return.linear.z == -200.0)  ==>  (orig(param0.header.seq) one of { 79242, 79247 })
(return.linear.z == -200.0)  ==>  (orig(param0.header.stamp.nsecs) one of { 341024701, 690889212 })
(return.linear.z == -200.0)  ==>  (orig(param0.header.stamp.secs) one of { 1548776145, 1548776146 })
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.w) one of { 0.996222259601, 0.997117843104 })
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.x) < orig(param0.transform.rotation.w))
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.x) one of { 0.061119054423, 0.0715792593196 })
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.y) < orig(param0.transform.rotation.x))
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.y) < orig(param0.transform.rotation.z))
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.y) one of { 0.00440636428428, 0.0165769930855 })
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.z) < orig(param0.transform.rotation.w))
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.z) < orig(param0.transform.rotation.x))
(return.linear.z == -200.0)  ==>  (orig(param0.transform.rotation.z) one of { 0.0447331208852, 0.0462906298432 })
(return.linear.z == -200.0)  ==>  (orig(param0.transform.translation.x) < orig(param0.transform.translation.y))
(return.linear.z == -200.0)  ==>  (orig(param0.transform.translation.x) one of { -2.0636868353, -2.04592108004 })
(return.linear.z == -200.0)  ==>  (orig(param0.transform.translation.y) one of { -1.93935005161, -1.92998638557 })
(return.linear.z == -200.0)  ==>  (orig(param0.transform.translation.z) > orig(param0.transform.translation.y))
(return.linear.z == -200.0)  ==>  (orig(param0.transform.translation.z) one of { 0.570795154282, 0.603793927438 })
(return.linear.z == -200.0)  ==>  (param0.header.seq > orig(param0.header.seq))
(return.linear.z == -200.0)  ==>  (param0.header.seq one of { 79246, 79251 })
(return.linear.z == -200.0)  ==>  (param0.header.stamp.nsecs > orig(param0.header.stamp.nsecs))
(return.linear.z == -200.0)  ==>  (param0.header.stamp.nsecs one of { 380903877, 730884463 })
(return.linear.z == -200.0)  ==>  (param0.header.stamp.secs == orig(param0.header.stamp.secs))
(return.linear.z == -200.0)  ==>  (param0.header.stamp.secs one of { 1548776145, 1548776146 })
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.w != orig(param0.transform.rotation.w))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.w > orig(param0.transform.rotation.x))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.w > orig(param0.transform.rotation.z))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.w one of { 0.996410437779, 0.996564880592 })
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.x != orig(param0.transform.rotation.x))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.x < orig(param0.transform.rotation.w))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.x < param0.transform.rotation.w)
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.x > orig(param0.transform.rotation.y))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.x > orig(param0.transform.rotation.z))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.x one of { 0.0683526952689, 0.0683749109971 })
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.y != orig(param0.transform.rotation.y))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.y < orig(param0.transform.rotation.w))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.y < orig(param0.transform.rotation.x))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.y < orig(param0.transform.rotation.z))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.y < param0.transform.rotation.x)
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.y < param0.transform.rotation.z)
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.y one of { 0.00527858021411, 0.0169498760109 })
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.z < orig(param0.transform.rotation.w))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.z < orig(param0.transform.rotation.x))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.z < param0.transform.rotation.w)
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.z < param0.transform.rotation.x)
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.z > orig(param0.transform.rotation.y))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.z > orig(param0.transform.rotation.z))
(return.linear.z == -200.0)  ==>  (param0.transform.rotation.z one of { 0.0464267908477, 0.0469771246138 })
(return.linear.z == -200.0)  ==>  (param0.transform.translation.x < orig(param0.transform.translation.x))
(return.linear.z == -200.0)  ==>  (param0.transform.translation.x < orig(param0.transform.translation.y))
(return.linear.z == -200.0)  ==>  (param0.transform.translation.x < param0.transform.translation.y)
(return.linear.z == -200.0)  ==>  (param0.transform.translation.x one of { -2.06525689232, -2.04643928886 })
(return.linear.z == -200.0)  ==>  (param0.transform.translation.y < orig(param0.transform.translation.z))
(return.linear.z == -200.0)  ==>  (param0.transform.translation.y > orig(param0.transform.translation.x))
(return.linear.z == -200.0)  ==>  (param0.transform.translation.y > orig(param0.transform.translation.y))
(return.linear.z == -200.0)  ==>  (param0.transform.translation.y one of { -1.9384694084, -1.92861868124 })
(return.linear.z == -200.0)  ==>  (param0.transform.translation.z < orig(param0.transform.translation.z))
(return.linear.z == -200.0)  ==>  (param0.transform.translation.z > orig(param0.transform.translation.y))
(return.linear.z == -200.0)  ==>  (param0.transform.translation.z > param0.transform.translation.y)
(return.linear.z == -200.0)  ==>  (param0.transform.translation.z one of { 0.566395234706, 0.601673481985 })
(return.linear.z == -200.0)  ==>  (return.linear.x == 0.0)
(return.linear.z == -200.0)  ==>  (return.linear.x > return.linear.z)
(return.linear.z == -200.0)  ==>  (return.linear.y == 0.0)
(return.linear.z == -200.0)  ==>  (return.linear.y == return.linear.x)
(return.linear.z == -200.0)  ==>  (return.linear.y > return.linear.z)
return != null
return.linear.z one of { -200.0, 0.0 }
return.angular.y == 0.0
===========================================================================
..velocity(geometry_msgs/TransformStamped):::EXIT;condition="return.linear.z  ==   -200.0"
return.linear.y == return.linear.x
return.linear.y == 0.0
return.linear.z == -200.0
orig(param0.header.seq) one of { 79242, 79247 }
orig(param0.transform.rotation.y) one of { 0.00440636428428, 0.0165769930855 }
orig(param0.transform.rotation.z) one of { 0.0447331208852, 0.0462906298432 }
orig(param0.header.stamp.secs) one of { 1548776145, 1548776146 }
orig(param0.transform.translation.z) one of { 0.570795154282, 0.603793927438 }
orig(param0.header.stamp.nsecs) one of { 341024701, 690889212 }
orig(param0.transform.translation.x) one of { -2.0636868353, -2.04592108004 }
orig(param0.transform.translation.y) one of { -1.93935005161, -1.92998638557 }
orig(param0.transform.rotation.x) one of { 0.061119054423, 0.0715792593196 }
orig(param0.transform.rotation.w) one of { 0.996222259601, 0.997117843104 }
orig(param0.transform.rotation.y) < orig(param0.transform.rotation.z)
orig(param0.transform.rotation.y) < orig(param0.transform.rotation.x)
orig(param0.transform.rotation.z) < orig(param0.transform.rotation.x)
orig(param0.transform.rotation.z) < orig(param0.transform.rotation.w)
orig(param0.transform.translation.z) > orig(param0.transform.translation.y)
orig(param0.transform.translation.x) < orig(param0.transform.translation.y)
orig(param0.transform.rotation.x) < orig(param0.transform.rotation.w)
===========================================================================
..velocity(geometry_msgs/TransformStamped):::EXIT;condition="not(return.linear.z  ==   -200.0)"
return.linear.z == 0.0
===========================================================================
..velocity(geometry_msgs/TransformStamped):::EXIT;condition="return.linear.z  ==  0.0"
return.angular.y == return.angular.x
return.angular.y == return.angular.z
return != null
return.linear.z == 0.0
return.angular.y == 0.0
orig(param0) != null
orig(param0.transform.rotation.y) != 0
orig(param0.child_frame_id) == "vicon/TELLO/TELLO"
orig(param0.header.frame_id) == "/world"
orig(param0.transform.translation.x) != 0
orig(param0.transform.translation.y) != 0
orig(param0.transform.rotation.w) != 0
orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)
orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)
orig(param0.transform.rotation.y) < orig(param0.transform.rotation.w)
orig(param0.child_frame_id) > orig(param0.header.frame_id)
orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)
orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)
orig(param0.transform.translation.z) > orig(param0.transform.translation.x)
orig(param0.transform.translation.z) != orig(param0.transform.translation.y)
orig(param0.transform.translation.x) != orig(param0.transform.translation.y)
orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)
===========================================================================
..velocity(geometry_msgs/TransformStamped):::EXIT;condition="not(return.linear.z  ==  0.0)"
return.linear.y == return.linear.x
return.angular.y == return.angular.x
return.angular.y == return.angular.z
return != null
return.linear.y == 0.0
return.linear.z == -200.0
return.angular.y == 0.0
orig(param0) != null
orig(param0.header.seq) one of { 79242, 79247 }
orig(param0.transform.rotation.y) one of { 0.00440636428428, 0.0165769930855 }
orig(param0.child_frame_id) == "vicon/TELLO/TELLO"
orig(param0.header.frame_id) == "/world"
orig(param0.transform.rotation.z) one of { 0.0447331208852, 0.0462906298432 }
orig(param0.header.stamp.secs) one of { 1548776145, 1548776146 }
orig(param0.transform.translation.z) one of { 0.570795154282, 0.603793927438 }
orig(param0.header.stamp.nsecs) one of { 341024701, 690889212 }
orig(param0.transform.translation.x) one of { -2.0636868353, -2.04592108004 }
orig(param0.transform.translation.y) one of { -1.93935005161, -1.92998638557 }
orig(param0.transform.rotation.x) one of { 0.061119054423, 0.0715792593196 }
orig(param0.transform.rotation.w) one of { 0.996222259601, 0.997117843104 }
orig(param0.transform.rotation.y) < orig(param0.transform.rotation.z)
orig(param0.transform.rotation.y) < orig(param0.transform.rotation.x)
orig(param0.transform.rotation.y) < orig(param0.transform.rotation.w)
orig(param0.child_frame_id) > orig(param0.header.frame_id)
orig(param0.transform.rotation.z) < orig(param0.transform.rotation.x)
orig(param0.transform.rotation.z) < orig(param0.transform.rotation.w)
orig(param0.transform.translation.z) > orig(param0.transform.translation.x)
orig(param0.transform.translation.z) > orig(param0.transform.translation.y)
orig(param0.transform.translation.x) < orig(param0.transform.translation.y)
orig(param0.transform.rotation.x) < orig(param0.transform.rotation.w)
===========================================================================
..viconTELLOTELLO():::EXIT
return != null
return.transform.rotation.y != 0
return.child_frame_id == "vicon/TELLO/TELLO"
return.header.frame_id == "/world"
return.transform.translation.x != 0
return.transform.translation.y != 0
return.transform.rotation.w != 0
return.transform.rotation.y != return.transform.rotation.z
return.transform.rotation.y != return.transform.rotation.x
return.transform.rotation.y < return.transform.rotation.w
return.child_frame_id > return.header.frame_id
return.transform.rotation.z != return.transform.rotation.x
return.transform.rotation.z != return.transform.rotation.w
return.transform.translation.z > return.transform.translation.x
return.transform.translation.z != return.transform.translation.y
return.transform.rotation.x != return.transform.rotation.w
Exiting Daikon.
