<INVARIANTS>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == /velocity3.angular.x</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.angular.y == /velocity3.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == /velocity3.angular.z</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.angular.y == /velocity3.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0 != null</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.seq != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.131519868623</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.131519868623</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.169253483593</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.169253483593</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.996509522666</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.996509522666</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.834726199794</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.834726199794</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.secs != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.27018553004</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.27018553004</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.030481146797</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.030481146797</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.28426505374</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.28426505374</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.40045951936</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.40045951936</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.122932041351</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.122932041351</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.0901616399866</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.0901616399866</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.84732071705</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.84732071705</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.446427773524</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.446427773524</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/is_user_watching_drone1 != null</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/is_user_watching_drone1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2 != null</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/distance_to_user2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data one of { 1.43678573346, 1.65679220144, 2.48979161381 }</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/distance_to_user2.data one of { 1.43678573346, 1.65679220144, 2.48979161381 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data one of { 1.43678573346, 1.65679220144, 2.48979161381 }
	&quot;1.43678573346&quot; probability: 44.48%	count:1343.0 total:3019.0
	&quot;1.65679220144&quot; probability: 0.03%	count:1.0 total:3019.0
	&quot;2.48979161381&quot; probability: 55.48%	count:1675.0 total:3019.0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/distance_to_user2.data one of { 1.43678573346, 1.65679220144, 2.48979161381 }
	&quot;1.43678573346&quot; probability: 44.48%	count:1343.0 total:3019.0
	&quot;1.65679220144&quot; probability: 0.03%	count:1.0 total:3019.0
	&quot;2.48979161381&quot; probability: 55.48%	count:1675.0 total:3019.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/distance_to_user2.data != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3 != null</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/velocity3 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.y one of { -1.0, -0.134785174094, -0.0535639989856, 0.0, 0.32300413591, 1.0 }
	&quot;-1.0&quot; probability: 24.80%	count:1254.0 total:5057.0
	&quot;-0.134785174094&quot; probability: 1.74%	count:88.0 total:5057.0
	&quot;-0.0535639989856&quot; probability: 24.38%	count:1233.0 total:5057.0
	&quot;0.0&quot; probability: 0.10%	count:5.0 total:5057.0
	&quot;0.32300413591&quot; probability: 8.48%	count:429.0 total:5057.0
	&quot;1.0&quot; probability: 40.50%	count:2048.0 total:5057.0</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.y one of { -1.0, -0.134785174094, -0.0535639989856, 0.0, 0.32300413591, 1.0 }
	&quot;-1.0&quot; probability: 24.80%	count:1254.0 total:5057.0
	&quot;-0.134785174094&quot; probability: 1.74%	count:88.0 total:5057.0
	&quot;-0.0535639989856&quot; probability: 24.38%	count:1233.0 total:5057.0
	&quot;0.0&quot; probability: 0.10%	count:5.0 total:5057.0
	&quot;0.32300413591&quot; probability: 8.48%	count:429.0 total:5057.0
	&quot;1.0&quot; probability: 40.50%	count:2048.0 total:5057.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.y &lt;= 1.0</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.y &gt;= -1.0</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.x one of { -0.0812695007428, -0.0764073028112, 0.0, 0.30860789194, 0.49621905651, 0.694083694304 }
	&quot;-0.0812695007428&quot; probability: 1.73%	count:88.0 total:5074.0
	&quot;-0.0764073028112&quot; probability: 24.30%	count:1233.0 total:5074.0
	&quot;0.0&quot; probability: 0.10%	count:5.0 total:5074.0
	&quot;0.30860789194&quot; probability: 40.70%	count:2065.0 total:5074.0
	&quot;0.49621905651&quot; probability: 8.45%	count:429.0 total:5074.0
	&quot;0.694083694304&quot; probability: 24.71%	count:1254.0 total:5074.0</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.x one of { -0.0812695007428, -0.0764073028112, 0.0, 0.30860789194, 0.49621905651, 0.694083694304 }
	&quot;-0.0812695007428&quot; probability: 1.73%	count:88.0 total:5074.0
	&quot;-0.0764073028112&quot; probability: 24.30%	count:1233.0 total:5074.0
	&quot;0.0&quot; probability: 0.10%	count:5.0 total:5074.0
	&quot;0.30860789194&quot; probability: 40.70%	count:2065.0 total:5074.0
	&quot;0.49621905651&quot; probability: 8.45%	count:429.0 total:5074.0
	&quot;0.694083694304&quot; probability: 24.71%	count:1254.0 total:5074.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.x &lt;= 0.694083694304</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.x &lt;= 0.694083694304</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.x &gt;= -0.081295490395</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.x &gt;= -0.081295490395</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.11%	count:9.0 total:7907.0
	&quot;0.0&quot; probability: 99.89%	count:7898.0 total:7907.0</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.11%	count:9.0 total:7907.0
	&quot;0.0&quot; probability: 99.89%	count:7898.0 total:7907.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == 0.0</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == 0.0</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/state4 != null</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/state4 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>5055</SAMPLES> <DAIKON>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 78.41%	count:7537.0 total:9612.0
	&quot;GOAL REACHED&quot; probability: 21.59%	count:2075.0 total:9612.0</INV> <SAMPLES>5055</SAMPLES> <DAIKON>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 78.41%	count:7537.0 total:9612.0
	&quot;GOAL REACHED&quot; probability: 21.59%	count:2075.0 total:9612.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5071</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt; /velocity3.linear.y</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/distance_to_user2.data &gt; /velocity3.linear.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt; /velocity3.linear.x</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/distance_to_user2.data &gt; /velocity3.linear.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt; /velocity3.linear.z</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/distance_to_user2.data &gt; /velocity3.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.y != /velocity3.linear.z</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.y != /velocity3.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.x != /velocity3.linear.z</INV> <SAMPLES>5057</SAMPLES> <DAIKON>/velocity3.linear.x != /velocity3.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>5071</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data != 0</INV> <SAMPLES>5071</SAMPLES> <DAIKON>return.data != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data &gt;= 0.173459112841</INV> <SAMPLES>5071</SAMPLES> <DAIKON>return.data &gt;= 0.173459112841</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data &gt; orig(/velocity3.linear.y)</INV> <SAMPLES>5057</SAMPLES> <DAIKON>return.data &gt; orig(/velocity3.linear.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data != orig(/velocity3.linear.x)</INV> <SAMPLES>5057</SAMPLES> <DAIKON>return.data != orig(/velocity3.linear.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data &gt; orig(/velocity3.linear.z)</INV> <SAMPLES>5057</SAMPLES> <DAIKON>return.data &gt; orig(/velocity3.linear.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>distance_to_user(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == /velocity3.angular.x</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.angular.y == /velocity3.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == /velocity3.angular.z</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.angular.y == /velocity3.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0 != null</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.seq != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.139845754214</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.139845754214</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.141530604407</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.141530604407</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.996321747693</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.996321747693</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.846762313534</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.846762313534</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.secs != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.27096940925</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.27096940925</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.0292142777932</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.0292142777932</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.2837158697</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.2837158697</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.40134792699</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.40134792699</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.127176027411</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.127176027411</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.160664285372</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.160664285372</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.988008505081</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.988008505081</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.481696799205</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.481696799205</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/is_user_watching_drone1 != null</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/is_user_watching_drone1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/is_user_watching_drone1.data == true</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/is_user_watching_drone1.data == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/is_user_watching_drone1.data == true</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/is_user_watching_drone1.data == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/is_user_watching_drone1.data != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/is_user_watching_drone1.data != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2 != null</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/distance_to_user2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data != 0</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/distance_to_user2.data != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt;= 1.43678573346</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/distance_to_user2.data &gt;= 1.43678573346</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3 != null</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/velocity3 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.y &lt;= 1.0</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.y &gt;= -1.0</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.x &lt;= 0.699229018908</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.linear.x &lt;= 0.699229018908</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.x &gt;= -0.369406480664</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.linear.x &gt;= -0.369406480664</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 2.54%	count:204.0 total:8045.0
	&quot;0.0&quot; probability: 97.46%	count:7841.0 total:8045.0</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 2.54%	count:204.0 total:8045.0
	&quot;0.0&quot; probability: 97.46%	count:7841.0 total:8045.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == 0.0</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/velocity3.angular.y == 0.0</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/velocity3.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/state4 != null</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/state4 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>5056</SAMPLES> <DAIKON>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 79.93%	count:7603.0 total:9512.0
	&quot;GOAL REACHED&quot; probability: 20.07%	count:1909.0 total:9512.0</INV> <SAMPLES>5056</SAMPLES> <DAIKON>/state4.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 79.93%	count:7603.0 total:9512.0
	&quot;GOAL REACHED&quot; probability: 20.07%	count:1909.0 total:9512.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5066</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt; /velocity3.linear.y</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/distance_to_user2.data &gt; /velocity3.linear.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt; /velocity3.linear.x</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/distance_to_user2.data &gt; /velocity3.linear.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt; /velocity3.linear.z</INV> <SAMPLES>5058</SAMPLES> <DAIKON>/distance_to_user2.data &gt; /velocity3.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>5066</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>is_user_watching_drone(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64, geometry_msgs/Twist, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..main():::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return == 0</INV> <SAMPLES>3</SAMPLES> <DAIKON>return == 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>main()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return == 0</INV> <SAMPLES>3</SAMPLES> <DAIKON>return == 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>main()</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0 != null</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.seq != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.12558540964</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.12558540964</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.0548103322109</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.0548103322109</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.947049332728</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.947049332728</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.801220859091</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.801220859091</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.secs != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.26619671985</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.26619671985</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.0291180297823</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.0291180297823</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.28668502696</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.28668502696</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.29433937991</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.29433937991</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.0963058988184</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.0963058988184</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.0889079306675</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.0889079306675</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.757947151771</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.757947151771</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.340324219485</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.340324219485</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/is_user_watching_drone1 != null</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/is_user_watching_drone1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2 != null</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/distance_to_user2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data != 0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/distance_to_user2.data != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt;= 1.25218630782</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/distance_to_user2.data &gt;= 1.25218630782</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.x</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x != /vicon/TELLO/TELLO0.transform.translation.y</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x != /vicon/TELLO/TELLO0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5388</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>5388</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data one of { &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;Finished behavior&quot; probability: 3.70%	count:191.0 total:5165.0
	&quot;GO TO GOAL&quot; probability: 72.33%	count:3736.0 total:5165.0
	&quot;GOAL REACHED&quot; probability: 21.26%	count:1098.0 total:5165.0
	&quot;NO VICON DATA; LANDING&quot; probability: 2.71%	count:140.0 total:5165.0</INV> <SAMPLES>5388</SAMPLES> <DAIKON>return.data one of { &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;Finished behavior&quot; probability: 3.70%	count:191.0 total:5165.0
	&quot;GO TO GOAL&quot; probability: 72.33%	count:3736.0 total:5165.0
	&quot;GOAL REACHED&quot; probability: 21.26%	count:1098.0 total:5165.0
	&quot;NO VICON DATA; LANDING&quot; probability: 2.71%	count:140.0 total:5165.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0 != null</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.seq != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.14126365383</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &lt;= 0.14126365383</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.0841885863074</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y &gt;= -0.0841885863074</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.993474297545</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &lt;= 0.993474297545</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.810660573591</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z &gt;= -0.810660573591</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.secs != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.26974787259</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &lt;= 1.26974787259</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.0289500046134</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z &gt;= 0.0289500046134</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.28326001683</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.x &lt;= 1.28326001683</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.40168671231</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.y &lt;= 1.40168671231</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.120890343164</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &lt;= 0.120890343164</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.179442555617</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x &gt;= -0.179442555617</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.782714727601</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &lt;= 0.782714727601</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.347823526845</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.w &gt;= -0.347823526845</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/is_user_watching_drone1 != null</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/is_user_watching_drone1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2 != null</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/distance_to_user2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data != 0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/distance_to_user2.data != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/distance_to_user2.data &gt;= 1.1780918354</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/distance_to_user2.data &gt;= 1.1780918354</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.x</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.y != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.child_frame_id &gt; /vicon/TELLO/TELLO0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.z != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.translation.z != /vicon/TELLO/TELLO0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</INV> <SAMPLES>5464</SAMPLES> <DAIKON>/vicon/TELLO/TELLO0.transform.rotation.x != /vicon/TELLO/TELLO0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 19.33%	count:682.0 total:3529.0
	&quot;0.0&quot; probability: 80.67%	count:2847.0 total:3529.0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 19.33%	count:682.0 total:3529.0
	&quot;0.0&quot; probability: 80.67%	count:2847.0 total:3529.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &lt; orig(/distance_to_user2.data)</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.y &lt; orig(/distance_to_user2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &lt; orig(/distance_to_user2.data)</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.x &lt; orig(/distance_to_user2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z &lt; orig(/distance_to_user2.data)</INV> <SAMPLES>5464</SAMPLES> <DAIKON>return.linear.z &lt; orig(/distance_to_user2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, std_msgs/Bool, std_msgs/Float64)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..viconTELLOTELLO():::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt;= 0.14126365383</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.y &lt;= 0.14126365383</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &gt;= -0.169253483593</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.y &gt;= -0.169253483593</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &lt;= 0.996509522666</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.z &lt;= 0.996509522666</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt;= -0.846762313534</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.z &gt;= -0.846762313534</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.secs != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &lt;= 1.27103391969</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.z &lt;= 1.27103391969</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt;= 0.0273507967395</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.z &gt;= 0.0273507967395</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.nsecs != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &lt;= 1.28668502696</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.x &lt;= 1.28668502696</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &lt;= 1.40168671231</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.y &lt;= 1.40168671231</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &lt;= 0.127176027411</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.x &lt;= 0.127176027411</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &gt;= -0.179442555617</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.x &gt;= -0.179442555617</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w != 0</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &lt;= 0.988008505081</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.w &lt;= 0.988008505081</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &gt;= -0.481696799205</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.w &gt;= -0.481696799205</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.z</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.w</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id &gt; return.header.frame_id</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.child_frame_id &gt; return.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.rotation.x</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.rotation.w</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != return.transform.translation.x</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.translation.z != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != return.transform.rotation.w</INV> <SAMPLES>24681</SAMPLES> <DAIKON>return.transform.rotation.x != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
</PPT>
</INVARIANTS>
