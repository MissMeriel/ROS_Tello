<INVARIANTS>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..main():::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return == 0</INV> <SAMPLES>3</SAMPLES> <DAIKON>return == 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>main()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return == 0</INV> <SAMPLES>3</SAMPLES> <DAIKON>return == 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>main()</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999445256329)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999445256329)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0994667309236)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0994667309236)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0123329331482)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0123329331482)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0925445664216)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0925445664216)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.029311320057)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.029311320057)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.19114392193)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.19114392193)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.12411675036)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.12411675036)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00195980720689)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00195980720689)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00524757373686)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00524757373686)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00650290614596)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00650290614596)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00408257160741)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00408257160741)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.33625933577)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.33625933577)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0657485048459)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0657485048459)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.13082997875)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.13082997875)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0514218128104)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0514218128104)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163552044307)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163552044307)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05242909417)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05242909417)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276342236547)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276342236547)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999598222494)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999598222494)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.765650080046)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.765650080046)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.110095295384)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.110095295384)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= 0.0109747507955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= 0.0109747507955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0709192517339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0709192517339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0621035196399)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0621035196399)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.631865219259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.631865219259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0402241026347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0402241026347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.919880325121)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.919880325121)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.26839615239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.26839615239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.984381822962)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.984381822962)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0385661027438)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0385661027438)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198698787493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198698787493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00662679015382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00662679015382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.0068352641971)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.0068352641971)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448487477864)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448487477864)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.33625965486)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.33625965486)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656954191624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656954191624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131121640413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131121640413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0516363599869)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0516363599869)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0164068895762)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0164068895762)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05277301232)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05277301232)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276358412143)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276358412143)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0925445664216</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0402241026347</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &lt;= 1.12411675036</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x &lt;= 0.919880325121</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y &lt;= 1.26839615239</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt;= 0.110095295384</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0109747507955</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999598222494</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0068352641971</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00448487477864</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625965486</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0656954191624</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &lt;= 1.05277301232</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x &gt;= -0.131121640413</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516363599869</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198698787493</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00662679015382</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param2 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PPTNAME>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0925445664216</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0402241026347</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 1.12411675036</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.919880325121</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.26839615239</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.110095295384</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0109747507955</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999598222494</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0068352641971</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00448487477864</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625965486</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0656954191624</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05277301232</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.131121640413</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516363599869</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198698787493</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00662679015382</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0925445664216</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0402241026347</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 1.12411675036</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.919880325121</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.26839615239</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.110095295384</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0109747507955</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999598222494</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0068352641971</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00448487477864</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625965486</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0656954191624</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05277301232</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.131121640413</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516363599869</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198698787493</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00662679015382</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5246</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0709192517339</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0709192517339</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0621035196399</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0621035196399</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.631865219259</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.631865219259</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0389050284772</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0389050284772</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.90167317299</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.90167317299</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0385661027438</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0385661027438</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.919880325121</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.26839615239</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y &gt;= -0.924656166791</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.y &gt;= -0.924656166791</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.110095295384</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0109747507955</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996364881447, 0.997732800246, 0.998803815219 }
	&quot;0.765650080046&quot; probability: 0.03%
	&quot;0.976635936488&quot; probability: 0.17%
	&quot;0.993195158835&quot; probability: 0.48%
	&quot;0.994762941873&quot; probability: 3.22%
	&quot;0.996364881447&quot; probability: 11.40%
	&quot;0.997732800246&quot; probability: 49.45%
	&quot;0.998803815219&quot; probability: 35.26%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996364881447, 0.997732800246, 0.998803815219 }
	&quot;0.765650080046&quot; probability: 0.03%
	&quot;0.976635936488&quot; probability: 0.17%
	&quot;0.993195158835&quot; probability: 0.48%
	&quot;0.994762941873&quot; probability: 3.22%
	&quot;0.996364881447&quot; probability: 11.40%
	&quot;0.997732800246&quot; probability: 49.45%
	&quot;0.998803815219&quot; probability: 35.26%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999344058537</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999344058537</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= 0.765650080046</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.765650080046</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00394792671084, 0.00590170624157 }
	&quot;-0.00394792671084&quot; probability: 86.91%
	&quot;0.00590170624157&quot; probability: 13.09%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00394792671084, 0.00590170624157 }
	&quot;-0.00394792671084&quot; probability: 86.91%
	&quot;0.00590170624157&quot; probability: 13.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0068352641971</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00448487477864</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660025410712, 0.332232624059, 0.336236005902 }
	&quot;0.0660025410712&quot; probability: 13.09%
	&quot;0.332232624059&quot; probability: 38.70%
	&quot;0.336236005902&quot; probability: 48.21%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660025410712, 0.332232624059, 0.336236005902 }
	&quot;0.0660025410712&quot; probability: 13.09%
	&quot;0.332232624059&quot; probability: 38.70%
	&quot;0.336236005902&quot; probability: 48.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336256947169</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336256947169</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0656954191624</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276451768786, 1.05237768422 }
	&quot;0.276451768786&quot; probability: 13.09%
	&quot;1.05237768422&quot; probability: 86.91%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276451768786, 1.05237768422 }
	&quot;0.276451768786&quot; probability: 13.09%
	&quot;1.05237768422&quot; probability: 86.91%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05250279099</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05250279099</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276402968507</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276402968507</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.13071708487, -0.129715154655, -0.0777452514542 }
	&quot;-0.13071708487&quot; probability: 85.25%
	&quot;-0.129715154655&quot; probability: 1.65%
	&quot;-0.0777452514542&quot; probability: 13.09%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.13071708487, -0.129715154655, -0.0777452514542 }
	&quot;-0.13071708487&quot; probability: 85.25%
	&quot;-0.129715154655&quot; probability: 1.65%
	&quot;-0.0777452514542&quot; probability: 13.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130844829891</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130844829891</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0161094657752, 0.0497686961849, 0.05131795062 }
	&quot;-0.0161094657752&quot; probability: 13.09%
	&quot;0.0497686961849&quot; probability: 48.21%
	&quot;0.05131795062&quot; probability: 38.70%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0161094657752, 0.0497686961849, 0.05131795062 }
	&quot;-0.0161094657752&quot; probability: 13.09%
	&quot;0.0497686961849&quot; probability: 48.21%
	&quot;0.05131795062&quot; probability: 38.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516226177403</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516226177403</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00662679015382, -0.00508971788055, -0.00354324353796, 1.70098169475E-4, 0.00191112398175 }
	&quot;-0.00662679015382&quot; probability: 0.11%
	&quot;-0.00508971788055&quot; probability: 12.76%
	&quot;-0.00354324353796&quot; probability: 0.22%
	&quot;1.70098169475E-4&quot; probability: 38.70%
	&quot;0.00191112398175&quot; probability: 48.21%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00662679015382, -0.00508971788055, -0.00354324353796, 1.70098169475E-4, 0.00191112398175 }
	&quot;-0.00662679015382&quot; probability: 0.11%
	&quot;-0.00508971788055&quot; probability: 12.76%
	&quot;-0.00354324353796&quot; probability: 0.22%
	&quot;1.70098169475E-4&quot; probability: 38.70%
	&quot;0.00191112398175&quot; probability: 48.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198698787493</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00662679015382</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941767545531, 0.943189585474, 0.997789020388 }
	&quot;0.941767545531&quot; probability: 48.21%
	&quot;0.943189585474&quot; probability: 38.70%
	&quot;0.997789020388&quot; probability: 13.09%</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941767545531, 0.943189585474, 0.997789020388 }
	&quot;0.941767545531&quot; probability: 48.21%
	&quot;0.943189585474&quot; probability: 38.70%
	&quot;0.997789020388&quot; probability: 13.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.w &lt;= 0.997807704997</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.w &lt;= 0.997807704997</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.w &gt;= 0.941759890539</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.w &gt;= 0.941759890539</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 57.89%	count:1903.0 total:3287.0
	&quot;y&quot; probability: 42.11%	count:1384.0 total:3287.0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 57.89%	count:1903.0 total:3287.0
	&quot;y&quot; probability: 42.11%	count:1384.0 total:3287.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != param1.header.stamp.nsecs</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.header.stamp.nsecs != param1.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>3574</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0925445664216</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0402241026347</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023569, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024239, 1550024246, 1550024248, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.02%
	&quot;1548777254&quot; probability: 0.02%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.01%
	&quot;1548777258&quot; probability: 0.03%
	&quot;1548777260&quot; probability: 0.01%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.01%
	&quot;1548777268&quot; probability: 0.01%
	&quot;1548777269&quot; probability: 0.01%
	&quot;1548777270&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777275&quot; probability: 0.01%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1548777277&quot; probability: 0.00%
	&quot;1550023569&quot; probability: 0.08%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.01%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.03%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024239&quot; probability: 0.09%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024248&quot; probability: 0.02%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.02%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024256&quot; probability: 0.01%
	&quot;1550024257&quot; probability: 0.00%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.01%
	&quot;1550024315&quot; probability: 0.01%
	&quot;1550024316&quot; probability: 0.02%
	&quot;1550024318&quot; probability: 0.02%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.03%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.04%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023569, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024239, 1550024246, 1550024248, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.02%
	&quot;1548777254&quot; probability: 0.02%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.01%
	&quot;1548777258&quot; probability: 0.03%
	&quot;1548777260&quot; probability: 0.01%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.01%
	&quot;1548777268&quot; probability: 0.01%
	&quot;1548777269&quot; probability: 0.01%
	&quot;1548777270&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777275&quot; probability: 0.01%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1548777277&quot; probability: 0.00%
	&quot;1550023569&quot; probability: 0.08%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.01%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.03%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024239&quot; probability: 0.09%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024248&quot; probability: 0.02%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.02%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024256&quot; probability: 0.01%
	&quot;1550024257&quot; probability: 0.00%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.01%
	&quot;1550024315&quot; probability: 0.01%
	&quot;1550024316&quot; probability: 0.02%
	&quot;1550024318&quot; probability: 0.02%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.03%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.04%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 1.12411675036</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.789021696445</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.789021696445</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 0.785167794201</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 0.785167794201</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0994667309236</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0994667309236</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0123329331482</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0123329331482</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.990104091257&quot; probability: 0.51%
	&quot;0.996675979108&quot; probability: 1.91%
	&quot;0.998004160168&quot; probability: 84.43%
	&quot;0.999056851193&quot; probability: 13.08%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.990104091257&quot; probability: 0.51%
	&quot;0.996675979108&quot; probability: 1.91%
	&quot;0.998004160168&quot; probability: 84.43%
	&quot;0.999056851193&quot; probability: 13.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999598222494</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.09%
	&quot;0.00579792162242&quot; probability: 31.91%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.09%
	&quot;0.00579792162242&quot; probability: 31.91%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0066764762915</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0066764762915</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00447231667998</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00447231667998</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.91%
	&quot;0.33209650183&quot; probability: 41.21%
	&quot;0.336192066889&quot; probability: 26.87%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.91%
	&quot;0.33209650183&quot; probability: 41.21%
	&quot;0.336192066889&quot; probability: 26.87%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625965486</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0657485048459</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0657485048459</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.91%
	&quot;1.05235948185&quot; probability: 68.09%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.91%
	&quot;1.05235948185&quot; probability: 68.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05277301232</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.09%
	&quot;-0.0768714144176&quot; probability: 31.91%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.09%
	&quot;-0.0768714144176&quot; probability: 31.91%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.131121640413</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.91%
	&quot;0.0496432718844&quot; probability: 26.87%
	&quot;0.0511190919793&quot; probability: 41.21%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.91%
	&quot;0.0496432718844&quot; probability: 26.87%
	&quot;0.0511190919793&quot; probability: 41.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516363599869</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.016356067981</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.016356067981</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.30%
	&quot;-0.00509819561463&quot; probability: 31.61%
	&quot;5.12162687346E-4&quot; probability: 41.21%
	&quot;0.00187291365961&quot; probability: 26.87%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00655711337778, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.30%
	&quot;-0.00509819561463&quot; probability: 31.61%
	&quot;5.12162687346E-4&quot; probability: 41.21%
	&quot;0.00187291365961&quot; probability: 26.87%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198265958772</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198265958772</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00658231279147</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00658231279147</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.87%
	&quot;0.943236931927&quot; probability: 41.21%
	&quot;0.997787593551&quot; probability: 31.91%</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.87%
	&quot;0.943236931927&quot; probability: 41.21%
	&quot;0.997787593551&quot; probability: 31.91%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 5.68%	count:130.0 total:2288.0
	&quot;nonsensical&quot; probability: 24.61%	count:563.0 total:2288.0
	&quot;y&quot; probability: 69.71%	count:1595.0 total:2288.0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 5.68%	count:130.0 total:2288.0
	&quot;nonsensical&quot; probability: 24.61%	count:563.0 total:2288.0
	&quot;y&quot; probability: 69.71%	count:1595.0 total:2288.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1672</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0925445664216</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.029311320057</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.029311320057</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 1.12411675036</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.19114392193</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.19114392193</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 4.9E-324</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0994667309236</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0994667309236</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0123329331482</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0123329331482</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999445256329</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999445256329</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00650290614596</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00650290614596</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00408257160741</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00408257160741</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625933577</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625933577</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0657485048459</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0657485048459</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05242909417</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05242909417</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.13082997875</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.13082997875</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0514218128104</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0514218128104</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163552044307</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163552044307</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00195980720689</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00195980720689</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00524757373686</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00524757373686</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt; param1.transform.translation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0709192517339</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0709192517339</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0621035196399</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0621035196399</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.631865219259</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.631865219259</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0402241026347</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.984381822962</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.984381822962</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0385661027438</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0385661027438</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.919880325121</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.26839615239</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.110095295384</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0109747507955</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999598222494</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= 0.765650080046</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.765650080046</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0068352641971</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00448487477864</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625965486</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0656954191624</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05277301232</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276358412143</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276358412143</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.131121640413</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516363599869</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198698787493</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00662679015382</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0468003837374</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0468003837374</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0490744331462</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0490744331462</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.0607827937472</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.0607827937472</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0402241026347</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.04%
	&quot;1548777260&quot; probability: 0.02%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.02%
	&quot;1548777268&quot; probability: 0.02%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777272&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.04%
	&quot;1548777275&quot; probability: 0.02%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1548777277&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.03%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.02%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024249&quot; probability: 0.01%
	&quot;1550024251&quot; probability: 0.05%
	&quot;1550024253&quot; probability: 0.03%
	&quot;1550024255&quot; probability: 0.03%
	&quot;1550024256&quot; probability: 0.02%
	&quot;1550024257&quot; probability: 0.01%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.02%
	&quot;1550024316&quot; probability: 0.03%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.04%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.04%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.06%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.04%
	&quot;1548777260&quot; probability: 0.02%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.02%
	&quot;1548777268&quot; probability: 0.02%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777272&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.04%
	&quot;1548777275&quot; probability: 0.02%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1548777277&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.03%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.02%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024249&quot; probability: 0.01%
	&quot;1550024251&quot; probability: 0.05%
	&quot;1550024253&quot; probability: 0.03%
	&quot;1550024255&quot; probability: 0.03%
	&quot;1550024256&quot; probability: 0.02%
	&quot;1550024257&quot; probability: 0.01%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.02%
	&quot;1550024316&quot; probability: 0.03%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.04%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.04%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.06%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.984381822962</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.984381822962</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.372185728107</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.372185728107</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.789021696445</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.789021696445</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 0.785167794201</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 0.785167794201</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0759643296152</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0759643296152</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0179965110988</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0179965110988</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 2.69%
	&quot;0.998035346448&quot; probability: 88.36%
	&quot;0.999258720505&quot; probability: 8.95%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 2.69%
	&quot;0.998035346448&quot; probability: 88.36%
	&quot;0.999258720505&quot; probability: 8.95%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999598222494</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= 0.996472375094</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.996472375094</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 70.07%
	&quot;0.00569162910516&quot; probability: 29.93%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 70.07%
	&quot;0.00569162910516&quot; probability: 29.93%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0066764762915</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0066764762915</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00447231667998</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00447231667998</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 29.93%
	&quot;0.332100277782&quot; probability: 42.83%
	&quot;0.336238539909&quot; probability: 27.24%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 29.93%
	&quot;0.332100277782&quot; probability: 42.83%
	&quot;0.336238539909&quot; probability: 27.24%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625965486</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659152224716</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659152224716</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 29.93%
	&quot;1.05236375187&quot; probability: 70.07%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 29.93%
	&quot;1.05236375187&quot; probability: 70.07%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05277301232</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276358412143</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276358412143</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 64.78%
	&quot;-0.129780306357&quot; probability: 5.29%
	&quot;-0.0778104198604&quot; probability: 29.93%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 64.78%
	&quot;-0.129780306357&quot; probability: 5.29%
	&quot;-0.0778104198604&quot; probability: 29.93%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.131121640413</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 29.93%
	&quot;0.0498263805988&quot; probability: 27.24%
	&quot;0.0513830151476&quot; probability: 42.83%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 29.93%
	&quot;0.0498263805988&quot; probability: 27.24%
	&quot;0.0513830151476&quot; probability: 42.83%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516363599869</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.016356067981</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.016356067981</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.45%
	&quot;-0.00428861534958&quot; probability: 29.48%
	&quot;7.26569747456E-5&quot; probability: 42.83%
	&quot;0.00192395493077&quot; probability: 27.24%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.45%
	&quot;-0.00428861534958&quot; probability: 29.48%
	&quot;7.26569747456E-5&quot; probability: 42.83%
	&quot;0.00192395493077&quot; probability: 27.24%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198265958772</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198265958772</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00658231279147</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00658231279147</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 27.24%
	&quot;0.943235340366&quot; probability: 42.83%
	&quot;0.997796183469&quot; probability: 29.93%</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 27.24%
	&quot;0.943235340366&quot; probability: 42.83%
	&quot;0.997796183469&quot; probability: 29.93%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 21.35%	count:130.0 total:609.0
	&quot;y&quot; probability: 78.65%	count:479.0 total:609.0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 21.35%	count:130.0 total:609.0
	&quot;y&quot; probability: 78.65%	count:479.0 total:609.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1117</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0925445664216</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0389050284772</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0389050284772</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 1.12411675036</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.919880325121</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.26839615239</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.110095295384</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0109747507955</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994711668014, 0.995741860346, 0.996888816112, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.15%
	&quot;0.990104091257&quot; probability: 0.20%
	&quot;0.993195158835&quot; probability: 0.42%
	&quot;0.994711668014&quot; probability: 0.17%
	&quot;0.995741860346&quot; probability: 5.72%
	&quot;0.996888816112&quot; probability: 8.60%
	&quot;0.998004160168&quot; probability: 65.88%
	&quot;0.999056851193&quot; probability: 18.81%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994711668014, 0.995741860346, 0.996888816112, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.15%
	&quot;0.990104091257&quot; probability: 0.20%
	&quot;0.993195158835&quot; probability: 0.42%
	&quot;0.994711668014&quot; probability: 0.17%
	&quot;0.995741860346&quot; probability: 5.72%
	&quot;0.996888816112&quot; probability: 8.60%
	&quot;0.998004160168&quot; probability: 65.88%
	&quot;0.999056851193&quot; probability: 18.81%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999445256329</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999445256329</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 83.87%
	&quot;0.00579792162242&quot; probability: 15.96%
	&quot;0.0068352641971&quot; probability: 0.17%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 83.87%
	&quot;0.00579792162242&quot; probability: 15.96%
	&quot;0.0068352641971&quot; probability: 0.17%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0068352641971</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00448487477864</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.13%
	&quot;0.33209650183&quot; probability: 38.60%
	&quot;0.336192066889&quot; probability: 45.27%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.13%
	&quot;0.33209650183&quot; probability: 38.60%
	&quot;0.336192066889&quot; probability: 45.27%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625933577</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625933577</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0656954191624</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.13%
	&quot;1.05235948185&quot; probability: 83.87%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.13%
	&quot;1.05235948185&quot; probability: 83.87%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05250279099</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05250279099</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.87%
	&quot;-0.0768714144176&quot; probability: 16.13%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.87%
	&quot;-0.0768714144176&quot; probability: 16.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130844829891</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130844829891</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.13%
	&quot;0.0496432718844&quot; probability: 45.27%
	&quot;0.0511190919793&quot; probability: 38.60%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.13%
	&quot;0.0496432718844&quot; probability: 45.27%
	&quot;0.0511190919793&quot; probability: 38.60%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516226177403</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516226177403</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.10%
	&quot;-0.00509819561463&quot; probability: 15.83%
	&quot;-0.00354324353796&quot; probability: 0.19%
	&quot;5.12162687346E-4&quot; probability: 38.60%
	&quot;0.00187291365961&quot; probability: 45.27%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.10%
	&quot;-0.00509819561463&quot; probability: 15.83%
	&quot;-0.00354324353796&quot; probability: 0.19%
	&quot;5.12162687346E-4&quot; probability: 38.60%
	&quot;0.00187291365961&quot; probability: 45.27%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198698787493</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00662679015382</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 45.27%
	&quot;0.943236931927&quot; probability: 38.60%
	&quot;0.997787593551&quot; probability: 16.13%</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 45.27%
	&quot;0.943236931927&quot; probability: 38.60%
	&quot;0.997787593551&quot; probability: 16.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 48.45%	count:1903.0 total:3928.0
	&quot;nonsensical&quot; probability: 9.01%	count:354.0 total:3928.0
	&quot;y&quot; probability: 42.54%	count:1671.0 total:3928.0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 48.45%	count:1903.0 total:3928.0
	&quot;nonsensical&quot; probability: 9.01%	count:354.0 total:3928.0
	&quot;y&quot; probability: 42.54%	count:1671.0 total:3928.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4129</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0925445664216</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.029311320057</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.029311320057</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 1.12411675036</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.19114392193</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.19114392193</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 4.9E-324</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0994667309236</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0994667309236</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0123329331482</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0123329331482</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999445256329</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999445256329</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00650290614596</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00650290614596</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00408257160741</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00408257160741</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625933577</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625933577</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0657485048459</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0657485048459</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05242909417</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05242909417</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.13082997875</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.13082997875</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0514218128104</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0514218128104</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163552044307</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163552044307</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00195980720689</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00195980720689</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00524757373686</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00524757373686</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt; param1.transform.translation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>555</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0709192517339</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0709192517339</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0621035196399</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0621035196399</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.631865219259</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.631865219259</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0402241026347</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.984381822962</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.984381822962</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0385661027438</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0385661027438</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.919880325121</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.26839615239</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.110095295384</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0109747507955</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999598222494</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= 0.765650080046</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.765650080046</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.0068352641971</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00448487477864</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.33625965486</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0656954191624</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05277301232</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276358412143</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276358412143</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.131121640413</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0516363599869</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00198698787493</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00662679015382</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4691</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999344058537)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999344058537)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.765650080046)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.765650080046)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996364881447, 0.997732800246, 0.998803815219 }
	&quot;0.765650080046&quot; probability: 0.03%
	&quot;0.976635936488&quot; probability: 0.17%
	&quot;0.993195158835&quot; probability: 0.48%
	&quot;0.994762941873&quot; probability: 3.22%
	&quot;0.996364881447&quot; probability: 11.40%
	&quot;0.997732800246&quot; probability: 49.45%
	&quot;0.998803815219&quot; probability: 35.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996364881447, 0.997732800246, 0.998803815219 }
	&quot;0.765650080046&quot; probability: 0.03%
	&quot;0.976635936488&quot; probability: 0.17%
	&quot;0.993195158835&quot; probability: 0.48%
	&quot;0.994762941873&quot; probability: 3.22%
	&quot;0.996364881447&quot; probability: 11.40%
	&quot;0.997732800246&quot; probability: 49.45%
	&quot;0.998803815219&quot; probability: 35.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0709192517339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0709192517339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0621035196399)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0621035196399)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.631865219259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.631865219259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0389050284772)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0389050284772)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.y) &gt;= -0.924656166791)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.y) &gt;= -0.924656166791)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.90167317299)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.90167317299)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0385661027438)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0385661027438)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) &lt;= 0.997807704997)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) &lt;= 0.997807704997)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) &gt;= 0.941759890539)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) &gt;= 0.941759890539)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941767545531, 0.943189585474, 0.997789020388 }
	&quot;0.941767545531&quot; probability: 48.21%
	&quot;0.943189585474&quot; probability: 38.70%
	&quot;0.997789020388&quot; probability: 13.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941767545531, 0.943189585474, 0.997789020388 }
	&quot;0.941767545531&quot; probability: 48.21%
	&quot;0.943189585474&quot; probability: 38.70%
	&quot;0.997789020388&quot; probability: 13.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00508971788055, -0.00354324353796, 1.70098169475E-4, 0.00191112398175 }
	&quot;-0.00662679015382&quot; probability: 0.11%
	&quot;-0.00508971788055&quot; probability: 12.76%
	&quot;-0.00354324353796&quot; probability: 0.22%
	&quot;1.70098169475E-4&quot; probability: 38.70%
	&quot;0.00191112398175&quot; probability: 48.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00508971788055, -0.00354324353796, 1.70098169475E-4, 0.00191112398175 }
	&quot;-0.00662679015382&quot; probability: 0.11%
	&quot;-0.00508971788055&quot; probability: 12.76%
	&quot;-0.00354324353796&quot; probability: 0.22%
	&quot;1.70098169475E-4&quot; probability: 38.70%
	&quot;0.00191112398175&quot; probability: 48.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00394792671084, 0.00590170624157 }
	&quot;-0.00394792671084&quot; probability: 86.91%
	&quot;0.00590170624157&quot; probability: 13.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00394792671084, 0.00590170624157 }
	&quot;-0.00394792671084&quot; probability: 86.91%
	&quot;0.00590170624157&quot; probability: 13.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336256947169)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336256947169)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660025410712, 0.332232624059, 0.336236005902 }
	&quot;0.0660025410712&quot; probability: 13.09%
	&quot;0.332232624059&quot; probability: 38.70%
	&quot;0.336236005902&quot; probability: 48.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660025410712, 0.332232624059, 0.336236005902 }
	&quot;0.0660025410712&quot; probability: 13.09%
	&quot;0.332232624059&quot; probability: 38.70%
	&quot;0.336236005902&quot; probability: 48.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130844829891)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130844829891)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.13071708487, -0.129715154655, -0.0777452514542 }
	&quot;-0.13071708487&quot; probability: 85.25%
	&quot;-0.129715154655&quot; probability: 1.65%
	&quot;-0.0777452514542&quot; probability: 13.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.13071708487, -0.129715154655, -0.0777452514542 }
	&quot;-0.13071708487&quot; probability: 85.25%
	&quot;-0.129715154655&quot; probability: 1.65%
	&quot;-0.0777452514542&quot; probability: 13.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516226177403)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516226177403)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0161094657752, 0.0497686961849, 0.05131795062 }
	&quot;-0.0161094657752&quot; probability: 13.09%
	&quot;0.0497686961849&quot; probability: 48.21%
	&quot;0.05131795062&quot; probability: 38.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0161094657752, 0.0497686961849, 0.05131795062 }
	&quot;-0.0161094657752&quot; probability: 13.09%
	&quot;0.0497686961849&quot; probability: 48.21%
	&quot;0.05131795062&quot; probability: 38.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05250279099)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05250279099)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276402968507)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276402968507)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276451768786, 1.05237768422 }
	&quot;0.276451768786&quot; probability: 13.09%
	&quot;1.05237768422&quot; probability: 86.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276451768786, 1.05237768422 }
	&quot;0.276451768786&quot; probability: 13.09%
	&quot;1.05237768422&quot; probability: 86.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 57.89%	count:1903.0 total:3287.0
	&quot;y&quot; probability: 42.11%	count:1384.0 total:3287.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 57.89%	count:1903.0 total:3287.0
	&quot;y&quot; probability: 42.11%	count:1384.0 total:3287.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999430746398)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999430746398)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.994785802024, 0.996223880797, 0.997307785421, 0.998453150643 }
	&quot;0.926599849731&quot; probability: 0.03%
	&quot;0.930715267134&quot; probability: 0.03%
	&quot;0.975731991017&quot; probability: 0.03%
	&quot;0.991980662549&quot; probability: 0.06%
	&quot;0.993534224488&quot; probability: 0.39%
	&quot;0.994785802024&quot; probability: 2.01%
	&quot;0.996223880797&quot; probability: 9.63%
	&quot;0.997307785421&quot; probability: 14.49%
	&quot;0.998453150643&quot; probability: 73.34%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.994785802024, 0.996223880797, 0.997307785421, 0.998453150643 }
	&quot;0.926599849731&quot; probability: 0.03%
	&quot;0.930715267134&quot; probability: 0.03%
	&quot;0.975731991017&quot; probability: 0.03%
	&quot;0.991980662549&quot; probability: 0.06%
	&quot;0.993534224488&quot; probability: 0.39%
	&quot;0.994785802024&quot; probability: 2.01%
	&quot;0.996223880797&quot; probability: 9.63%
	&quot;0.997307785421&quot; probability: 14.49%
	&quot;0.998453150643&quot; probability: 73.34%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.089547849628)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.089547849628)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.00200394076527)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.00200394076527)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425276387071)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425276387071)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &gt;= -0.924663381543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &gt;= -0.924663381543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.902971109035)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.902971109035)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.997788543441 }
	&quot;0.941773958906&quot; probability: 48.21%
	&quot;0.943237478084&quot; probability: 38.70%
	&quot;0.997788543441&quot; probability: 13.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.997788543441 }
	&quot;0.941773958906&quot; probability: 48.21%
	&quot;0.943237478084&quot; probability: 38.70%
	&quot;0.997788543441&quot; probability: 13.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.997788543441 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.997788543441 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.00515471312739, -0.00357115376734, 1.65917698752E-4, 0.00188572349177 }
	&quot;-0.00659605094816&quot; probability: 0.14%
	&quot;-0.00515471312739&quot; probability: 12.73%
	&quot;-0.00357115376734&quot; probability: 0.22%
	&quot;1.65917698752E-4&quot; probability: 38.70%
	&quot;0.00188572349177&quot; probability: 48.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.00515471312739, -0.00357115376734, 1.65917698752E-4, 0.00188572349177 }
	&quot;-0.00659605094816&quot; probability: 0.14%
	&quot;-0.00515471312739&quot; probability: 12.73%
	&quot;-0.00357115376734&quot; probability: 0.22%
	&quot;1.65917698752E-4&quot; probability: 38.70%
	&quot;0.00188572349177&quot; probability: 48.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00395894206308, 0.00593824107606 }
	&quot;-0.00395894206308&quot; probability: 86.91%
	&quot;0.00593824107606&quot; probability: 13.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00395894206308, 0.00593824107606 }
	&quot;-0.00395894206308&quot; probability: 86.91%
	&quot;0.00593824107606&quot; probability: 13.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336256651125)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336256651125)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660014303057, 0.33209531689, 0.336218055957 }
	&quot;0.0660014303057&quot; probability: 13.09%
	&quot;0.33209531689&quot; probability: 38.70%
	&quot;0.336218055957&quot; probability: 48.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660014303057, 0.33209531689, 0.336218055957 }
	&quot;0.0660014303057&quot; probability: 13.09%
	&quot;0.33209531689&quot; probability: 38.70%
	&quot;0.336218055957&quot; probability: 48.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130721478912, -0.129710901827, -0.0777246211023 }
	&quot;-0.130721478912&quot; probability: 85.17%
	&quot;-0.129710901827&quot; probability: 1.73%
	&quot;-0.0777246211023&quot; probability: 13.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130721478912, -0.129710901827, -0.0777246211023 }
	&quot;-0.130721478912&quot; probability: 85.17%
	&quot;-0.129710901827&quot; probability: 1.73%
	&quot;-0.0777246211023&quot; probability: 13.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513761028967)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513761028967)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0160548980268, 0.0497529588339, 0.0512137702218 }
	&quot;-0.0160548980268&quot; probability: 13.09%
	&quot;0.0497529588339&quot; probability: 48.21%
	&quot;0.0512137702218&quot; probability: 38.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0160548980268, 0.0497529588339, 0.0512137702218 }
	&quot;-0.0160548980268&quot; probability: 13.09%
	&quot;0.0497529588339&quot; probability: 48.21%
	&quot;0.0512137702218&quot; probability: 38.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276412899227)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276412899227)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276448715348, 1.05240257554 }
	&quot;0.276448715348&quot; probability: 13.09%
	&quot;1.05240257554&quot; probability: 86.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276448715348, 1.05240257554 }
	&quot;0.276448715348&quot; probability: 13.09%
	&quot;1.05240257554&quot; probability: 86.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param2.data &lt;= orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param2.data &lt;= orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.65%	count:3100.0 total:3111.0
	&quot;GOAL REACHED&quot; probability: 0.35%	count:11.0 total:3111.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.65%	count:3100.0 total:3111.0
	&quot;GOAL REACHED&quot; probability: 0.35%	count:11.0 total:3111.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  &lt;==&gt;  (orig(param2.data) == &quot;nonsensical&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  &lt;==&gt;  (orig(param2.data) == &quot;nonsensical&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150055, 150719, 160133, 160731, 160768, 160783, 161050, 161228, 161232, 161239, 161242, 201119, 201817, 201942, 201947, 202012, 202017, 202065, 202077, 202082 }
	&quot;150055&quot; probability: 0.27%
	&quot;150719&quot; probability: 0.05%
	&quot;160133&quot; probability: 0.00%
	&quot;160731&quot; probability: 0.02%
	&quot;160768&quot; probability: 0.01%
	&quot;160783&quot; probability: 0.12%
	&quot;161050&quot; probability: 0.06%
	&quot;161228&quot; probability: 0.00%
	&quot;161232&quot; probability: 0.00%
	&quot;161239&quot; probability: 0.00%
	&quot;161242&quot; probability: 0.00%
	&quot;201119&quot; probability: 0.30%
	&quot;201817&quot; probability: 0.06%
	&quot;201942&quot; probability: 0.00%
	&quot;201947&quot; probability: 0.03%
	&quot;202012&quot; probability: 0.00%
	&quot;202017&quot; probability: 0.02%
	&quot;202065&quot; probability: 0.00%
	&quot;202077&quot; probability: 0.00%
	&quot;202082&quot; probability: 0.05%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 144424099, 194492908, 374522394, 413023043, 494468345, 544407932, 574409426, 666146201, 703024690, 743434032, 753047135, 803145821, 813064097, 843076126, 844417810, 856007530, 894484916, 894530427, 953116595 }
	&quot;103161645&quot; probability: 0.00%
	&quot;144424099&quot; probability: 0.00%
	&quot;194492908&quot; probability: 0.03%
	&quot;374522394&quot; probability: 0.00%
	&quot;413023043&quot; probability: 0.02%
	&quot;494468345&quot; probability: 0.00%
	&quot;544407932&quot; probability: 0.05%
	&quot;574409426&quot; probability: 0.30%
	&quot;666146201&quot; probability: 0.05%
	&quot;703024690&quot; probability: 0.00%
	&quot;743434032&quot; probability: 0.00%
	&quot;753047135&quot; probability: 0.06%
	&quot;803145821&quot; probability: 0.01%
	&quot;813064097&quot; probability: 0.00%
	&quot;843076126&quot; probability: 0.00%
	&quot;844417810&quot; probability: 0.00%
	&quot;856007530&quot; probability: 0.27%
	&quot;894484916&quot; probability: 0.06%
	&quot;894530427&quot; probability: 0.02%
	&quot;953116595&quot; probability: 0.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777249, 1548777252, 1548777254, 1550023569, 1550023576, 1550024239, 1550024246, 1550024248, 1550024249 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.15%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777254&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.27%
	&quot;1550023576&quot; probability: 0.05%
	&quot;1550024239&quot; probability: 0.30%
	&quot;1550024246&quot; probability: 0.06%
	&quot;1550024248&quot; probability: 0.06%
	&quot;1550024249&quot; probability: 0.05%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999445256329)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999445256329)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.990104091257, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.22%
	&quot;0.990104091257&quot; probability: 1.78%
	&quot;0.998004160168&quot; probability: 74.67%
	&quot;0.999056851193&quot; probability: 23.33%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0994667309236)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0994667309236)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0123329331482)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0123329331482)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.029311320057)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.029311320057)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.19114392193)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.19114392193)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023569, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024239, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.01%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024239&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.18%
	&quot;0.943236931927&quot; probability: 38.00%
	&quot;0.997787593551&quot; probability: 35.82%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195980720689)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195980720689)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00524757373686)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00524757373686)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 35.82%
	&quot;5.12162687346E-4&quot; probability: 38.00%
	&quot;0.00187291365961&quot; probability: 26.18%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00650290614596)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00650290614596)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00408257160741)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00408257160741)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 64.18%
	&quot;0.00579792162242&quot; probability: 35.82%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0657485048459)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0657485048459)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 35.82%
	&quot;0.33209650183&quot; probability: 38.00%
	&quot;0.336192066889&quot; probability: 26.18%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.13082997875)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.13082997875)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 64.18%
	&quot;-0.0768714144176&quot; probability: 35.82%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0514218128104)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0514218128104)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163552044307)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163552044307)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 35.82%
	&quot;0.0496432718844&quot; probability: 26.18%
	&quot;0.0511190919793&quot; probability: 38.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05242909417)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05242909417)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 35.82%
	&quot;1.05235948185&quot; probability: 64.18%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.04%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.04%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.04%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.04%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.04%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.04%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.206398315973)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.206398315973)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.seq &gt; orig(param1.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.seq &gt; orig(param1.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.04%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.04%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.04%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.04%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.04%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777250&quot; probability: 0.04%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.04%
	&quot;1548777253&quot; probability: 0.01%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.04%
	&quot;1550023572&quot; probability: 0.04%
	&quot;1550023573&quot; probability: 0.04%
	&quot;1550023574&quot; probability: 0.04%
	&quot;1550023575&quot; probability: 0.04%
	&quot;1550023576&quot; probability: 0.04%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.04%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.04%
	&quot;1550024245&quot; probability: 0.04%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024248&quot; probability: 0.04%
	&quot;1550024249&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.02%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 25.95%
	&quot;0.943261993842&quot; probability: 37.66%
	&quot;0.997788345438&quot; probability: 36.40%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 25.95%
	&quot;0.943261993842&quot; probability: 37.66%
	&quot;0.997788345438&quot; probability: 36.40%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00196949251347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00196949251347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00524249297106)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00524249297106)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.0051186549392&quot; probability: 36.22%
	&quot;-0.00410114939048&quot; probability: 0.18%
	&quot;2.89138628677E-4&quot; probability: 37.66%
	&quot;0.00181840508637&quot; probability: 25.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.0051186549392&quot; probability: 36.22%
	&quot;-0.00410114939048&quot; probability: 0.18%
	&quot;2.89138628677E-4&quot; probability: 37.66%
	&quot;0.00181840508637&quot; probability: 25.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00651115636875)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00651115636875)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00407497876901)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00407497876901)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 63.60%
	&quot;0.00581902761016&quot; probability: 36.40%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 63.60%
	&quot;0.00581902761016&quot; probability: 36.40%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 36.40%
	&quot;0.332025338306&quot; probability: 37.66%
	&quot;0.336205303253&quot; probability: 25.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 36.40%
	&quot;0.332025338306&quot; probability: 37.66%
	&quot;0.336205303253&quot; probability: 25.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130832166999)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130832166999)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 63.60%
	&quot;-0.0768626611435&quot; probability: 36.40%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 63.60%
	&quot;-0.0768626611435&quot; probability: 36.40%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 36.40%
	&quot;0.0496066092566&quot; probability: 25.95%
	&quot;0.0511671453035&quot; probability: 37.66%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 36.40%
	&quot;0.0496066092566&quot; probability: 25.95%
	&quot;0.0511671453035&quot; probability: 37.66%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05241324746)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05241324746)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 36.40%
	&quot;1.05235838107&quot; probability: 63.60%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 36.40%
	&quot;1.05235838107&quot; probability: 63.60%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2 == orig(param2))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2 == orig(param2))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2.data == orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2.data == orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.data == &quot;GO TO GOAL&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.data == &quot;GO TO GOAL&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.04%
	&quot;1548777260&quot; probability: 0.02%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.02%
	&quot;1548777268&quot; probability: 0.02%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777272&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.04%
	&quot;1548777275&quot; probability: 0.02%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1548777277&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.03%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.02%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024249&quot; probability: 0.01%
	&quot;1550024251&quot; probability: 0.05%
	&quot;1550024253&quot; probability: 0.03%
	&quot;1550024255&quot; probability: 0.03%
	&quot;1550024256&quot; probability: 0.02%
	&quot;1550024257&quot; probability: 0.01%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.02%
	&quot;1550024316&quot; probability: 0.03%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.04%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.04%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.06%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.04%
	&quot;1548777260&quot; probability: 0.02%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.02%
	&quot;1548777268&quot; probability: 0.02%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777272&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.04%
	&quot;1548777275&quot; probability: 0.02%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1548777277&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.03%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.02%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024249&quot; probability: 0.01%
	&quot;1550024251&quot; probability: 0.05%
	&quot;1550024253&quot; probability: 0.03%
	&quot;1550024255&quot; probability: 0.03%
	&quot;1550024256&quot; probability: 0.02%
	&quot;1550024257&quot; probability: 0.01%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.02%
	&quot;1550024316&quot; probability: 0.03%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.04%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.04%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.06%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.996472375094)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.996472375094)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 2.69%
	&quot;0.998035346448&quot; probability: 88.36%
	&quot;0.999258720505&quot; probability: 8.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 2.69%
	&quot;0.998035346448&quot; probability: 88.36%
	&quot;0.999258720505&quot; probability: 8.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0759643296152)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0759643296152)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0179965110988)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0179965110988)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0468003837374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0468003837374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0490744331462)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0490744331462)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0607827937472)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0607827937472)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.789021696445)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.789021696445)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.785167794201)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.785167794201)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.372185728107)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.372185728107)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 27.24%
	&quot;0.943235340366&quot; probability: 42.83%
	&quot;0.997796183469&quot; probability: 29.93%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 27.24%
	&quot;0.943235340366&quot; probability: 42.83%
	&quot;0.997796183469&quot; probability: 29.93%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.45%
	&quot;-0.00428861534958&quot; probability: 29.48%
	&quot;7.26569747456E-5&quot; probability: 42.83%
	&quot;0.00192395493077&quot; probability: 27.24%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.45%
	&quot;-0.00428861534958&quot; probability: 29.48%
	&quot;7.26569747456E-5&quot; probability: 42.83%
	&quot;0.00192395493077&quot; probability: 27.24%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 70.07%
	&quot;0.00569162910516&quot; probability: 29.93%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 70.07%
	&quot;0.00569162910516&quot; probability: 29.93%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659152224716)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659152224716)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 29.93%
	&quot;0.332100277782&quot; probability: 42.83%
	&quot;0.336238539909&quot; probability: 27.24%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 29.93%
	&quot;0.332100277782&quot; probability: 42.83%
	&quot;0.336238539909&quot; probability: 27.24%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 64.78%
	&quot;-0.129780306357&quot; probability: 5.29%
	&quot;-0.0778104198604&quot; probability: 29.93%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 64.78%
	&quot;-0.129780306357&quot; probability: 5.29%
	&quot;-0.0778104198604&quot; probability: 29.93%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 29.93%
	&quot;0.0498263805988&quot; probability: 27.24%
	&quot;0.0513830151476&quot; probability: 42.83%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 29.93%
	&quot;0.0498263805988&quot; probability: 27.24%
	&quot;0.0513830151476&quot; probability: 42.83%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 29.93%
	&quot;1.05236375187&quot; probability: 70.07%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 29.93%
	&quot;1.05236375187&quot; probability: 70.07%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 21.35%	count:130.0 total:609.0
	&quot;y&quot; probability: 78.65%	count:479.0 total:609.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 21.35%	count:130.0 total:609.0
	&quot;y&quot; probability: 78.65%	count:479.0 total:609.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995348625507)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995348625507)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.995605562752&quot; probability: 0.45%
	&quot;0.996683457272&quot; probability: 2.06%
	&quot;0.99771068881&quot; probability: 68.13%
	&quot;0.998821820189&quot; probability: 29.36%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.995605562752&quot; probability: 0.45%
	&quot;0.996683457272&quot; probability: 2.06%
	&quot;0.99771068881&quot; probability: 68.13%
	&quot;0.998821820189&quot; probability: 29.36%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0652799118839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0652799118839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.371424188128)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.371424188128)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 27.22%
	&quot;0.943189357147&quot; probability: 42.79%
	&quot;0.997786924692&quot; probability: 29.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 27.22%
	&quot;0.943189357147&quot; probability: 42.79%
	&quot;0.997786924692&quot; probability: 29.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.90%
	&quot;-0.00513675410628&quot; probability: 29.10%
	&quot;2.75938565783E-4&quot; probability: 42.79%
	&quot;0.00191107265235&quot; probability: 27.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.90%
	&quot;-0.00513675410628&quot; probability: 29.10%
	&quot;2.75938565783E-4&quot; probability: 42.79%
	&quot;0.00191107265235&quot; probability: 27.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 70.01%
	&quot;0.0059419944482&quot; probability: 29.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 70.01%
	&quot;0.0059419944482&quot; probability: 29.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 29.99%
	&quot;0.332231048848&quot; probability: 42.79%
	&quot;0.33622739792&quot; probability: 27.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 29.99%
	&quot;0.332231048848&quot; probability: 42.79%
	&quot;0.33622739792&quot; probability: 27.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129767325698, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 64.82%
	&quot;-0.129767325698&quot; probability: 5.19%
	&quot;-0.0775165645194&quot; probability: 29.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129767325698, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 64.82%
	&quot;-0.129767325698&quot; probability: 5.19%
	&quot;-0.0775165645194&quot; probability: 29.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163477345081)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163477345081)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 29.99%
	&quot;0.0498189383075&quot; probability: 27.22%
	&quot;0.0513074083698&quot; probability: 42.79%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 29.99%
	&quot;0.0498189383075&quot; probability: 27.22%
	&quot;0.0513074083698&quot; probability: 42.79%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 29.99%
	&quot;1.05235703608&quot; probability: 70.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 29.99%
	&quot;1.05235703608&quot; probability: 70.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param2.data &gt;= orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param2.data &gt;= orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 49.90%	count:508.0 total:1018.0
	&quot;GO TO GOAL&quot; probability: 50.10%	count:510.0 total:1018.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 49.90%	count:508.0 total:1018.0
	&quot;GO TO GOAL&quot; probability: 50.10%	count:510.0 total:1018.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999445256329)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999445256329)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994711668014, 0.995741860346, 0.996888816112, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.15%
	&quot;0.990104091257&quot; probability: 0.20%
	&quot;0.993195158835&quot; probability: 0.42%
	&quot;0.994711668014&quot; probability: 0.17%
	&quot;0.995741860346&quot; probability: 5.72%
	&quot;0.996888816112&quot; probability: 8.60%
	&quot;0.998004160168&quot; probability: 65.88%
	&quot;0.999056851193&quot; probability: 18.81%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994711668014, 0.995741860346, 0.996888816112, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.15%
	&quot;0.990104091257&quot; probability: 0.20%
	&quot;0.993195158835&quot; probability: 0.42%
	&quot;0.994711668014&quot; probability: 0.17%
	&quot;0.995741860346&quot; probability: 5.72%
	&quot;0.996888816112&quot; probability: 8.60%
	&quot;0.998004160168&quot; probability: 65.88%
	&quot;0.999056851193&quot; probability: 18.81%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0389050284772)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0389050284772)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 45.27%
	&quot;0.943236931927&quot; probability: 38.60%
	&quot;0.997787593551&quot; probability: 16.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 45.27%
	&quot;0.943236931927&quot; probability: 38.60%
	&quot;0.997787593551&quot; probability: 16.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.10%
	&quot;-0.00509819561463&quot; probability: 15.83%
	&quot;-0.00354324353796&quot; probability: 0.19%
	&quot;5.12162687346E-4&quot; probability: 38.60%
	&quot;0.00187291365961&quot; probability: 45.27%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.10%
	&quot;-0.00509819561463&quot; probability: 15.83%
	&quot;-0.00354324353796&quot; probability: 0.19%
	&quot;5.12162687346E-4&quot; probability: 38.60%
	&quot;0.00187291365961&quot; probability: 45.27%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 83.87%
	&quot;0.00579792162242&quot; probability: 15.96%
	&quot;0.0068352641971&quot; probability: 0.17%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 83.87%
	&quot;0.00579792162242&quot; probability: 15.96%
	&quot;0.0068352641971&quot; probability: 0.17%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.13%
	&quot;0.33209650183&quot; probability: 38.60%
	&quot;0.336192066889&quot; probability: 45.27%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.13%
	&quot;0.33209650183&quot; probability: 38.60%
	&quot;0.336192066889&quot; probability: 45.27%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130844829891)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130844829891)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.87%
	&quot;-0.0768714144176&quot; probability: 16.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.87%
	&quot;-0.0768714144176&quot; probability: 16.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516226177403)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516226177403)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.13%
	&quot;0.0496432718844&quot; probability: 45.27%
	&quot;0.0511190919793&quot; probability: 38.60%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.13%
	&quot;0.0496432718844&quot; probability: 45.27%
	&quot;0.0511190919793&quot; probability: 38.60%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05250279099)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05250279099)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.13%
	&quot;1.05235948185&quot; probability: 83.87%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.13%
	&quot;1.05235948185&quot; probability: 83.87%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 48.45%	count:1903.0 total:3928.0
	&quot;nonsensical&quot; probability: 9.01%	count:354.0 total:3928.0
	&quot;y&quot; probability: 42.54%	count:1671.0 total:3928.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 48.45%	count:1903.0 total:3928.0
	&quot;nonsensical&quot; probability: 9.01%	count:354.0 total:3928.0
	&quot;y&quot; probability: 42.54%	count:1671.0 total:3928.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 45.22%
	&quot;0.943261993842&quot; probability: 38.56%
	&quot;0.997788345438&quot; probability: 16.23%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 45.22%
	&quot;0.943261993842&quot; probability: 38.56%
	&quot;0.997788345438&quot; probability: 16.23%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.12%
	&quot;-0.0051186549392&quot; probability: 15.89%
	&quot;-0.00410114939048&quot; probability: 0.22%
	&quot;2.89138628677E-4&quot; probability: 38.56%
	&quot;0.00181840508637&quot; probability: 45.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.12%
	&quot;-0.0051186549392&quot; probability: 15.89%
	&quot;-0.00410114939048&quot; probability: 0.22%
	&quot;2.89138628677E-4&quot; probability: 38.56%
	&quot;0.00181840508637&quot; probability: 45.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 83.77%
	&quot;0.00581902761016&quot; probability: 16.11%
	&quot;0.00685348608903&quot; probability: 0.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 83.77%
	&quot;0.00581902761016&quot; probability: 16.11%
	&quot;0.00685348608903&quot; probability: 0.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 16.23%
	&quot;0.332025338306&quot; probability: 38.56%
	&quot;0.336205303253&quot; probability: 45.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 16.23%
	&quot;0.332025338306&quot; probability: 38.56%
	&quot;0.336205303253&quot; probability: 45.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 83.77%
	&quot;-0.0768626611435&quot; probability: 16.23%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 83.77%
	&quot;-0.0768626611435&quot; probability: 16.23%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 16.23%
	&quot;0.0496066092566&quot; probability: 45.22%
	&quot;0.0511671453035&quot; probability: 38.56%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 16.23%
	&quot;0.0496066092566&quot; probability: 45.22%
	&quot;0.0511671453035&quot; probability: 38.56%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 16.23%
	&quot;1.05235838107&quot; probability: 83.77%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 16.23%
	&quot;1.05235838107&quot; probability: 83.77%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param2.data &lt;= orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param2.data &lt;= orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 90.99%	count:3574.0 total:3928.0
	&quot;nonsensical&quot; probability: 9.01%	count:354.0 total:3928.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 90.99%	count:3574.0 total:3928.0
	&quot;nonsensical&quot; probability: 9.01%	count:354.0 total:3928.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.68%	count:3453.0 total:3464.0
	&quot;GOAL REACHED&quot; probability: 0.32%	count:11.0 total:3464.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.68%	count:3453.0 total:3464.0
	&quot;GOAL REACHED&quot; probability: 0.32%	count:11.0 total:3464.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  &lt;==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  &lt;==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.765650080046)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.765650080046)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.765650080046, 0.976635936488, 0.993195158835, 0.994762941873, 0.996675979108, 0.998035346448, 0.999039883824 }
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.993195158835&quot; probability: 0.36%
	&quot;0.994762941873&quot; probability: 5.03%
	&quot;0.996675979108&quot; probability: 8.04%
	&quot;0.998035346448&quot; probability: 73.74%
	&quot;0.999039883824&quot; probability: 12.68%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0709192517339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0709192517339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0621035196399)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0621035196399)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.631865219259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.631865219259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0385661027438)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0385661027438)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 43.22%
	&quot;0.943235340366&quot; probability: 39.68%
	&quot;0.997796183469&quot; probability: 17.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00537327763734, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.19%
	&quot;-0.00537327763734&quot; probability: 0.23%
	&quot;-0.00428861534958&quot; probability: 16.67%
	&quot;7.26569747456E-5&quot; probability: 39.68%
	&quot;0.00192395493077&quot; probability: 43.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516, 0.00670186639115 }
	&quot;-0.0040036463789&quot; probability: 82.90%
	&quot;0.00569162910516&quot; probability: 16.89%
	&quot;0.00670186639115&quot; probability: 0.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 17.10%
	&quot;0.332100277782&quot; probability: 39.68%
	&quot;0.336238539909&quot; probability: 43.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129790324194, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 77.44%
	&quot;-0.129790324194&quot; probability: 5.46%
	&quot;-0.0778104198604&quot; probability: 17.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 17.10%
	&quot;0.0498263805988&quot; probability: 43.22%
	&quot;0.0513830151476&quot; probability: 39.68%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 17.10%
	&quot;1.05236375187&quot; probability: 82.90%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 49.96%	count:2033.0 total:4069.0
	&quot;y&quot; probability: 50.04%	count:2036.0 total:4069.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.994598087046, 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.926599849731&quot; probability: 0.02%
	&quot;0.930715267134&quot; probability: 0.02%
	&quot;0.975731991017&quot; probability: 0.02%
	&quot;0.991980662549&quot; probability: 0.04%
	&quot;0.993534224488&quot; probability: 0.30%
	&quot;0.994598087046&quot; probability: 0.06%
	&quot;0.995605562752&quot; probability: 3.09%
	&quot;0.996683457272&quot; probability: 7.42%
	&quot;0.99771068881&quot; probability: 55.30%
	&quot;0.998821820189&quot; probability: 33.72%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.994598087046, 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.926599849731&quot; probability: 0.02%
	&quot;0.930715267134&quot; probability: 0.02%
	&quot;0.975731991017&quot; probability: 0.02%
	&quot;0.991980662549&quot; probability: 0.04%
	&quot;0.993534224488&quot; probability: 0.30%
	&quot;0.994598087046&quot; probability: 0.06%
	&quot;0.995605562752&quot; probability: 3.09%
	&quot;0.996683457272&quot; probability: 7.42%
	&quot;0.99771068881&quot; probability: 55.30%
	&quot;0.998821820189&quot; probability: 33.72%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 43.21%
	&quot;0.943189357147&quot; probability: 39.67%
	&quot;0.997786924692&quot; probability: 17.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 43.21%
	&quot;0.943189357147&quot; probability: 39.67%
	&quot;0.997786924692&quot; probability: 17.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, -0.00357115376734, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.32%
	&quot;-0.00513675410628&quot; probability: 16.63%
	&quot;-0.00357115376734&quot; probability: 0.17%
	&quot;2.75938565783E-4&quot; probability: 39.67%
	&quot;0.00191107265235&quot; probability: 43.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, -0.00357115376734, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.32%
	&quot;-0.00513675410628&quot; probability: 16.63%
	&quot;-0.00357115376734&quot; probability: 0.17%
	&quot;2.75938565783E-4&quot; probability: 39.67%
	&quot;0.00191107265235&quot; probability: 43.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 82.88%
	&quot;0.0059419944482&quot; probability: 17.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 82.88%
	&quot;0.0059419944482&quot; probability: 17.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 17.12%
	&quot;0.332231048848&quot; probability: 39.67%
	&quot;0.33622739792&quot; probability: 43.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 17.12%
	&quot;0.332231048848&quot; probability: 39.67%
	&quot;0.33622739792&quot; probability: 43.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129761970985, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 77.49%
	&quot;-0.129761970985&quot; probability: 5.39%
	&quot;-0.0775165645194&quot; probability: 17.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129761970985, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 77.49%
	&quot;-0.129761970985&quot; probability: 5.39%
	&quot;-0.0775165645194&quot; probability: 17.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 17.12%
	&quot;0.0498189383075&quot; probability: 43.21%
	&quot;0.0513074083698&quot; probability: 39.67%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 17.12%
	&quot;0.0498189383075&quot; probability: 43.21%
	&quot;0.0513074083698&quot; probability: 39.67%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 17.12%
	&quot;1.05235703608&quot; probability: 82.88%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 17.12%
	&quot;1.05235703608&quot; probability: 82.88%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 78.43%	count:3574.0 total:4557.0
	&quot;y&quot; probability: 21.57%	count:983.0 total:4557.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 78.43%	count:3574.0 total:4557.0
	&quot;y&quot; probability: 21.57%	count:983.0 total:4557.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 11.06%	count:508.0 total:4592.0
	&quot;GO TO GOAL&quot; probability: 88.70%	count:4073.0 total:4592.0
	&quot;GOAL REACHED&quot; probability: 0.24%	count:11.0 total:4592.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 11.06%	count:508.0 total:4592.0
	&quot;GO TO GOAL&quot; probability: 88.70%	count:4073.0 total:4592.0
	&quot;GOAL REACHED&quot; probability: 0.24%	count:11.0 total:4592.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777249, 1548777252, 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023569, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024239, 1550024246, 1550024248, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.02%
	&quot;1548777254&quot; probability: 0.02%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.01%
	&quot;1548777258&quot; probability: 0.03%
	&quot;1548777260&quot; probability: 0.01%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.01%
	&quot;1548777268&quot; probability: 0.01%
	&quot;1548777269&quot; probability: 0.01%
	&quot;1548777270&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777275&quot; probability: 0.01%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1548777277&quot; probability: 0.00%
	&quot;1550023569&quot; probability: 0.08%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.01%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.03%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024239&quot; probability: 0.09%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024248&quot; probability: 0.02%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.02%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024256&quot; probability: 0.01%
	&quot;1550024257&quot; probability: 0.00%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.01%
	&quot;1550024315&quot; probability: 0.01%
	&quot;1550024316&quot; probability: 0.02%
	&quot;1550024318&quot; probability: 0.02%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.03%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.04%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777249, 1548777252, 1548777254, 1548777256, 1548777257, 1548777258, 1548777260, 1548777261, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777273, 1548777275, 1548777276, 1548777277, 1550023569, 1550023576, 1550023582, 1550023583, 1550023585, 1550023587, 1550023588, 1550023634, 1550023639, 1550023640, 1550023641, 1550023643, 1550023644, 1550024239, 1550024246, 1550024248, 1550024249, 1550024251, 1550024253, 1550024255, 1550024256, 1550024257, 1550024258, 1550024313, 1550024315, 1550024316, 1550024318, 1550024319, 1550024322, 1550024323, 1550024325, 1550024326 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777249&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.02%
	&quot;1548777254&quot; probability: 0.02%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.01%
	&quot;1548777258&quot; probability: 0.03%
	&quot;1548777260&quot; probability: 0.01%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.01%
	&quot;1548777268&quot; probability: 0.01%
	&quot;1548777269&quot; probability: 0.01%
	&quot;1548777270&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777275&quot; probability: 0.01%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1548777277&quot; probability: 0.00%
	&quot;1550023569&quot; probability: 0.08%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.01%
	&quot;1550023639&quot; probability: 0.01%
	&quot;1550023640&quot; probability: 0.02%
	&quot;1550023641&quot; probability: 0.03%
	&quot;1550023643&quot; probability: 0.02%
	&quot;1550023644&quot; probability: 0.00%
	&quot;1550024239&quot; probability: 0.09%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024248&quot; probability: 0.02%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.02%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024256&quot; probability: 0.01%
	&quot;1550024257&quot; probability: 0.00%
	&quot;1550024258&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.01%
	&quot;1550024315&quot; probability: 0.01%
	&quot;1550024316&quot; probability: 0.02%
	&quot;1550024318&quot; probability: 0.02%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024322&quot; probability: 0.01%
	&quot;1550024323&quot; probability: 0.03%
	&quot;1550024325&quot; probability: 0.01%
	&quot;1550024326&quot; probability: 0.04%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.990104091257, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.990104091257&quot; probability: 0.51%
	&quot;0.996675979108&quot; probability: 1.91%
	&quot;0.998004160168&quot; probability: 84.43%
	&quot;0.999056851193&quot; probability: 13.08%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.990104091257, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.990104091257&quot; probability: 0.51%
	&quot;0.996675979108&quot; probability: 1.91%
	&quot;0.998004160168&quot; probability: 84.43%
	&quot;0.999056851193&quot; probability: 13.08%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0994667309236)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0994667309236)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0123329331482)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0123329331482)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.789021696445)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.789021696445)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.785167794201)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.785167794201)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.87%
	&quot;0.943236931927&quot; probability: 41.21%
	&quot;0.997787593551&quot; probability: 31.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 26.87%
	&quot;0.943236931927&quot; probability: 41.21%
	&quot;0.997787593551&quot; probability: 31.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.30%
	&quot;-0.00509819561463&quot; probability: 31.61%
	&quot;5.12162687346E-4&quot; probability: 41.21%
	&quot;0.00187291365961&quot; probability: 26.87%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.30%
	&quot;-0.00509819561463&quot; probability: 31.61%
	&quot;5.12162687346E-4&quot; probability: 41.21%
	&quot;0.00187291365961&quot; probability: 26.87%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.09%
	&quot;0.00579792162242&quot; probability: 31.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.09%
	&quot;0.00579792162242&quot; probability: 31.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0657485048459)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0657485048459)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.91%
	&quot;0.33209650183&quot; probability: 41.21%
	&quot;0.336192066889&quot; probability: 26.87%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.91%
	&quot;0.33209650183&quot; probability: 41.21%
	&quot;0.336192066889&quot; probability: 26.87%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.09%
	&quot;-0.0768714144176&quot; probability: 31.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.09%
	&quot;-0.0768714144176&quot; probability: 31.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.91%
	&quot;0.0496432718844&quot; probability: 26.87%
	&quot;0.0511190919793&quot; probability: 41.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.91%
	&quot;0.0496432718844&quot; probability: 26.87%
	&quot;0.0511190919793&quot; probability: 41.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.91%
	&quot;1.05235948185&quot; probability: 68.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.91%
	&quot;1.05235948185&quot; probability: 68.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 5.68%	count:130.0 total:2288.0
	&quot;nonsensical&quot; probability: 24.61%	count:563.0 total:2288.0
	&quot;y&quot; probability: 69.71%	count:1595.0 total:2288.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 5.68%	count:130.0 total:2288.0
	&quot;nonsensical&quot; probability: 24.61%	count:563.0 total:2288.0
	&quot;y&quot; probability: 69.71%	count:1595.0 total:2288.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 26.79%
	&quot;0.943261993842&quot; probability: 41.09%
	&quot;0.997788345438&quot; probability: 32.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 26.79%
	&quot;0.943261993842&quot; probability: 41.09%
	&quot;0.997788345438&quot; probability: 32.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.60%
	&quot;-0.0051186549392&quot; probability: 31.46%
	&quot;-0.00410114939048&quot; probability: 0.06%
	&quot;2.89138628677E-4&quot; probability: 41.09%
	&quot;0.00181840508637&quot; probability: 26.79%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.60%
	&quot;-0.0051186549392&quot; probability: 31.46%
	&quot;-0.00410114939048&quot; probability: 0.06%
	&quot;2.89138628677E-4&quot; probability: 41.09%
	&quot;0.00181840508637&quot; probability: 26.79%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 67.88%
	&quot;0.00581902761016&quot; probability: 32.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 67.88%
	&quot;0.00581902761016&quot; probability: 32.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 32.12%
	&quot;0.332025338306&quot; probability: 41.09%
	&quot;0.336205303253&quot; probability: 26.79%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 32.12%
	&quot;0.332025338306&quot; probability: 41.09%
	&quot;0.336205303253&quot; probability: 26.79%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.06%
	&quot;-0.130057847125&quot; probability: 67.82%
	&quot;-0.0768626611435&quot; probability: 32.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.06%
	&quot;-0.130057847125&quot; probability: 67.82%
	&quot;-0.0768626611435&quot; probability: 32.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 32.12%
	&quot;0.0496066092566&quot; probability: 26.79%
	&quot;0.0511671453035&quot; probability: 41.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 32.12%
	&quot;0.0496066092566&quot; probability: 26.79%
	&quot;0.0511671453035&quot; probability: 41.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 32.12%
	&quot;1.05235838107&quot; probability: 67.88%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 32.12%
	&quot;1.05235838107&quot; probability: 67.88%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param2.data &gt;= orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param2.data &gt;= orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 18.76%	count:130.0 total:693.0
	&quot;nonsensical&quot; probability: 81.24%	count:563.0 total:693.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 18.76%	count:130.0 total:693.0
	&quot;nonsensical&quot; probability: 81.24%	count:563.0 total:693.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 41.26%	count:607.0 total:1471.0
	&quot;GO TO GOAL&quot; probability: 58.74%	count:864.0 total:1471.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 41.26%	count:607.0 total:1471.0
	&quot;GO TO GOAL&quot; probability: 58.74%	count:864.0 total:1471.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1550023576, 1550023582, 1550023583, 1550023585, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024313, 1550024315, 1550024316, 1550024318 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.08%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1550023576, 1550023582, 1550023583, 1550023585, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024313, 1550024315, 1550024316, 1550024318 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.08%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999258720505)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999258720505)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.996659982233)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.996659982233)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 4.12%
	&quot;0.998035346448&quot; probability: 88.96%
	&quot;0.999258720505&quot; probability: 6.92%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 4.12%
	&quot;0.998035346448&quot; probability: 88.96%
	&quot;0.999258720505&quot; probability: 6.92%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.068941639434)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.068941639434)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.023198867329)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.023198867329)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0468003837374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0468003837374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0490744331462)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0490744331462)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0595931237531)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0595931237531)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0350539028303)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0350539028303)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.779644320047)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.779644320047)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.720470162692)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.720470162692)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.489379980748)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.489379980748)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 33.00%
	&quot;0.943235340366&quot; probability: 34.16%
	&quot;0.997796183469&quot; probability: 32.84%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 33.00%
	&quot;0.943235340366&quot; probability: 34.16%
	&quot;0.997796183469&quot; probability: 32.84%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.83%
	&quot;-0.00428861534958&quot; probability: 32.01%
	&quot;7.26569747456E-5&quot; probability: 34.16%
	&quot;0.00192395493077&quot; probability: 33.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.83%
	&quot;-0.00428861534958&quot; probability: 32.01%
	&quot;7.26569747456E-5&quot; probability: 34.16%
	&quot;0.00192395493077&quot; probability: 33.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.16%
	&quot;0.00569162910516&quot; probability: 32.84%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.16%
	&quot;0.00569162910516&quot; probability: 32.84%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659152224716)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659152224716)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.84%
	&quot;0.332100277782&quot; probability: 34.16%
	&quot;0.336238539909&quot; probability: 33.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.84%
	&quot;0.332100277782&quot; probability: 34.16%
	&quot;0.336238539909&quot; probability: 33.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131017927984)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131017927984)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.43%
	&quot;-0.129780306357&quot; probability: 9.74%
	&quot;-0.0778104198604&quot; probability: 32.84%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.43%
	&quot;-0.129780306357&quot; probability: 9.74%
	&quot;-0.0778104198604&quot; probability: 32.84%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516245204743)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516245204743)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.84%
	&quot;0.0498263805988&quot; probability: 33.00%
	&quot;0.0513830151476&quot; probability: 34.16%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.84%
	&quot;0.0498263805988&quot; probability: 33.00%
	&quot;0.0513830151476&quot; probability: 34.16%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.84%
	&quot;1.05236375187&quot; probability: 67.16%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.84%
	&quot;1.05236375187&quot; probability: 67.16%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 32.47%	count:100.0 total:308.0
	&quot;y&quot; probability: 67.53%	count:208.0 total:308.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 32.47%	count:100.0 total:308.0
	&quot;y&quot; probability: 67.53%	count:208.0 total:308.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999529268133)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999529268133)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995710238669)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995710238669)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.996683457272, 0.99771068881, 0.999240681803 }
	&quot;0.996683457272&quot; probability: 2.64%
	&quot;0.99771068881&quot; probability: 78.42%
	&quot;0.999240681803&quot; probability: 18.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.996683457272, 0.99771068881, 0.999240681803 }
	&quot;0.996683457272&quot; probability: 2.64%
	&quot;0.99771068881&quot; probability: 78.42%
	&quot;0.999240681803&quot; probability: 18.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0777934917498)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0777934917498)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.00579911354825)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.00579911354825)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0504985114438)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0504985114438)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425142480493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425142480493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.801350884415)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.801350884415)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.x &gt;= -0.873854636567)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.x &gt;= -0.873854636567)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 0.758979256826)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 0.758979256826)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.462191396813)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.462191396813)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 32.95%
	&quot;0.943189357147&quot; probability: 34.10%
	&quot;0.997786924692&quot; probability: 32.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 32.95%
	&quot;0.943189357147&quot; probability: 34.10%
	&quot;0.997786924692&quot; probability: 32.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 1.65%
	&quot;-0.00513675410628&quot; probability: 31.30%
	&quot;2.75938565783E-4&quot; probability: 34.10%
	&quot;0.00191107265235&quot; probability: 32.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 1.65%
	&quot;-0.00513675410628&quot; probability: 31.30%
	&quot;2.75938565783E-4&quot; probability: 34.10%
	&quot;0.00191107265235&quot; probability: 32.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 67.05%
	&quot;0.0059419944482&quot; probability: 32.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 67.05%
	&quot;0.0059419944482&quot; probability: 32.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 32.95%
	&quot;0.332231048848&quot; probability: 34.10%
	&quot;0.33622739792&quot; probability: 32.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 32.95%
	&quot;0.332231048848&quot; probability: 34.10%
	&quot;0.33622739792&quot; probability: 32.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130989889993)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130989889993)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129767325698, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 57.50%
	&quot;-0.129767325698&quot; probability: 9.56%
	&quot;-0.0775165645194&quot; probability: 32.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129767325698, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 57.50%
	&quot;-0.129767325698&quot; probability: 9.56%
	&quot;-0.0775165645194&quot; probability: 32.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163340784617)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163340784617)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 32.95%
	&quot;0.0498189383075&quot; probability: 32.95%
	&quot;0.0513074083698&quot; probability: 34.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 32.95%
	&quot;0.0498189383075&quot; probability: 32.95%
	&quot;0.0513074083698&quot; probability: 34.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 32.95%
	&quot;1.05235703608&quot; probability: 67.05%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 32.95%
	&quot;1.05235703608&quot; probability: 67.05%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param2.data == &quot;y&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param2.data == &quot;y&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param2.data &gt;= orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;AVOIDING&quot;)  ==&gt;  (param2.data &gt;= orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.38%
	&quot;0.994762941873&quot; probability: 2.70%
	&quot;0.996472375094&quot; probability: 10.28%
	&quot;0.998004160168&quot; probability: 68.45%
	&quot;0.999056851193&quot; probability: 17.84%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.38%
	&quot;0.994762941873&quot; probability: 2.70%
	&quot;0.996472375094&quot; probability: 10.28%
	&quot;0.998004160168&quot; probability: 68.45%
	&quot;0.999056851193&quot; probability: 17.84%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.917557388805)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.917557388805)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.61%
	&quot;0.943236931927&quot; probability: 40.17%
	&quot;0.997787593551&quot; probability: 17.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.61%
	&quot;0.943236931927&quot; probability: 40.17%
	&quot;0.997787593551&quot; probability: 17.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 16.96%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.17%
	&quot;0.00187291365961&quot; probability: 42.61%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 16.96%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.17%
	&quot;0.00187291365961&quot; probability: 42.61%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.78%
	&quot;0.00579792162242&quot; probability: 17.07%
	&quot;0.0068352641971&quot; probability: 0.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.78%
	&quot;0.00579792162242&quot; probability: 17.07%
	&quot;0.0068352641971&quot; probability: 0.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.22%
	&quot;0.33209650183&quot; probability: 40.17%
	&quot;0.336192066889&quot; probability: 42.61%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.22%
	&quot;0.33209650183&quot; probability: 40.17%
	&quot;0.336192066889&quot; probability: 42.61%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.78%
	&quot;-0.0768714144176&quot; probability: 17.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.78%
	&quot;-0.0768714144176&quot; probability: 17.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.22%
	&quot;0.0496432718844&quot; probability: 42.61%
	&quot;0.0511190919793&quot; probability: 40.17%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.22%
	&quot;0.0496432718844&quot; probability: 42.61%
	&quot;0.0511190919793&quot; probability: 40.17%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05254221732)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05254221732)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.22%
	&quot;1.05235948185&quot; probability: 82.78%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.22%
	&quot;1.05235948185&quot; probability: 82.78%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.27%	count:5491.0 total:8818.0
	&quot;nonsensical&quot; probability: 8.02%	count:707.0 total:8818.0
	&quot;y&quot; probability: 29.71%	count:2620.0 total:8818.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.27%	count:5491.0 total:8818.0
	&quot;nonsensical&quot; probability: 8.02%	count:707.0 total:8818.0
	&quot;y&quot; probability: 29.71%	count:2620.0 total:8818.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 42.57%
	&quot;0.943261993842&quot; probability: 40.13%
	&quot;0.997788345438&quot; probability: 17.31%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 42.57%
	&quot;0.943261993842&quot; probability: 40.13%
	&quot;0.997788345438&quot; probability: 17.31%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.11%
	&quot;-0.0051186549392&quot; probability: 17.01%
	&quot;-0.00410114939048&quot; probability: 0.19%
	&quot;2.89138628677E-4&quot; probability: 40.13%
	&quot;0.00181840508637&quot; probability: 42.57%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.11%
	&quot;-0.0051186549392&quot; probability: 17.01%
	&quot;-0.00410114939048&quot; probability: 0.19%
	&quot;2.89138628677E-4&quot; probability: 40.13%
	&quot;0.00181840508637&quot; probability: 42.57%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 82.69%
	&quot;0.00581902761016&quot; probability: 17.20%
	&quot;0.00685348608903&quot; probability: 0.11%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 82.69%
	&quot;0.00581902761016&quot; probability: 17.20%
	&quot;0.00685348608903&quot; probability: 0.11%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 17.31%
	&quot;0.332025338306&quot; probability: 40.13%
	&quot;0.336205303253&quot; probability: 42.57%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 17.31%
	&quot;0.332025338306&quot; probability: 40.13%
	&quot;0.336205303253&quot; probability: 42.57%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 82.67%
	&quot;-0.0768626611435&quot; probability: 17.31%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 82.67%
	&quot;-0.0768626611435&quot; probability: 17.31%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0516188943144)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0516188943144)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 17.31%
	&quot;0.0496066092566&quot; probability: 42.57%
	&quot;0.0511671453035&quot; probability: 40.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 17.31%
	&quot;0.0496066092566&quot; probability: 42.57%
	&quot;0.0511671453035&quot; probability: 40.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 17.31%
	&quot;1.05235838107&quot; probability: 82.69%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 17.31%
	&quot;1.05235838107&quot; probability: 82.69%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.27%	count:5491.0 total:8818.0
	&quot;nonsensical&quot; probability: 8.02%	count:707.0 total:8818.0
	&quot;y&quot; probability: 29.71%	count:2620.0 total:8818.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.27%	count:5491.0 total:8818.0
	&quot;nonsensical&quot; probability: 8.02%	count:707.0 total:8818.0
	&quot;y&quot; probability: 29.71%	count:2620.0 total:8818.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GO TO GOAL&quot;)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.seq) one of { 156295, 165185, 204093, 207571, 211124, 211192 }
	&quot;156295&quot; probability: 0.13%
	&quot;165185&quot; probability: 0.13%
	&quot;204093&quot; probability: 0.13%
	&quot;207571&quot; probability: 0.13%
	&quot;211124&quot; probability: 0.13%
	&quot;211192&quot; probability: 0.38%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.seq) one of { 156295, 165185, 204093, 207571, 211124, 211192 }
	&quot;156295&quot; probability: 0.13%
	&quot;165185&quot; probability: 0.13%
	&quot;204093&quot; probability: 0.13%
	&quot;207571&quot; probability: 0.13%
	&quot;211124&quot; probability: 0.13%
	&quot;211192&quot; probability: 0.38%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 92708420, 203961095, 524329048, 545996597, 714261792, 884106143 }
	&quot;92708420&quot; probability: 0.13%
	&quot;203961095&quot; probability: 0.13%
	&quot;524329048&quot; probability: 0.13%
	&quot;545996597&quot; probability: 0.13%
	&quot;714261792&quot; probability: 0.13%
	&quot;884106143&quot; probability: 0.38%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 92708420, 203961095, 524329048, 545996597, 714261792, 884106143 }
	&quot;92708420&quot; probability: 0.13%
	&quot;203961095&quot; probability: 0.13%
	&quot;524329048&quot; probability: 0.13%
	&quot;545996597&quot; probability: 0.13%
	&quot;714261792&quot; probability: 0.13%
	&quot;884106143&quot; probability: 0.38%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024305, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024305&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024305, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024305&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.9992449669)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.9992449669)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.994876539454)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.994876539454)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.994876539454, 0.997294287645, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 12.50%
	&quot;0.997294287645&quot; probability: 12.50%
	&quot;0.99908871221&quot; probability: 75.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.994876539454, 0.997294287645, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 12.50%
	&quot;0.997294287645&quot; probability: 12.50%
	&quot;0.99908871221&quot; probability: 75.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0750909639557)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0750909639557)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0268379115808)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0268379115808)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0268379115808, 0.0301414103298, 0.0312487185491, 0.0613310087701, 0.0750909639557 }
	&quot;0.0268379115808&quot; probability: 25.00%
	&quot;0.0301414103298&quot; probability: 37.50%
	&quot;0.0312487185491&quot; probability: 12.50%
	&quot;0.0613310087701&quot; probability: 12.50%
	&quot;0.0750909639557&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0268379115808, 0.0301414103298, 0.0312487185491, 0.0613310087701, 0.0750909639557 }
	&quot;0.0268379115808&quot; probability: 25.00%
	&quot;0.0301414103298&quot; probability: 37.50%
	&quot;0.0312487185491&quot; probability: 12.50%
	&quot;0.0613310087701&quot; probability: 12.50%
	&quot;0.0750909639557&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.067603180502)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.067603180502)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0140284617072)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0140284617072)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0132473552995, -0.00290408234718, 0.0237459229534, 0.067603180502 }
	&quot;-0.0132473552995&quot; probability: 62.50%
	&quot;-0.00290408234718&quot; probability: 12.50%
	&quot;0.0237459229534&quot; probability: 12.50%
	&quot;0.067603180502&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0132473552995, -0.00290408234718, 0.0237459229534, 0.067603180502 }
	&quot;-0.0132473552995&quot; probability: 62.50%
	&quot;-0.00290408234718&quot; probability: 12.50%
	&quot;0.0237459229534&quot; probability: 12.50%
	&quot;0.067603180502&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0330611243312)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0330611243312)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0353277715053)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0353277715053)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0353277715053, -0.0243680946566, -0.0188765235536, -0.00343923862408, 0.0330611243312 }
	&quot;-0.0353277715053&quot; probability: 12.50%
	&quot;-0.0243680946566&quot; probability: 37.50%
	&quot;-0.0188765235536&quot; probability: 12.50%
	&quot;-0.00343923862408&quot; probability: 12.50%
	&quot;0.0330611243312&quot; probability: 25.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0353277715053, -0.0243680946566, -0.0188765235536, -0.00343923862408, 0.0330611243312 }
	&quot;-0.0353277715053&quot; probability: 12.50%
	&quot;-0.0243680946566&quot; probability: 37.50%
	&quot;-0.0188765235536&quot; probability: 12.50%
	&quot;-0.00343923862408&quot; probability: 12.50%
	&quot;0.0330611243312&quot; probability: 25.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.x) &gt;= -0.882680068503)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.x) &gt;= -0.882680068503)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.x) one of { -0.882680068503, 0.140197328255, 0.908539114581, 0.91535581336, 0.919880325121 }
	&quot;-0.882680068503&quot; probability: 12.50%
	&quot;0.140197328255&quot; probability: 12.50%
	&quot;0.908539114581&quot; probability: 25.00%
	&quot;0.91535581336&quot; probability: 37.50%
	&quot;0.919880325121&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.x) one of { -0.882680068503, 0.140197328255, 0.908539114581, 0.91535581336, 0.919880325121 }
	&quot;-0.882680068503&quot; probability: 12.50%
	&quot;0.140197328255&quot; probability: 12.50%
	&quot;0.908539114581&quot; probability: 25.00%
	&quot;0.91535581336&quot; probability: 37.50%
	&quot;0.919880325121&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.08996705658)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.08996705658)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.y) &gt;= -0.915479365856)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.y) &gt;= -0.915479365856)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.y) one of { -0.915479365856, -0.901563118441, 0.872749951002, 0.922052923609, 0.980319102656, 1.08996705658 }
	&quot;-0.915479365856&quot; probability: 37.50%
	&quot;-0.901563118441&quot; probability: 12.50%
	&quot;0.872749951002&quot; probability: 12.50%
	&quot;0.922052923609&quot; probability: 12.50%
	&quot;0.980319102656&quot; probability: 12.50%
	&quot;1.08996705658&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.y) one of { -0.915479365856, -0.901563118441, 0.872749951002, 0.922052923609, 0.980319102656, 1.08996705658 }
	&quot;-0.915479365856&quot; probability: 37.50%
	&quot;-0.901563118441&quot; probability: 12.50%
	&quot;0.872749951002&quot; probability: 12.50%
	&quot;0.922052923609&quot; probability: 12.50%
	&quot;0.980319102656&quot; probability: 12.50%
	&quot;1.08996705658&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.804913559582)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.804913559582)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.380798058475)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.380798058475)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.380798058475, 0.389181540246, 0.425559094146, 0.575383876813, 0.622931491553, 0.804913559582 }
	&quot;0.380798058475&quot; probability: 12.50%
	&quot;0.389181540246&quot; probability: 37.50%
	&quot;0.425559094146&quot; probability: 12.50%
	&quot;0.575383876813&quot; probability: 12.50%
	&quot;0.622931491553&quot; probability: 12.50%
	&quot;0.804913559582&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.380798058475, 0.389181540246, 0.425559094146, 0.575383876813, 0.622931491553, 0.804913559582 }
	&quot;0.380798058475&quot; probability: 12.50%
	&quot;0.389181540246&quot; probability: 37.50%
	&quot;0.425559094146&quot; probability: 12.50%
	&quot;0.575383876813&quot; probability: 12.50%
	&quot;0.622931491553&quot; probability: 12.50%
	&quot;0.804913559582&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.header.seq) one of { 76264, 76274, 76280, 76284, 172208, 235776, 239319, 242852, 242861, 242867 }
	&quot;76264&quot; probability: 0.09%
	&quot;76274&quot; probability: 0.09%
	&quot;76280&quot; probability: 0.09%
	&quot;76284&quot; probability: 0.09%
	&quot;172208&quot; probability: 0.09%
	&quot;235776&quot; probability: 0.09%
	&quot;239319&quot; probability: 0.09%
	&quot;242852&quot; probability: 0.18%
	&quot;242861&quot; probability: 0.09%
	&quot;242867&quot; probability: 0.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.header.seq) one of { 76264, 76274, 76280, 76284, 172208, 235776, 239319, 242852, 242861, 242867 }
	&quot;76264&quot; probability: 0.09%
	&quot;76274&quot; probability: 0.09%
	&quot;76280&quot; probability: 0.09%
	&quot;76284&quot; probability: 0.09%
	&quot;172208&quot; probability: 0.09%
	&quot;235776&quot; probability: 0.09%
	&quot;239319&quot; probability: 0.09%
	&quot;242852&quot; probability: 0.18%
	&quot;242861&quot; probability: 0.09%
	&quot;242867&quot; probability: 0.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 32925474, 133472877, 192653029, 232866956, 595997639, 614120830, 844114930, 934186021, 984364872, 994024865 }
	&quot;32925474&quot; probability: 0.09%
	&quot;133472877&quot; probability: 0.09%
	&quot;192653029&quot; probability: 0.09%
	&quot;232866956&quot; probability: 0.09%
	&quot;595997639&quot; probability: 0.09%
	&quot;614120830&quot; probability: 0.09%
	&quot;844114930&quot; probability: 0.18%
	&quot;934186021&quot; probability: 0.09%
	&quot;984364872&quot; probability: 0.09%
	&quot;994024865&quot; probability: 0.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 32925474, 133472877, 192653029, 232866956, 595997639, 614120830, 844114930, 934186021, 984364872, 994024865 }
	&quot;32925474&quot; probability: 0.09%
	&quot;133472877&quot; probability: 0.09%
	&quot;192653029&quot; probability: 0.09%
	&quot;232866956&quot; probability: 0.09%
	&quot;595997639&quot; probability: 0.09%
	&quot;614120830&quot; probability: 0.09%
	&quot;844114930&quot; probability: 0.18%
	&quot;934186021&quot; probability: 0.09%
	&quot;984364872&quot; probability: 0.09%
	&quot;994024865&quot; probability: 0.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024306, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024306&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024306, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024306&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 }
	&quot;0.941773298694&quot; probability: 9.09%
	&quot;0.943260647972&quot; probability: 54.55%
	&quot;0.997787902205&quot; probability: 36.36%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 }
	&quot;0.941773298694&quot; probability: 9.09%
	&quot;0.943260647972&quot; probability: 54.55%
	&quot;0.997787902205&quot; probability: 36.36%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00192206549544)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00192206549544)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00515472755654)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00515472755654)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00515472755654, 2.92901443476E-4, 0.00192206549544 }
	&quot;-0.00515472755654&quot; probability: 36.36%
	&quot;2.92901443476E-4&quot; probability: 54.55%
	&quot;0.00192206549544&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00515472755654, 2.92901443476E-4, 0.00192206549544 }
	&quot;-0.00515472755654&quot; probability: 36.36%
	&quot;2.92901443476E-4&quot; probability: 54.55%
	&quot;0.00192206549544&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00591125647508)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00591125647508)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00397458716695)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00397458716695)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00396072734628, 0.00582774078648 }
	&quot;-0.00396072734628&quot; probability: 63.64%
	&quot;0.00582774078648&quot; probability: 36.36%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00396072734628, 0.00582774078648 }
	&quot;-0.00396072734628&quot; probability: 63.64%
	&quot;0.00582774078648&quot; probability: 36.36%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336219678439)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336219678439)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0660102346535)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0660102346535)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.066020969656, 0.332029316255, 0.336219678439 }
	&quot;0.066020969656&quot; probability: 36.36%
	&quot;0.332029316255&quot; probability: 54.55%
	&quot;0.336219678439&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.066020969656, 0.332029316255, 0.336219678439 }
	&quot;0.066020969656&quot; probability: 36.36%
	&quot;0.332029316255&quot; probability: 54.55%
	&quot;0.336219678439&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130727614224)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130727614224)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130727614224, -0.129715820278, -0.0768856235449 }
	&quot;-0.130727614224&quot; probability: 54.55%
	&quot;-0.129715820278&quot; probability: 9.09%
	&quot;-0.0768856235449&quot; probability: 36.36%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130727614224, -0.129715820278, -0.0768856235449 }
	&quot;-0.130727614224&quot; probability: 54.55%
	&quot;-0.129715820278&quot; probability: 9.09%
	&quot;-0.0768856235449&quot; probability: 36.36%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513625447219)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513625447219)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163244923973)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163244923973)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162983063489, 0.0497684002387, 0.0511460398574 }
	&quot;-0.0162983063489&quot; probability: 36.36%
	&quot;0.0497684002387&quot; probability: 9.09%
	&quot;0.0511460398574&quot; probability: 54.55%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162983063489, 0.0497684002387, 0.0511460398574 }
	&quot;-0.0162983063489&quot; probability: 36.36%
	&quot;0.0497684002387&quot; probability: 9.09%
	&quot;0.0511460398574&quot; probability: 54.55%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05242407926)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05242407926)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.27654305648)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.27654305648)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276771863435, 1.05237975111 }
	&quot;0.276771863435&quot; probability: 36.36%
	&quot;1.05237975111&quot; probability: 63.64%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276771863435, 1.05237975111 }
	&quot;0.276771863435&quot; probability: 36.36%
	&quot;1.05237975111&quot; probability: 63.64%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 14.29%	count:1.0 total:7.0
	&quot;y&quot; probability: 85.71%	count:6.0 total:7.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 14.29%	count:1.0 total:7.0
	&quot;y&quot; probability: 85.71%	count:6.0 total:7.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.seq one of { 156305, 165188, 165192, 165198, 165202, 204143, 207666, 211191, 211197, 211202, 211207 }
	&quot;156305&quot; probability: 0.09%
	&quot;165188&quot; probability: 0.09%
	&quot;165192&quot; probability: 0.09%
	&quot;165198&quot; probability: 0.09%
	&quot;165202&quot; probability: 0.09%
	&quot;204143&quot; probability: 0.09%
	&quot;207666&quot; probability: 0.09%
	&quot;211191&quot; probability: 0.09%
	&quot;211197&quot; probability: 0.09%
	&quot;211202&quot; probability: 0.09%
	&quot;211207&quot; probability: 0.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.seq one of { 156305, 165188, 165192, 165198, 165202, 204143, 207666, 211191, 211197, 211202, 211207 }
	&quot;156305&quot; probability: 0.09%
	&quot;165188&quot; probability: 0.09%
	&quot;165192&quot; probability: 0.09%
	&quot;165198&quot; probability: 0.09%
	&quot;165202&quot; probability: 0.09%
	&quot;204143&quot; probability: 0.09%
	&quot;207666&quot; probability: 0.09%
	&quot;211191&quot; probability: 0.09%
	&quot;211197&quot; probability: 0.09%
	&quot;211202&quot; probability: 0.09%
	&quot;211207&quot; probability: 0.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 24344630, 34165072, 122652957, 162722950, 222669032, 262920725, 645979710, 664047025, 874062912, 934186021, 984096010 }
	&quot;24344630&quot; probability: 0.09%
	&quot;34165072&quot; probability: 0.09%
	&quot;122652957&quot; probability: 0.09%
	&quot;162722950&quot; probability: 0.09%
	&quot;222669032&quot; probability: 0.09%
	&quot;262920725&quot; probability: 0.09%
	&quot;645979710&quot; probability: 0.09%
	&quot;664047025&quot; probability: 0.09%
	&quot;874062912&quot; probability: 0.09%
	&quot;934186021&quot; probability: 0.09%
	&quot;984096010&quot; probability: 0.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 24344630, 34165072, 122652957, 162722950, 222669032, 262920725, 645979710, 664047025, 874062912, 934186021, 984096010 }
	&quot;24344630&quot; probability: 0.09%
	&quot;34165072&quot; probability: 0.09%
	&quot;122652957&quot; probability: 0.09%
	&quot;162722950&quot; probability: 0.09%
	&quot;222669032&quot; probability: 0.09%
	&quot;262920725&quot; probability: 0.09%
	&quot;645979710&quot; probability: 0.09%
	&quot;664047025&quot; probability: 0.09%
	&quot;874062912&quot; probability: 0.09%
	&quot;934186021&quot; probability: 0.09%
	&quot;984096010&quot; probability: 0.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777296, 1550023632, 1550024271, 1550024306, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.07%
	&quot;1550023632&quot; probability: 0.07%
	&quot;1550024271&quot; probability: 0.07%
	&quot;1550024306&quot; probability: 0.07%
	&quot;1550024343&quot; probability: 0.64%
	&quot;1550024344&quot; probability: 0.07%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777296, 1550023632, 1550024271, 1550024306, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.07%
	&quot;1550023632&quot; probability: 0.07%
	&quot;1550024271&quot; probability: 0.07%
	&quot;1550024306&quot; probability: 0.07%
	&quot;1550024343&quot; probability: 0.64%
	&quot;1550024344&quot; probability: 0.07%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999241102664)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999241102664)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.997299749196)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.997299749196)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.997299749196, 0.999023981715 }
	&quot;0.997299749196&quot; probability: 9.09%
	&quot;0.999023981715&quot; probability: 90.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.997299749196, 0.999023981715 }
	&quot;0.997299749196&quot; probability: 9.09%
	&quot;0.999023981715&quot; probability: 90.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0614076312174)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0614076312174)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0276124795389)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0276124795389)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x one of { 0.0284166802147, 0.0296878090138, 0.0313637544164, 0.0614076312174 }
	&quot;0.0284166802147&quot; probability: 27.27%
	&quot;0.0296878090138&quot; probability: 45.45%
	&quot;0.0313637544164&quot; probability: 18.18%
	&quot;0.0614076312174&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.x one of { 0.0284166802147, 0.0296878090138, 0.0313637544164, 0.0614076312174 }
	&quot;0.0284166802147&quot; probability: 27.27%
	&quot;0.0296878090138&quot; probability: 45.45%
	&quot;0.0313637544164&quot; probability: 18.18%
	&quot;0.0614076312174&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0232432845708)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0232432845708)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.014634604382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.014634604382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y one of { -0.0139821081584, -0.00985186536292, -0.00558501309503, -4.13960285797E-4, 0.0028138179687, 0.0078291594107, 0.0232432845708 }
	&quot;-0.0139821081584&quot; probability: 27.27%
	&quot;-0.00985186536292&quot; probability: 18.18%
	&quot;-0.00558501309503&quot; probability: 9.09%
	&quot;-4.13960285797E-4&quot; probability: 18.18%
	&quot;0.0028138179687&quot; probability: 9.09%
	&quot;0.0078291594107&quot; probability: 9.09%
	&quot;0.0232432845708&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.y one of { -0.0139821081584, -0.00985186536292, -0.00558501309503, -4.13960285797E-4, 0.0028138179687, 0.0078291594107, 0.0232432845708 }
	&quot;-0.0139821081584&quot; probability: 27.27%
	&quot;-0.00985186536292&quot; probability: 18.18%
	&quot;-0.00558501309503&quot; probability: 9.09%
	&quot;-4.13960285797E-4&quot; probability: 18.18%
	&quot;0.0028138179687&quot; probability: 9.09%
	&quot;0.0078291594107&quot; probability: 9.09%
	&quot;0.0232432845708&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.0341886905195)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.0341886905195)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.033118150278)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.033118150278)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z one of { -0.0329472606292, -0.0244541158749, -0.0212296424222, 0.0325852786301, 0.0341886905195 }
	&quot;-0.0329472606292&quot; probability: 18.18%
	&quot;-0.0244541158749&quot; probability: 27.27%
	&quot;-0.0212296424222&quot; probability: 9.09%
	&quot;0.0325852786301&quot; probability: 36.36%
	&quot;0.0341886905195&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.rotation.z one of { -0.0329472606292, -0.0244541158749, -0.0212296424222, 0.0325852786301, 0.0341886905195 }
	&quot;-0.0329472606292&quot; probability: 18.18%
	&quot;-0.0244541158749&quot; probability: 27.27%
	&quot;-0.0212296424222&quot; probability: 9.09%
	&quot;0.0325852786301&quot; probability: 36.36%
	&quot;0.0341886905195&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.919518239176)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.919518239176)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x &gt;= -0.903438555844)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x &gt;= -0.903438555844)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x one of { -0.903438555844, 0.118726406715, 0.907945990277, 0.915267991825, 0.916904812814, 0.918392004657, 0.919518239176 }
	&quot;-0.903438555844&quot; probability: 9.09%
	&quot;0.118726406715&quot; probability: 9.09%
	&quot;0.907945990277&quot; probability: 9.09%
	&quot;0.915267991825&quot; probability: 27.27%
	&quot;0.916904812814&quot; probability: 9.09%
	&quot;0.918392004657&quot; probability: 18.18%
	&quot;0.919518239176&quot; probability: 18.18%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.x one of { -0.903438555844, 0.118726406715, 0.907945990277, 0.915267991825, 0.916904812814, 0.918392004657, 0.919518239176 }
	&quot;-0.903438555844&quot; probability: 9.09%
	&quot;0.118726406715&quot; probability: 9.09%
	&quot;0.907945990277&quot; probability: 9.09%
	&quot;0.915267991825&quot; probability: 27.27%
	&quot;0.916904812814&quot; probability: 9.09%
	&quot;0.918392004657&quot; probability: 18.18%
	&quot;0.919518239176&quot; probability: 18.18%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.07048453329)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.07048453329)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y &gt;= -0.918759705995)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y &gt;= -0.918759705995)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y one of { -0.918759705995, -0.917240518129, -0.91534743942, 0.873754738765, 0.874815382939, 0.876517045517, 0.923198015141, 0.988139865486, 1.07048453329 }
	&quot;-0.918759705995&quot; probability: 9.09%
	&quot;-0.917240518129&quot; probability: 9.09%
	&quot;-0.91534743942&quot; probability: 18.18%
	&quot;0.873754738765&quot; probability: 9.09%
	&quot;0.874815382939&quot; probability: 9.09%
	&quot;0.876517045517&quot; probability: 18.18%
	&quot;0.923198015141&quot; probability: 9.09%
	&quot;0.988139865486&quot; probability: 9.09%
	&quot;1.07048453329&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.y one of { -0.918759705995, -0.917240518129, -0.91534743942, 0.873754738765, 0.874815382939, 0.876517045517, 0.923198015141, 0.988139865486, 1.07048453329 }
	&quot;-0.918759705995&quot; probability: 9.09%
	&quot;-0.917240518129&quot; probability: 9.09%
	&quot;-0.91534743942&quot; probability: 18.18%
	&quot;0.873754738765&quot; probability: 9.09%
	&quot;0.874815382939&quot; probability: 9.09%
	&quot;0.876517045517&quot; probability: 18.18%
	&quot;0.923198015141&quot; probability: 9.09%
	&quot;0.988139865486&quot; probability: 9.09%
	&quot;1.07048453329&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z != orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z != orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.803530374458)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.803530374458)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.389216029352)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.389216029352)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z one of { 0.389223377165, 0.419879352683, 0.421361366973, 0.423668620137, 0.425101172047, 0.595190103677, 0.614939370783, 0.803530374458 }
	&quot;0.389223377165&quot; probability: 36.36%
	&quot;0.419879352683&quot; probability: 9.09%
	&quot;0.421361366973&quot; probability: 9.09%
	&quot;0.423668620137&quot; probability: 9.09%
	&quot;0.425101172047&quot; probability: 9.09%
	&quot;0.595190103677&quot; probability: 9.09%
	&quot;0.614939370783&quot; probability: 9.09%
	&quot;0.803530374458&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param0.transform.translation.z one of { 0.389223377165, 0.419879352683, 0.421361366973, 0.423668620137, 0.425101172047, 0.595190103677, 0.614939370783, 0.803530374458 }
	&quot;0.389223377165&quot; probability: 36.36%
	&quot;0.419879352683&quot; probability: 9.09%
	&quot;0.421361366973&quot; probability: 9.09%
	&quot;0.423668620137&quot; probability: 9.09%
	&quot;0.425101172047&quot; probability: 9.09%
	&quot;0.595190103677&quot; probability: 9.09%
	&quot;0.614939370783&quot; probability: 9.09%
	&quot;0.803530374458&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.seq &gt; orig(param1.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.seq &gt; orig(param1.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.seq one of { 76273, 76279, 76283, 76287, 172213, 235780, 239322, 242857, 242860, 242866, 242871 }
	&quot;76273&quot; probability: 0.09%
	&quot;76279&quot; probability: 0.09%
	&quot;76283&quot; probability: 0.09%
	&quot;76287&quot; probability: 0.09%
	&quot;172213&quot; probability: 0.09%
	&quot;235780&quot; probability: 0.09%
	&quot;239322&quot; probability: 0.09%
	&quot;242857&quot; probability: 0.09%
	&quot;242860&quot; probability: 0.09%
	&quot;242866&quot; probability: 0.09%
	&quot;242871&quot; probability: 0.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.seq one of { 76273, 76279, 76283, 76287, 172213, 235780, 239322, 242857, 242860, 242866, 242871 }
	&quot;76273&quot; probability: 0.09%
	&quot;76279&quot; probability: 0.09%
	&quot;76283&quot; probability: 0.09%
	&quot;76287&quot; probability: 0.09%
	&quot;172213&quot; probability: 0.09%
	&quot;235780&quot; probability: 0.09%
	&quot;239322&quot; probability: 0.09%
	&quot;242857&quot; probability: 0.09%
	&quot;242860&quot; probability: 0.09%
	&quot;242866&quot; probability: 0.09%
	&quot;242871&quot; probability: 0.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.nsecs != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.nsecs one of { 24344630, 34165072, 122652957, 182682679, 222669032, 262920725, 644126818, 645979710, 894728136, 924102970, 984096010 }
	&quot;24344630&quot; probability: 0.09%
	&quot;34165072&quot; probability: 0.09%
	&quot;122652957&quot; probability: 0.09%
	&quot;182682679&quot; probability: 0.09%
	&quot;222669032&quot; probability: 0.09%
	&quot;262920725&quot; probability: 0.09%
	&quot;644126818&quot; probability: 0.09%
	&quot;645979710&quot; probability: 0.09%
	&quot;894728136&quot; probability: 0.09%
	&quot;924102970&quot; probability: 0.09%
	&quot;984096010&quot; probability: 0.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.nsecs one of { 24344630, 34165072, 122652957, 182682679, 222669032, 262920725, 644126818, 645979710, 894728136, 924102970, 984096010 }
	&quot;24344630&quot; probability: 0.09%
	&quot;34165072&quot; probability: 0.09%
	&quot;122652957&quot; probability: 0.09%
	&quot;182682679&quot; probability: 0.09%
	&quot;222669032&quot; probability: 0.09%
	&quot;262920725&quot; probability: 0.09%
	&quot;644126818&quot; probability: 0.09%
	&quot;645979710&quot; probability: 0.09%
	&quot;894728136&quot; probability: 0.09%
	&quot;924102970&quot; probability: 0.09%
	&quot;984096010&quot; probability: 0.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777296, 1550023632, 1550024271, 1550024306, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.07%
	&quot;1550023632&quot; probability: 0.07%
	&quot;1550024271&quot; probability: 0.07%
	&quot;1550024306&quot; probability: 0.07%
	&quot;1550024343&quot; probability: 0.64%
	&quot;1550024344&quot; probability: 0.07%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777296, 1550023632, 1550024271, 1550024306, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.07%
	&quot;1550023632&quot; probability: 0.07%
	&quot;1550024271&quot; probability: 0.07%
	&quot;1550024306&quot; probability: 0.07%
	&quot;1550024343&quot; probability: 0.64%
	&quot;1550024344&quot; probability: 0.07%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.w &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.w &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941772071965, 0.94323468005, 0.997787794212 }
	&quot;0.941772071965&quot; probability: 9.09%
	&quot;0.94323468005&quot; probability: 54.55%
	&quot;0.997787794212&quot; probability: 36.36%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941772071965, 0.94323468005, 0.997787794212 }
	&quot;0.941772071965&quot; probability: 9.09%
	&quot;0.94323468005&quot; probability: 54.55%
	&quot;0.997787794212&quot; probability: 36.36%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941772071965, 0.94323468005, 0.997787794212 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941772071965, 0.94323468005, 0.997787794212 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x != orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x != orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00191818768911)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00191818768911)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00512981578956)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00512981578956)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00507236370623, 4.54791488014E-4, 0.00191818768911 }
	&quot;-0.00507236370623&quot; probability: 36.36%
	&quot;4.54791488014E-4&quot; probability: 54.55%
	&quot;0.00191818768911&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00507236370623, 4.54791488014E-4, 0.00191818768911 }
	&quot;-0.00507236370623&quot; probability: 36.36%
	&quot;4.54791488014E-4&quot; probability: 54.55%
	&quot;0.00191818768911&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y != orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y != orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00582106403122)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00582106403122)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00396987108714)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00396987108714)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00395401910601, 0.00575468166734 }
	&quot;-0.00395401910601&quot; probability: 63.64%
	&quot;0.00575468166734&quot; probability: 36.36%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00395401910601, 0.00575468166734 }
	&quot;-0.00395401910601&quot; probability: 63.64%
	&quot;0.00575468166734&quot; probability: 36.36%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.33622321567)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.33622321567)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0660092507654)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0660092507654)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660353881394, 0.332102953372, 0.33622321567 }
	&quot;0.0660353881394&quot; probability: 36.36%
	&quot;0.332102953372&quot; probability: 54.55%
	&quot;0.33622321567&quot; probability: 9.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660353881394, 0.332102953372, 0.33622321567 }
	&quot;0.0660353881394&quot; probability: 36.36%
	&quot;0.332102953372&quot; probability: 54.55%
	&quot;0.33622321567&quot; probability: 9.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130732939432)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130732939432)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130732939432, -0.0768893693482 }
	&quot;-0.130732939432&quot; probability: 63.64%
	&quot;-0.0768893693482&quot; probability: 36.36%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130732939432, -0.0768893693482 }
	&quot;-0.130732939432&quot; probability: 63.64%
	&quot;-0.0768893693482&quot; probability: 36.36%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513598053325)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513598053325)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163342366815)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163342366815)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163055535323, 0.0497676827193, 0.0511408022109 }
	&quot;-0.0163055535323&quot; probability: 36.36%
	&quot;0.0497676827193&quot; probability: 9.09%
	&quot;0.0511408022109&quot; probability: 54.55%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163055535323, 0.0497676827193, 0.0511408022109 }
	&quot;-0.0163055535323&quot; probability: 36.36%
	&quot;0.0497676827193&quot; probability: 9.09%
	&quot;0.0511408022109&quot; probability: 54.55%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05248077958)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05248077958)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276721780585)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276721780585)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276808644988, 1.05240919942 }
	&quot;0.276808644988&quot; probability: 36.36%
	&quot;1.05240919942&quot; probability: 63.64%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276808644988, 1.05240919942 }
	&quot;0.276808644988&quot; probability: 36.36%
	&quot;1.05240919942&quot; probability: 63.64%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param2.data &lt;= orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param2.data &lt;= orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param2.data == &quot;no&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data == &quot;GOAL REACHED&quot;)  ==&gt;  (param2.data == &quot;no&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.58%
	&quot;0.996675979108&quot; probability: 7.35%
	&quot;0.998004160168&quot; probability: 70.88%
	&quot;0.999056851193&quot; probability: 16.55%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.58%
	&quot;0.996675979108&quot; probability: 7.35%
	&quot;0.998004160168&quot; probability: 70.88%
	&quot;0.999056851193&quot; probability: 16.55%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.917557388805)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.917557388805)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.49%
	&quot;0.943236931927&quot; probability: 39.46%
	&quot;0.997787593551&quot; probability: 19.04%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.49%
	&quot;0.943236931927&quot; probability: 39.46%
	&quot;0.997787593551&quot; probability: 19.04%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.72%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.46%
	&quot;0.00187291365961&quot; probability: 41.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.72%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.46%
	&quot;0.00187291365961&quot; probability: 41.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.96%
	&quot;0.00579792162242&quot; probability: 18.91%
	&quot;0.0068352641971&quot; probability: 0.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.96%
	&quot;0.00579792162242&quot; probability: 18.91%
	&quot;0.0068352641971&quot; probability: 0.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.04%
	&quot;0.33209650183&quot; probability: 39.46%
	&quot;0.336192066889&quot; probability: 41.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.04%
	&quot;0.33209650183&quot; probability: 39.46%
	&quot;0.336192066889&quot; probability: 41.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.96%
	&quot;-0.0768714144176&quot; probability: 19.04%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.96%
	&quot;-0.0768714144176&quot; probability: 19.04%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.04%
	&quot;0.0496432718844&quot; probability: 41.49%
	&quot;0.0511190919793&quot; probability: 39.46%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.04%
	&quot;0.0496432718844&quot; probability: 41.49%
	&quot;0.0511190919793&quot; probability: 39.46%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.04%
	&quot;1.05235948185&quot; probability: 80.96%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.04%
	&quot;1.05235948185&quot; probability: 80.96%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.29%	count:5591.0 total:9932.0
	&quot;nonsensical&quot; probability: 7.12%	count:707.0 total:9932.0
	&quot;y&quot; probability: 36.59%	count:3634.0 total:9932.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.29%	count:5591.0 total:9932.0
	&quot;nonsensical&quot; probability: 7.12%	count:707.0 total:9932.0
	&quot;y&quot; probability: 36.59%	count:3634.0 total:9932.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 41.45%
	&quot;0.943261993842&quot; probability: 39.43%
	&quot;0.997788345438&quot; probability: 19.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 41.45%
	&quot;0.943261993842&quot; probability: 39.43%
	&quot;0.997788345438&quot; probability: 19.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.29%
	&quot;-0.0051186549392&quot; probability: 18.66%
	&quot;-0.00410114939048&quot; probability: 0.17%
	&quot;2.89138628677E-4&quot; probability: 39.43%
	&quot;0.00181840508637&quot; probability: 41.45%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.29%
	&quot;-0.0051186549392&quot; probability: 18.66%
	&quot;-0.00410114939048&quot; probability: 0.17%
	&quot;2.89138628677E-4&quot; probability: 39.43%
	&quot;0.00181840508637&quot; probability: 41.45%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 80.88%
	&quot;0.00581902761016&quot; probability: 19.03%
	&quot;0.00685348608903&quot; probability: 0.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 80.88%
	&quot;0.00581902761016&quot; probability: 19.03%
	&quot;0.00685348608903&quot; probability: 0.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 19.12%
	&quot;0.332025338306&quot; probability: 39.43%
	&quot;0.336205303253&quot; probability: 41.45%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 19.12%
	&quot;0.332025338306&quot; probability: 39.43%
	&quot;0.336205303253&quot; probability: 41.45%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 80.86%
	&quot;-0.0768626611435&quot; probability: 19.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 80.86%
	&quot;-0.0768626611435&quot; probability: 19.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 19.12%
	&quot;0.0496066092566&quot; probability: 41.45%
	&quot;0.0511671453035&quot; probability: 39.43%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 19.12%
	&quot;0.0496066092566&quot; probability: 41.45%
	&quot;0.0511671453035&quot; probability: 39.43%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 19.12%
	&quot;1.05235838107&quot; probability: 80.88%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 19.12%
	&quot;1.05235838107&quot; probability: 80.88%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.29%	count:5591.0 total:9932.0
	&quot;nonsensical&quot; probability: 7.12%	count:707.0 total:9932.0
	&quot;y&quot; probability: 36.59%	count:3634.0 total:9932.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.29%	count:5591.0 total:9932.0
	&quot;nonsensical&quot; probability: 7.12%	count:707.0 total:9932.0
	&quot;y&quot; probability: 36.59%	count:3634.0 total:9932.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 12.06%	count:607.0 total:5034.0
	&quot;GO TO GOAL&quot; probability: 87.94%	count:4427.0 total:5034.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 12.06%	count:607.0 total:5034.0
	&quot;GO TO GOAL&quot; probability: 87.94%	count:4427.0 total:5034.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777296, 1550023576, 1550023582, 1550023583, 1550023585, 1550023632, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024270, 1550024305, 1550024313, 1550024315, 1550024316, 1550024318, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.07%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024305&quot; probability: 0.00%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%
	&quot;1550024343&quot; probability: 0.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777296, 1550023576, 1550023582, 1550023583, 1550023585, 1550023632, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024270, 1550024305, 1550024313, 1550024315, 1550024316, 1550024318, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.07%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024305&quot; probability: 0.00%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%
	&quot;1550024343&quot; probability: 0.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999258720505)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999258720505)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.994876539454)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.994876539454)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.994876539454, 0.996675979108, 0.998035346448, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 0.16%
	&quot;0.996675979108&quot; probability: 4.05%
	&quot;0.998035346448&quot; probability: 87.70%
	&quot;0.99908871221&quot; probability: 8.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.994876539454, 0.996675979108, 0.998035346448, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 0.16%
	&quot;0.996675979108&quot; probability: 4.05%
	&quot;0.998035346448&quot; probability: 87.70%
	&quot;0.99908871221&quot; probability: 8.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0750909639557)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0750909639557)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.023198867329)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.023198867329)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.067603180502)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.067603180502)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0490744331462)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0490744331462)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0595931237531)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0595931237531)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0353277715053)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0353277715053)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.08996705658)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.08996705658)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.984381822962)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.380798058475)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.380798058475)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024270, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024270, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 32.58%
	&quot;0.943235340366&quot; probability: 34.52%
	&quot;0.997796183469&quot; probability: 32.90%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 32.58%
	&quot;0.943235340366&quot; probability: 34.52%
	&quot;0.997796183469&quot; probability: 32.90%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198265958772)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00658231279147)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.81%
	&quot;-0.00428861534958&quot; probability: 32.09%
	&quot;7.26569747456E-5&quot; probability: 34.52%
	&quot;0.00192395493077&quot; probability: 32.58%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.81%
	&quot;-0.00428861534958&quot; probability: 32.09%
	&quot;7.26569747456E-5&quot; probability: 34.52%
	&quot;0.00192395493077&quot; probability: 32.58%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0066764762915)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00447231667998)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.10%
	&quot;0.00569162910516&quot; probability: 32.90%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.10%
	&quot;0.00569162910516&quot; probability: 32.90%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625965486)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659152224716)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659152224716)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.90%
	&quot;0.332100277782&quot; probability: 34.52%
	&quot;0.336238539909&quot; probability: 32.58%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.90%
	&quot;0.332100277782&quot; probability: 34.52%
	&quot;0.336238539909&quot; probability: 32.58%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131017927984)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131017927984)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129715820278, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.37%
	&quot;-0.129715820278&quot; probability: 9.72%
	&quot;-0.0778104198604&quot; probability: 32.90%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130820841191, -0.129715820278, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.37%
	&quot;-0.129715820278&quot; probability: 9.72%
	&quot;-0.0778104198604&quot; probability: 32.90%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516245204743)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516245204743)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016356067981)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.90%
	&quot;0.0498263805988&quot; probability: 32.58%
	&quot;0.0513830151476&quot; probability: 34.52%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.90%
	&quot;0.0498263805988&quot; probability: 32.58%
	&quot;0.0513830151476&quot; probability: 34.52%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05277301232)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276358412143)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.90%
	&quot;1.05236375187&quot; probability: 67.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.90%
	&quot;1.05236375187&quot; probability: 67.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 15.16%	count:111.0 total:732.0
	&quot;y&quot; probability: 84.84%	count:621.0 total:732.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 15.16%	count:111.0 total:732.0
	&quot;y&quot; probability: 84.84%	count:621.0 total:732.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024271, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343, 1550024344 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024271&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%
	&quot;1550024344&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024271, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343, 1550024344 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024271&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%
	&quot;1550024344&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999529268133)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999529268133)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.995710238669)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.995710238669)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.996683457272, 0.99771068881, 0.999023981715 }
	&quot;0.996683457272&quot; probability: 2.59%
	&quot;0.99771068881&quot; probability: 77.18%
	&quot;0.999023981715&quot; probability: 20.23%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.996683457272, 0.99771068881, 0.999023981715 }
	&quot;0.996683457272&quot; probability: 2.59%
	&quot;0.99771068881&quot; probability: 77.18%
	&quot;0.999023981715&quot; probability: 20.23%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.0777934917498)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.0777934917498)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= 0.00579911354825)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= 0.00579911354825)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0504985114438)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0504985114438)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425142480493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425142480493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.919518239176)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.919518239176)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x &gt;= -0.903438555844)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x &gt;= -0.903438555844)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.07048453329)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.07048453329)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z != orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z != orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.389216029352)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.389216029352)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024271, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343, 1550024344 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024271&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%
	&quot;1550024344&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.header.stamp.secs one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024271, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343, 1550024344 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024271&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%
	&quot;1550024344&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 32.52%
	&quot;0.943189357147&quot; probability: 34.47%
	&quot;0.997786924692&quot; probability: 33.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 32.52%
	&quot;0.943189357147&quot; probability: 34.47%
	&quot;0.997786924692&quot; probability: 33.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 1.62%
	&quot;-0.00513675410628&quot; probability: 31.39%
	&quot;2.75938565783E-4&quot; probability: 34.47%
	&quot;0.00191107265235&quot; probability: 32.52%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 1.62%
	&quot;-0.00513675410628&quot; probability: 31.39%
	&quot;2.75938565783E-4&quot; probability: 34.47%
	&quot;0.00191107265235&quot; probability: 32.52%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 66.99%
	&quot;0.0059419944482&quot; probability: 33.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 66.99%
	&quot;0.0059419944482&quot; probability: 33.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 33.01%
	&quot;0.332231048848&quot; probability: 34.47%
	&quot;0.33622739792&quot; probability: 32.52%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 33.01%
	&quot;0.332231048848&quot; probability: 34.47%
	&quot;0.33622739792&quot; probability: 32.52%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.130989889993)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.130989889993)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129785209757, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 57.44%
	&quot;-0.129785209757&quot; probability: 9.55%
	&quot;-0.0775165645194&quot; probability: 33.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129785209757, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 57.44%
	&quot;-0.129785209757&quot; probability: 9.55%
	&quot;-0.0775165645194&quot; probability: 33.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163342366815)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163342366815)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 33.01%
	&quot;0.0498189383075&quot; probability: 32.52%
	&quot;0.0513074083698&quot; probability: 34.47%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 33.01%
	&quot;0.0498189383075&quot; probability: 32.52%
	&quot;0.0513074083698&quot; probability: 34.47%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 33.01%
	&quot;1.05235703608&quot; probability: 66.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 33.01%
	&quot;1.05235703608&quot; probability: 66.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 15.16%	count:111.0 total:732.0
	&quot;y&quot; probability: 84.84%	count:621.0 total:732.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 15.16%	count:111.0 total:732.0
	&quot;y&quot; probability: 84.84%	count:621.0 total:732.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 97.37%	count:408.0 total:419.0
	&quot;GOAL REACHED&quot; probability: 2.63%	count:11.0 total:419.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 97.37%	count:408.0 total:419.0
	&quot;GOAL REACHED&quot; probability: 2.63%	count:11.0 total:419.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999598222494)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.37%
	&quot;0.994762941873&quot; probability: 2.71%
	&quot;0.996472375094&quot; probability: 10.26%
	&quot;0.998004160168&quot; probability: 68.33%
	&quot;0.999056851193&quot; probability: 17.98%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.37%
	&quot;0.994762941873&quot; probability: 2.71%
	&quot;0.996472375094&quot; probability: 10.26%
	&quot;0.998004160168&quot; probability: 68.33%
	&quot;0.999056851193&quot; probability: 17.98%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.110095295384)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0109747507955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0925445664216)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0402241026347)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.919880325121)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.26839615239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 1.12411675036)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.53%
	&quot;0.943236931927&quot; probability: 40.20%
	&quot;0.997787593551&quot; probability: 17.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.53%
	&quot;0.943236931927&quot; probability: 40.20%
	&quot;0.997787593551&quot; probability: 17.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00198698787493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00662679015382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 17.00%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.20%
	&quot;0.00187291365961&quot; probability: 42.53%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 17.00%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.20%
	&quot;0.00187291365961&quot; probability: 42.53%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.0068352641971)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00448487477864)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.74%
	&quot;0.00579792162242&quot; probability: 17.11%
	&quot;0.0068352641971&quot; probability: 0.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.74%
	&quot;0.00579792162242&quot; probability: 17.11%
	&quot;0.0068352641971&quot; probability: 0.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.33625933577)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0656954191624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.26%
	&quot;0.33209650183&quot; probability: 40.20%
	&quot;0.336192066889&quot; probability: 42.53%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.26%
	&quot;0.33209650183&quot; probability: 40.20%
	&quot;0.336192066889&quot; probability: 42.53%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.131121640413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.74%
	&quot;-0.0768714144176&quot; probability: 17.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.74%
	&quot;-0.0768714144176&quot; probability: 17.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0516363599869)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0164068895762)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.26%
	&quot;0.0496432718844&quot; probability: 42.53%
	&quot;0.0511190919793&quot; probability: 40.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.26%
	&quot;0.0496432718844&quot; probability: 42.53%
	&quot;0.0511190919793&quot; probability: 40.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05254221732)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05254221732)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276342236547)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.26%
	&quot;1.05235948185&quot; probability: 82.74%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.26%
	&quot;1.05235948185&quot; probability: 82.74%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.30%	count:5507.0 total:8840.0
	&quot;nonsensical&quot; probability: 8.00%	count:707.0 total:8840.0
	&quot;y&quot; probability: 29.71%	count:2626.0 total:8840.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.30%	count:5507.0 total:8840.0
	&quot;nonsensical&quot; probability: 8.00%	count:707.0 total:8840.0
	&quot;y&quot; probability: 29.71%	count:2626.0 total:8840.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.13019280339)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.033330542952)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941755582956)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 42.49%
	&quot;0.943261993842&quot; probability: 40.16%
	&quot;0.997788345438&quot; probability: 17.35%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 42.49%
	&quot;0.943261993842&quot; probability: 40.16%
	&quot;0.997788345438&quot; probability: 17.35%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.11%
	&quot;-0.0051186549392&quot; probability: 17.05%
	&quot;-0.00410114939048&quot; probability: 0.19%
	&quot;2.89138628677E-4&quot; probability: 40.16%
	&quot;0.00181840508637&quot; probability: 42.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.11%
	&quot;-0.0051186549392&quot; probability: 17.05%
	&quot;-0.00410114939048&quot; probability: 0.19%
	&quot;2.89138628677E-4&quot; probability: 40.16%
	&quot;0.00181840508637&quot; probability: 42.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 82.65%
	&quot;0.00581902761016&quot; probability: 17.25%
	&quot;0.00685348608903&quot; probability: 0.11%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 82.65%
	&quot;0.00581902761016&quot; probability: 17.25%
	&quot;0.00685348608903&quot; probability: 0.11%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 17.35%
	&quot;0.332025338306&quot; probability: 40.16%
	&quot;0.336205303253&quot; probability: 42.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 17.35%
	&quot;0.332025338306&quot; probability: 40.16%
	&quot;0.336205303253&quot; probability: 42.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 82.63%
	&quot;-0.0768626611435&quot; probability: 17.35%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 82.63%
	&quot;-0.0768626611435&quot; probability: 17.35%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0516188943144)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0516188943144)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 17.35%
	&quot;0.0496066092566&quot; probability: 42.49%
	&quot;0.0511671453035&quot; probability: 40.16%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 17.35%
	&quot;0.0496066092566&quot; probability: 42.49%
	&quot;0.0511671453035&quot; probability: 40.16%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 17.35%
	&quot;1.05235838107&quot; probability: 82.65%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 17.35%
	&quot;1.05235838107&quot; probability: 82.65%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.30%	count:5507.0 total:8840.0
	&quot;nonsensical&quot; probability: 8.00%	count:707.0 total:8840.0
	&quot;y&quot; probability: 29.71%	count:2626.0 total:8840.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.30%	count:5507.0 total:8840.0
	&quot;nonsensical&quot; probability: 8.00%	count:707.0 total:8840.0
	&quot;y&quot; probability: 29.71%	count:2626.0 total:8840.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.71%	count:3828.0 total:3839.0
	&quot;GOAL REACHED&quot; probability: 0.29%	count:11.0 total:3839.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; })  ==&gt;  (return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.71%	count:3828.0 total:3839.0
	&quot;GOAL REACHED&quot; probability: 0.29%	count:11.0 total:3839.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(return.data  ==   &quot;no&quot;)&quot;</PPTNAME>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.127117512456</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.988539091428</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 1.12411675036</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.0335555937246</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.919880325121</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.26839615239</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.110095295384</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.59%
	&quot;0.996675979108&quot; probability: 7.33%
	&quot;0.998004160168&quot; probability: 70.76%
	&quot;0.999056851193&quot; probability: 16.67%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999598222494</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.92%
	&quot;0.00579792162242&quot; probability: 18.95%
	&quot;0.0068352641971&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.08%
	&quot;0.33209650183&quot; probability: 39.50%
	&quot;0.336192066889&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.33625965486</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.08%
	&quot;1.05235948185&quot; probability: 80.92%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05277301232</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276342236547</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.92%
	&quot;-0.0768714144176&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.131121640413</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.08%
	&quot;0.0496432718844&quot; probability: 41.42%
	&quot;0.0511190919793&quot; probability: 39.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0516363599869</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0164068895762</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.76%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.50%
	&quot;0.00187291365961&quot; probability: 41.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.42%
	&quot;0.943236931927&quot; probability: 39.50%
	&quot;0.997787593551&quot; probability: 19.08%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.33%	count:5607.0 total:9954.0
	&quot;nonsensical&quot; probability: 7.10%	count:707.0 total:9954.0
	&quot;y&quot; probability: 36.57%	count:3640.0 total:9954.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 12.03%	count:607.0 total:5045.0
	&quot;GO TO GOAL&quot; probability: 87.75%	count:4427.0 total:5045.0
	&quot;GOAL REACHED&quot; probability: 0.22%	count:11.0 total:5045.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>5246</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>3574</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>3574</SAMPLES> <DAIKON>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.65%	count:3100.0 total:3111.0
	&quot;GOAL REACHED&quot; probability: 0.35%	count:11.0 total:3111.0</INV> <SAMPLES>3574</SAMPLES> <DAIKON>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.65%	count:3100.0 total:3111.0
	&quot;GOAL REACHED&quot; probability: 0.35%	count:11.0 total:3111.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>3574</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>1672</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }</INV> <SAMPLES>1672</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 41.26%	count:607.0 total:1471.0
	&quot;GO TO GOAL&quot; probability: 58.74%	count:864.0 total:1471.0</INV> <SAMPLES>1672</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 41.26%	count:607.0 total:1471.0
	&quot;GO TO GOAL&quot; probability: 58.74%	count:864.0 total:1471.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>1672</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == orig(param2.data)</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.data == &quot;GO TO GOAL&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>return.data == &quot;GO TO GOAL&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.data == &quot;GO TO GOAL&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>return.data == &quot;GO TO GOAL&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data &gt; return.data</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data &gt; return.data</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 11.06%	count:508.0 total:4592.0
	&quot;GO TO GOAL&quot; probability: 88.70%	count:4073.0 total:4592.0
	&quot;GOAL REACHED&quot; probability: 0.24%	count:11.0 total:4592.0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 11.06%	count:508.0 total:4592.0
	&quot;GO TO GOAL&quot; probability: 88.70%	count:4073.0 total:4592.0
	&quot;GOAL REACHED&quot; probability: 0.24%	count:11.0 total:4592.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>1117</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }</INV> <SAMPLES>1117</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 49.90%	count:508.0 total:1018.0
	&quot;GO TO GOAL&quot; probability: 50.10%	count:510.0 total:1018.0</INV> <SAMPLES>1117</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 49.90%	count:508.0 total:1018.0
	&quot;GO TO GOAL&quot; probability: 50.10%	count:510.0 total:1018.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>1117</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4129</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>4129</SAMPLES> <DAIKON>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.68%	count:3453.0 total:3464.0
	&quot;GOAL REACHED&quot; probability: 0.32%	count:11.0 total:3464.0</INV> <SAMPLES>4129</SAMPLES> <DAIKON>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.68%	count:3453.0 total:3464.0
	&quot;GOAL REACHED&quot; probability: 0.32%	count:11.0 total:3464.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>4129</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == orig(param2.data)</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>555</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.data == &quot;GO TO GOAL&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>return.data == &quot;GO TO GOAL&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.data == &quot;GO TO GOAL&quot;</INV> <SAMPLES>555</SAMPLES> <DAIKON>return.data == &quot;GO TO GOAL&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data &gt; return.data</INV> <SAMPLES>555</SAMPLES> <DAIKON>param2.data &gt; return.data</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 11.06%	count:508.0 total:4592.0
	&quot;GO TO GOAL&quot; probability: 88.70%	count:4073.0 total:4592.0
	&quot;GOAL REACHED&quot; probability: 0.24%	count:11.0 total:4592.0</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 11.06%	count:508.0 total:4592.0
	&quot;GO TO GOAL&quot; probability: 88.70%	count:4073.0 total:4592.0
	&quot;GOAL REACHED&quot; probability: 0.24%	count:11.0 total:4592.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>4691</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>607</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>return.data == &quot;AVOIDING&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>return.data == &quot;AVOIDING&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>return.data == &quot;AVOIDING&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>return.data == &quot;AVOIDING&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.0468003837374</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.0468003837374</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.0490744331462</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.0490744331462</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.0595931237531</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.0595931237531</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0350539028303</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0350539028303</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1550023576, 1550023582, 1550023583, 1550023585, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024313, 1550024315, 1550024316, 1550024318 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.08%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1550023576, 1550023582, 1550023583, 1550023585, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024313, 1550024315, 1550024316, 1550024318 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.08%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 0.984381822962</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 0.984381822962</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.489379980748</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.489379980748</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.779644320047</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.779644320047</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 0.720470162692</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 0.720470162692</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.068941639434</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.068941639434</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.023198867329</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.023198867329</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 4.12%
	&quot;0.998035346448&quot; probability: 88.96%
	&quot;0.999258720505&quot; probability: 6.92%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { 0.996675979108, 0.998035346448, 0.999258720505 }
	&quot;0.996675979108&quot; probability: 4.12%
	&quot;0.998035346448&quot; probability: 88.96%
	&quot;0.999258720505&quot; probability: 6.92%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999258720505</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999258720505</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= 0.996659982233</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= 0.996659982233</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.16%
	&quot;0.00569162910516&quot; probability: 32.84%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.16%
	&quot;0.00569162910516&quot; probability: 32.84%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.0066764762915</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.0066764762915</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00447231667998</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00447231667998</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.84%
	&quot;0.332100277782&quot; probability: 34.16%
	&quot;0.336238539909&quot; probability: 33.00%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.84%
	&quot;0.332100277782&quot; probability: 34.16%
	&quot;0.336238539909&quot; probability: 33.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.33625965486</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0659152224716</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0659152224716</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.04%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.84%
	&quot;1.05236375187&quot; probability: 67.16%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.84%
	&quot;1.05236375187&quot; probability: 67.16%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05277301232</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276358412143</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276358412143</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.43%
	&quot;-0.129780306357&quot; probability: 9.74%
	&quot;-0.0778104198604&quot; probability: 32.84%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130820841191, -0.129780306357, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.43%
	&quot;-0.129780306357&quot; probability: 9.74%
	&quot;-0.0778104198604&quot; probability: 32.84%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.131017927984</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.131017927984</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.84%
	&quot;0.0498263805988&quot; probability: 33.00%
	&quot;0.0513830151476&quot; probability: 34.16%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.84%
	&quot;0.0498263805988&quot; probability: 33.00%
	&quot;0.0513830151476&quot; probability: 34.16%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0516245204743</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0516245204743</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.016356067981</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.016356067981</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.83%
	&quot;-0.00428861534958&quot; probability: 32.01%
	&quot;7.26569747456E-5&quot; probability: 34.16%
	&quot;0.00192395493077&quot; probability: 33.00%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.83%
	&quot;-0.00428861534958&quot; probability: 32.01%
	&quot;7.26569747456E-5&quot; probability: 34.16%
	&quot;0.00192395493077&quot; probability: 33.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00198265958772</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00198265958772</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00658231279147</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00658231279147</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 33.00%
	&quot;0.943235340366&quot; probability: 34.16%
	&quot;0.997796183469&quot; probability: 32.84%</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 33.00%
	&quot;0.943235340366&quot; probability: 34.16%
	&quot;0.997796183469&quot; probability: 32.84%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 32.47%	count:100.0 total:308.0
	&quot;y&quot; probability: 67.53%	count:208.0 total:308.0</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 32.47%	count:100.0 total:308.0
	&quot;y&quot; probability: 67.53%	count:208.0 total:308.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>607</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;AVOIDING&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>607</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4639</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>4639</SAMPLES> <DAIKON>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.71%	count:3828.0 total:3839.0
	&quot;GOAL REACHED&quot; probability: 0.29%	count:11.0 total:3839.0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>return.data one of { &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot; }
	&quot;GO TO GOAL&quot; probability: 99.71%	count:3828.0 total:3839.0
	&quot;GOAL REACHED&quot; probability: 0.29%	count:11.0 total:3839.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.127117512456</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.988539091428</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 1.12411675036</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.0335555937246</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.919880325121</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.26839615239</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.110095295384</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.37%
	&quot;0.994762941873&quot; probability: 2.71%
	&quot;0.996472375094&quot; probability: 10.26%
	&quot;0.998004160168&quot; probability: 68.33%
	&quot;0.999056851193&quot; probability: 17.98%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.37%
	&quot;0.994762941873&quot; probability: 2.71%
	&quot;0.996472375094&quot; probability: 10.26%
	&quot;0.998004160168&quot; probability: 68.33%
	&quot;0.999056851193&quot; probability: 17.98%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999598222494</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.74%
	&quot;0.00579792162242&quot; probability: 17.11%
	&quot;0.0068352641971&quot; probability: 0.15%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.74%
	&quot;0.00579792162242&quot; probability: 17.11%
	&quot;0.0068352641971&quot; probability: 0.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.26%
	&quot;0.33209650183&quot; probability: 40.20%
	&quot;0.336192066889&quot; probability: 42.53%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.26%
	&quot;0.33209650183&quot; probability: 40.20%
	&quot;0.336192066889&quot; probability: 42.53%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.33625933577</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.33625933577</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.26%
	&quot;1.05235948185&quot; probability: 82.74%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.26%
	&quot;1.05235948185&quot; probability: 82.74%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05254221732</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05254221732</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276342236547</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.74%
	&quot;-0.0768714144176&quot; probability: 17.26%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.74%
	&quot;-0.0768714144176&quot; probability: 17.26%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.131121640413</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.26%
	&quot;0.0496432718844&quot; probability: 42.53%
	&quot;0.0511190919793&quot; probability: 40.20%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.26%
	&quot;0.0496432718844&quot; probability: 42.53%
	&quot;0.0511190919793&quot; probability: 40.20%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0516363599869</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0164068895762</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 17.00%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.20%
	&quot;0.00187291365961&quot; probability: 42.53%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 17.00%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.20%
	&quot;0.00187291365961&quot; probability: 42.53%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.53%
	&quot;0.943236931927&quot; probability: 40.20%
	&quot;0.997787593551&quot; probability: 17.26%</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.53%
	&quot;0.943236931927&quot; probability: 40.20%
	&quot;0.997787593551&quot; probability: 17.26%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.30%	count:5507.0 total:8840.0
	&quot;nonsensical&quot; probability: 8.00%	count:707.0 total:8840.0
	&quot;y&quot; probability: 29.71%	count:2626.0 total:8840.0</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.30%	count:5507.0 total:8840.0
	&quot;nonsensical&quot; probability: 8.00%	count:707.0 total:8840.0
	&quot;y&quot; probability: 29.71%	count:2626.0 total:8840.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;AVOIDING&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4628</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>return.data == &quot;GO TO GOAL&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>return.data == &quot;GO TO GOAL&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>return.data == &quot;GO TO GOAL&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>return.data == &quot;GO TO GOAL&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.127117512456</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.988539091428</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 1.12411675036</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.0335555937246</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.917557388805</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.917557388805</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.26839615239</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.110095295384</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.38%
	&quot;0.994762941873&quot; probability: 2.70%
	&quot;0.996472375094&quot; probability: 10.28%
	&quot;0.998004160168&quot; probability: 68.45%
	&quot;0.999056851193&quot; probability: 17.84%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996472375094, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.13%
	&quot;0.990104091257&quot; probability: 0.18%
	&quot;0.993195158835&quot; probability: 0.38%
	&quot;0.994762941873&quot; probability: 2.70%
	&quot;0.996472375094&quot; probability: 10.28%
	&quot;0.998004160168&quot; probability: 68.45%
	&quot;0.999056851193&quot; probability: 17.84%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999598222494</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.78%
	&quot;0.00579792162242&quot; probability: 17.07%
	&quot;0.0068352641971&quot; probability: 0.15%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 82.78%
	&quot;0.00579792162242&quot; probability: 17.07%
	&quot;0.0068352641971&quot; probability: 0.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.22%
	&quot;0.33209650183&quot; probability: 40.17%
	&quot;0.336192066889&quot; probability: 42.61%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 17.22%
	&quot;0.33209650183&quot; probability: 40.17%
	&quot;0.336192066889&quot; probability: 42.61%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.33625933577</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.33625933577</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.22%
	&quot;1.05235948185&quot; probability: 82.78%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 17.22%
	&quot;1.05235948185&quot; probability: 82.78%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05254221732</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05254221732</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276342236547</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.78%
	&quot;-0.0768714144176&quot; probability: 17.22%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 82.78%
	&quot;-0.0768714144176&quot; probability: 17.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.131121640413</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.22%
	&quot;0.0496432718844&quot; probability: 42.61%
	&quot;0.0511190919793&quot; probability: 40.17%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 17.22%
	&quot;0.0496432718844&quot; probability: 42.61%
	&quot;0.0511190919793&quot; probability: 40.17%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0516363599869</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0164068895762</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 16.96%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.17%
	&quot;0.00187291365961&quot; probability: 42.61%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00662679015382, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00662679015382&quot; probability: 0.09%
	&quot;-0.00509819561463&quot; probability: 16.96%
	&quot;-0.00354324353796&quot; probability: 0.17%
	&quot;5.12162687346E-4&quot; probability: 40.17%
	&quot;0.00187291365961&quot; probability: 42.61%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.61%
	&quot;0.943236931927&quot; probability: 40.17%
	&quot;0.997787593551&quot; probability: 17.22%</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.61%
	&quot;0.943236931927&quot; probability: 40.17%
	&quot;0.997787593551&quot; probability: 17.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.27%	count:5491.0 total:8818.0
	&quot;nonsensical&quot; probability: 8.02%	count:707.0 total:8818.0
	&quot;y&quot; probability: 29.71%	count:2620.0 total:8818.0</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 62.27%	count:5491.0 total:8818.0
	&quot;nonsensical&quot; probability: 8.02%	count:707.0 total:8818.0
	&quot;y&quot; probability: 29.71%	count:2620.0 total:8818.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GO TO GOAL&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4628</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>618</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; }</INV> <SAMPLES>618</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 97.37%	count:408.0 total:419.0
	&quot;GOAL REACHED&quot; probability: 2.63%	count:11.0 total:419.0</INV> <SAMPLES>618</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GOAL REACHED&quot; }
	&quot;AVOIDING&quot; probability: 97.37%	count:408.0 total:419.0
	&quot;GOAL REACHED&quot; probability: 2.63%	count:11.0 total:419.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.067603180502</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.067603180502</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.0490744331462</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.0490744331462</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.0595931237531</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.0595931237531</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0353277715053</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0353277715053</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777296, 1550023576, 1550023582, 1550023583, 1550023585, 1550023632, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024270, 1550024305, 1550024313, 1550024315, 1550024316, 1550024318, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.07%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024305&quot; probability: 0.00%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%
	&quot;1550024343&quot; probability: 0.01%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777254, 1548777256, 1548777257, 1548777258, 1548777266, 1548777268, 1548777269, 1548777270, 1548777272, 1548777296, 1550023576, 1550023582, 1550023583, 1550023585, 1550023632, 1550023634, 1550023639, 1550023640, 1550023641, 1550024249, 1550024251, 1550024253, 1550024255, 1550024270, 1550024305, 1550024313, 1550024315, 1550024316, 1550024318, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.06%
	&quot;1548777266&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.04%
	&quot;1548777269&quot; probability: 0.04%
	&quot;1548777270&quot; probability: 0.06%
	&quot;1548777272&quot; probability: 0.00%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023585&quot; probability: 0.02%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.07%
	&quot;1550024249&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.09%
	&quot;1550024253&quot; probability: 0.05%
	&quot;1550024255&quot; probability: 0.02%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024305&quot; probability: 0.00%
	&quot;1550024313&quot; probability: 0.03%
	&quot;1550024315&quot; probability: 0.03%
	&quot;1550024316&quot; probability: 0.06%
	&quot;1550024318&quot; probability: 0.06%
	&quot;1550024343&quot; probability: 0.01%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 0.984381822962</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 0.984381822962</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.380798058475</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.380798058475</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.919880325121</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.08996705658</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.08996705658</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.0750909639557</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.0750909639557</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.023198867329</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.023198867329</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { 0.994876539454, 0.996675979108, 0.998035346448, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 0.16%
	&quot;0.996675979108&quot; probability: 4.05%
	&quot;0.998035346448&quot; probability: 87.70%
	&quot;0.99908871221&quot; probability: 8.09%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { 0.994876539454, 0.996675979108, 0.998035346448, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 0.16%
	&quot;0.996675979108&quot; probability: 4.05%
	&quot;0.998035346448&quot; probability: 87.70%
	&quot;0.99908871221&quot; probability: 8.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999258720505</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999258720505</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= 0.994876539454</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= 0.994876539454</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.10%
	&quot;0.00569162910516&quot; probability: 32.90%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.0040036463789, 0.00569162910516 }
	&quot;-0.0040036463789&quot; probability: 67.10%
	&quot;0.00569162910516&quot; probability: 32.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.0066764762915</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.0066764762915</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00447231667998</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00447231667998</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.90%
	&quot;0.332100277782&quot; probability: 34.52%
	&quot;0.336238539909&quot; probability: 32.58%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0659696096002, 0.332100277782, 0.336238539909 }
	&quot;0.0659696096002&quot; probability: 32.90%
	&quot;0.332100277782&quot; probability: 34.52%
	&quot;0.336238539909&quot; probability: 32.58%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.33625965486</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0659152224716</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0659152224716</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024270, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777254, 1548777255, 1548777256, 1548777257, 1548777258, 1548777259, 1548777267, 1548777268, 1548777269, 1548777270, 1548777271, 1548777272, 1548777296, 1550023577, 1550023581, 1550023582, 1550023583, 1550023584, 1550023585, 1550023586, 1550023632, 1550023634, 1550023638, 1550023639, 1550023640, 1550023641, 1550023642, 1550023643, 1550024250, 1550024251, 1550024252, 1550024253, 1550024254, 1550024255, 1550024270, 1550024306, 1550024314, 1550024315, 1550024316, 1550024317, 1550024318, 1550024319, 1550024343 }
	&quot;1548777254&quot; probability: 0.00%
	&quot;1548777255&quot; probability: 0.01%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.02%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777267&quot; probability: 0.03%
	&quot;1548777268&quot; probability: 0.03%
	&quot;1548777269&quot; probability: 0.03%
	&quot;1548777270&quot; probability: 0.03%
	&quot;1548777271&quot; probability: 0.04%
	&quot;1548777272&quot; probability: 0.01%
	&quot;1548777296&quot; probability: 0.01%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023582&quot; probability: 0.04%
	&quot;1550023583&quot; probability: 0.04%
	&quot;1550023584&quot; probability: 0.03%
	&quot;1550023585&quot; probability: 0.04%
	&quot;1550023586&quot; probability: 0.01%
	&quot;1550023632&quot; probability: 0.00%
	&quot;1550023634&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.02%
	&quot;1550023639&quot; probability: 0.03%
	&quot;1550023640&quot; probability: 0.04%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550023642&quot; probability: 0.04%
	&quot;1550023643&quot; probability: 0.01%
	&quot;1550024250&quot; probability: 0.02%
	&quot;1550024251&quot; probability: 0.04%
	&quot;1550024252&quot; probability: 0.03%
	&quot;1550024253&quot; probability: 0.04%
	&quot;1550024254&quot; probability: 0.04%
	&quot;1550024255&quot; probability: 0.01%
	&quot;1550024270&quot; probability: 0.00%
	&quot;1550024306&quot; probability: 0.00%
	&quot;1550024314&quot; probability: 0.02%
	&quot;1550024315&quot; probability: 0.04%
	&quot;1550024316&quot; probability: 0.04%
	&quot;1550024317&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.04%
	&quot;1550024319&quot; probability: 0.03%
	&quot;1550024343&quot; probability: 0.01%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.90%
	&quot;1.05236375187&quot; probability: 67.10%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276602852509, 1.05236375187 }
	&quot;0.276602852509&quot; probability: 32.90%
	&quot;1.05236375187&quot; probability: 67.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05277301232</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276358412143</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276358412143</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130820841191, -0.129715820278, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.37%
	&quot;-0.129715820278&quot; probability: 9.72%
	&quot;-0.0778104198604&quot; probability: 32.90%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130820841191, -0.129715820278, -0.0778104198604 }
	&quot;-0.130820841191&quot; probability: 57.37%
	&quot;-0.129715820278&quot; probability: 9.72%
	&quot;-0.0778104198604&quot; probability: 32.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.131017927984</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.131017927984</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.90%
	&quot;0.0498263805988&quot; probability: 32.58%
	&quot;0.0513830151476&quot; probability: 34.52%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0159963242073, 0.0498263805988, 0.0513830151476 }
	&quot;-0.0159963242073&quot; probability: 32.90%
	&quot;0.0498263805988&quot; probability: 32.58%
	&quot;0.0513830151476&quot; probability: 34.52%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0516245204743</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0516245204743</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.016356067981</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.016356067981</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.81%
	&quot;-0.00428861534958&quot; probability: 32.09%
	&quot;7.26569747456E-5&quot; probability: 34.52%
	&quot;0.00192395493077&quot; probability: 32.58%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00428861534958, 7.26569747456E-5, 0.00192395493077 }
	&quot;-0.00655711337778&quot; probability: 0.81%
	&quot;-0.00428861534958&quot; probability: 32.09%
	&quot;7.26569747456E-5&quot; probability: 34.52%
	&quot;0.00192395493077&quot; probability: 32.58%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00198265958772</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00198265958772</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00658231279147</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00658231279147</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 32.58%
	&quot;0.943235340366&quot; probability: 34.52%
	&quot;0.997796183469&quot; probability: 32.90%</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941766379466, 0.943235340366, 0.997796183469 }
	&quot;0.941766379466&quot; probability: 32.58%
	&quot;0.943235340366&quot; probability: 34.52%
	&quot;0.997796183469&quot; probability: 32.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 15.16%	count:111.0 total:732.0
	&quot;y&quot; probability: 84.84%	count:621.0 total:732.0</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 15.16%	count:111.0 total:732.0
	&quot;y&quot; probability: 84.84%	count:621.0 total:732.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>618</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GO TO GOAL&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>618</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>11</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>return.data == &quot;GOAL REACHED&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>return.data == &quot;GOAL REACHED&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>return.data == &quot;GOAL REACHED&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>return.data == &quot;GOAL REACHED&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.seq) one of { 156295, 165185, 204093, 207571, 211124, 211192 }
	&quot;156295&quot; probability: 0.13%
	&quot;165185&quot; probability: 0.13%
	&quot;204093&quot; probability: 0.13%
	&quot;207571&quot; probability: 0.13%
	&quot;211124&quot; probability: 0.13%
	&quot;211192&quot; probability: 0.38%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 156295, 165185, 204093, 207571, 211124, 211192 }
	&quot;156295&quot; probability: 0.13%
	&quot;165185&quot; probability: 0.13%
	&quot;204093&quot; probability: 0.13%
	&quot;207571&quot; probability: 0.13%
	&quot;211124&quot; probability: 0.13%
	&quot;211192&quot; probability: 0.38%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) one of { -0.0132473552995, -0.00290408234718, 0.0237459229534, 0.067603180502 }
	&quot;-0.0132473552995&quot; probability: 62.50%
	&quot;-0.00290408234718&quot; probability: 12.50%
	&quot;0.0237459229534&quot; probability: 12.50%
	&quot;0.067603180502&quot; probability: 12.50%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) one of { -0.0132473552995, -0.00290408234718, 0.0237459229534, 0.067603180502 }
	&quot;-0.0132473552995&quot; probability: 62.50%
	&quot;-0.00290408234718&quot; probability: 12.50%
	&quot;0.0237459229534&quot; probability: 12.50%
	&quot;0.067603180502&quot; probability: 12.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.067603180502</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.067603180502</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.0140284617072</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.0140284617072</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) one of { -0.0353277715053, -0.0243680946566, -0.0188765235536, -0.00343923862408, 0.0330611243312 }
	&quot;-0.0353277715053&quot; probability: 12.50%
	&quot;-0.0243680946566&quot; probability: 37.50%
	&quot;-0.0188765235536&quot; probability: 12.50%
	&quot;-0.00343923862408&quot; probability: 12.50%
	&quot;0.0330611243312&quot; probability: 25.00%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) one of { -0.0353277715053, -0.0243680946566, -0.0188765235536, -0.00343923862408, 0.0330611243312 }
	&quot;-0.0353277715053&quot; probability: 12.50%
	&quot;-0.0243680946566&quot; probability: 37.50%
	&quot;-0.0188765235536&quot; probability: 12.50%
	&quot;-0.00343923862408&quot; probability: 12.50%
	&quot;0.0330611243312&quot; probability: 25.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.0330611243312</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.0330611243312</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0353277715053</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0353277715053</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024305, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024305&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024305, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024305&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) one of { 0.380798058475, 0.389181540246, 0.425559094146, 0.575383876813, 0.622931491553, 0.804913559582 }
	&quot;0.380798058475&quot; probability: 12.50%
	&quot;0.389181540246&quot; probability: 37.50%
	&quot;0.425559094146&quot; probability: 12.50%
	&quot;0.575383876813&quot; probability: 12.50%
	&quot;0.622931491553&quot; probability: 12.50%
	&quot;0.804913559582&quot; probability: 12.50%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) one of { 0.380798058475, 0.389181540246, 0.425559094146, 0.575383876813, 0.622931491553, 0.804913559582 }
	&quot;0.380798058475&quot; probability: 12.50%
	&quot;0.389181540246&quot; probability: 37.50%
	&quot;0.425559094146&quot; probability: 12.50%
	&quot;0.575383876813&quot; probability: 12.50%
	&quot;0.622931491553&quot; probability: 12.50%
	&quot;0.804913559582&quot; probability: 12.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 0.804913559582</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 0.804913559582</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.380798058475</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.380798058475</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 92708420, 203961095, 524329048, 545996597, 714261792, 884106143 }
	&quot;92708420&quot; probability: 0.13%
	&quot;203961095&quot; probability: 0.13%
	&quot;524329048&quot; probability: 0.13%
	&quot;545996597&quot; probability: 0.13%
	&quot;714261792&quot; probability: 0.13%
	&quot;884106143&quot; probability: 0.38%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 92708420, 203961095, 524329048, 545996597, 714261792, 884106143 }
	&quot;92708420&quot; probability: 0.13%
	&quot;203961095&quot; probability: 0.13%
	&quot;524329048&quot; probability: 0.13%
	&quot;545996597&quot; probability: 0.13%
	&quot;714261792&quot; probability: 0.13%
	&quot;884106143&quot; probability: 0.38%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) one of { -0.882680068503, 0.140197328255, 0.908539114581, 0.91535581336, 0.919880325121 }
	&quot;-0.882680068503&quot; probability: 12.50%
	&quot;0.140197328255&quot; probability: 12.50%
	&quot;0.908539114581&quot; probability: 25.00%
	&quot;0.91535581336&quot; probability: 37.50%
	&quot;0.919880325121&quot; probability: 12.50%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) one of { -0.882680068503, 0.140197328255, 0.908539114581, 0.91535581336, 0.919880325121 }
	&quot;-0.882680068503&quot; probability: 12.50%
	&quot;0.140197328255&quot; probability: 12.50%
	&quot;0.908539114581&quot; probability: 25.00%
	&quot;0.91535581336&quot; probability: 37.50%
	&quot;0.919880325121&quot; probability: 12.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.919880325121</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.919880325121</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &gt;= -0.882680068503</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &gt;= -0.882680068503</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) one of { -0.915479365856, -0.901563118441, 0.872749951002, 0.922052923609, 0.980319102656, 1.08996705658 }
	&quot;-0.915479365856&quot; probability: 37.50%
	&quot;-0.901563118441&quot; probability: 12.50%
	&quot;0.872749951002&quot; probability: 12.50%
	&quot;0.922052923609&quot; probability: 12.50%
	&quot;0.980319102656&quot; probability: 12.50%
	&quot;1.08996705658&quot; probability: 12.50%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.y) one of { -0.915479365856, -0.901563118441, 0.872749951002, 0.922052923609, 0.980319102656, 1.08996705658 }
	&quot;-0.915479365856&quot; probability: 37.50%
	&quot;-0.901563118441&quot; probability: 12.50%
	&quot;0.872749951002&quot; probability: 12.50%
	&quot;0.922052923609&quot; probability: 12.50%
	&quot;0.980319102656&quot; probability: 12.50%
	&quot;1.08996705658&quot; probability: 12.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.08996705658</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.08996705658</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &gt;= -0.915479365856</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &gt;= -0.915479365856</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) one of { 0.0268379115808, 0.0301414103298, 0.0312487185491, 0.0613310087701, 0.0750909639557 }
	&quot;0.0268379115808&quot; probability: 25.00%
	&quot;0.0301414103298&quot; probability: 37.50%
	&quot;0.0312487185491&quot; probability: 12.50%
	&quot;0.0613310087701&quot; probability: 12.50%
	&quot;0.0750909639557&quot; probability: 12.50%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) one of { 0.0268379115808, 0.0301414103298, 0.0312487185491, 0.0613310087701, 0.0750909639557 }
	&quot;0.0268379115808&quot; probability: 25.00%
	&quot;0.0301414103298&quot; probability: 37.50%
	&quot;0.0312487185491&quot; probability: 12.50%
	&quot;0.0613310087701&quot; probability: 12.50%
	&quot;0.0750909639557&quot; probability: 12.50%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.0750909639557</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.0750909639557</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.0268379115808</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.0268379115808</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { 0.994876539454, 0.997294287645, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 12.50%
	&quot;0.997294287645&quot; probability: 12.50%
	&quot;0.99908871221&quot; probability: 75.00%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { 0.994876539454, 0.997294287645, 0.99908871221 }
	&quot;0.994876539454&quot; probability: 12.50%
	&quot;0.997294287645&quot; probability: 12.50%
	&quot;0.99908871221&quot; probability: 75.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.9992449669</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.9992449669</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= 0.994876539454</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= 0.994876539454</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.header.seq) one of { 76264, 76274, 76280, 76284, 172208, 235776, 239319, 242852, 242861, 242867 }
	&quot;76264&quot; probability: 0.09%
	&quot;76274&quot; probability: 0.09%
	&quot;76280&quot; probability: 0.09%
	&quot;76284&quot; probability: 0.09%
	&quot;172208&quot; probability: 0.09%
	&quot;235776&quot; probability: 0.09%
	&quot;239319&quot; probability: 0.09%
	&quot;242852&quot; probability: 0.18%
	&quot;242861&quot; probability: 0.09%
	&quot;242867&quot; probability: 0.09%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.header.seq) one of { 76264, 76274, 76280, 76284, 172208, 235776, 239319, 242852, 242861, 242867 }
	&quot;76264&quot; probability: 0.09%
	&quot;76274&quot; probability: 0.09%
	&quot;76280&quot; probability: 0.09%
	&quot;76284&quot; probability: 0.09%
	&quot;172208&quot; probability: 0.09%
	&quot;235776&quot; probability: 0.09%
	&quot;239319&quot; probability: 0.09%
	&quot;242852&quot; probability: 0.18%
	&quot;242861&quot; probability: 0.09%
	&quot;242867&quot; probability: 0.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00396072734628, 0.00582774078648 }
	&quot;-0.00396072734628&quot; probability: 63.64%
	&quot;0.00582774078648&quot; probability: 36.36%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00396072734628, 0.00582774078648 }
	&quot;-0.00396072734628&quot; probability: 63.64%
	&quot;0.00582774078648&quot; probability: 36.36%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.00591125647508</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.00591125647508</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00397458716695</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00397458716695</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.066020969656, 0.332029316255, 0.336219678439 }
	&quot;0.066020969656&quot; probability: 36.36%
	&quot;0.332029316255&quot; probability: 54.55%
	&quot;0.336219678439&quot; probability: 9.09%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.066020969656, 0.332029316255, 0.336219678439 }
	&quot;0.066020969656&quot; probability: 36.36%
	&quot;0.332029316255&quot; probability: 54.55%
	&quot;0.336219678439&quot; probability: 9.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.336219678439</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.336219678439</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0660102346535</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0660102346535</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024306, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024306&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777296, 1550023632, 1550024270, 1550024306, 1550024343 }
	&quot;1548777296&quot; probability: 0.08%
	&quot;1550023632&quot; probability: 0.08%
	&quot;1550024270&quot; probability: 0.08%
	&quot;1550024306&quot; probability: 0.08%
	&quot;1550024343&quot; probability: 0.69%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276771863435, 1.05237975111 }
	&quot;0.276771863435&quot; probability: 36.36%
	&quot;1.05237975111&quot; probability: 63.64%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276771863435, 1.05237975111 }
	&quot;0.276771863435&quot; probability: 36.36%
	&quot;1.05237975111&quot; probability: 63.64%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05242407926</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05242407926</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.27654305648</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.27654305648</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) one of { 32925474, 133472877, 192653029, 232866956, 595997639, 614120830, 844114930, 934186021, 984364872, 994024865 }
	&quot;32925474&quot; probability: 0.09%
	&quot;133472877&quot; probability: 0.09%
	&quot;192653029&quot; probability: 0.09%
	&quot;232866956&quot; probability: 0.09%
	&quot;595997639&quot; probability: 0.09%
	&quot;614120830&quot; probability: 0.09%
	&quot;844114930&quot; probability: 0.18%
	&quot;934186021&quot; probability: 0.09%
	&quot;984364872&quot; probability: 0.09%
	&quot;994024865&quot; probability: 0.09%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) one of { 32925474, 133472877, 192653029, 232866956, 595997639, 614120830, 844114930, 934186021, 984364872, 994024865 }
	&quot;32925474&quot; probability: 0.09%
	&quot;133472877&quot; probability: 0.09%
	&quot;192653029&quot; probability: 0.09%
	&quot;232866956&quot; probability: 0.09%
	&quot;595997639&quot; probability: 0.09%
	&quot;614120830&quot; probability: 0.09%
	&quot;844114930&quot; probability: 0.18%
	&quot;934186021&quot; probability: 0.09%
	&quot;984364872&quot; probability: 0.09%
	&quot;994024865&quot; probability: 0.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130727614224, -0.129715820278, -0.0768856235449 }
	&quot;-0.130727614224&quot; probability: 54.55%
	&quot;-0.129715820278&quot; probability: 9.09%
	&quot;-0.0768856235449&quot; probability: 36.36%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130727614224, -0.129715820278, -0.0768856235449 }
	&quot;-0.130727614224&quot; probability: 54.55%
	&quot;-0.129715820278&quot; probability: 9.09%
	&quot;-0.0768856235449&quot; probability: 36.36%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.130727614224</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.130727614224</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0162983063489, 0.0497684002387, 0.0511460398574 }
	&quot;-0.0162983063489&quot; probability: 36.36%
	&quot;0.0497684002387&quot; probability: 9.09%
	&quot;0.0511460398574&quot; probability: 54.55%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0162983063489, 0.0497684002387, 0.0511460398574 }
	&quot;-0.0162983063489&quot; probability: 36.36%
	&quot;0.0497684002387&quot; probability: 9.09%
	&quot;0.0511460398574&quot; probability: 54.55%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0513625447219</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0513625447219</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0163244923973</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0163244923973</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00515472755654, 2.92901443476E-4, 0.00192206549544 }
	&quot;-0.00515472755654&quot; probability: 36.36%
	&quot;2.92901443476E-4&quot; probability: 54.55%
	&quot;0.00192206549544&quot; probability: 9.09%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00515472755654, 2.92901443476E-4, 0.00192206549544 }
	&quot;-0.00515472755654&quot; probability: 36.36%
	&quot;2.92901443476E-4&quot; probability: 54.55%
	&quot;0.00192206549544&quot; probability: 9.09%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00192206549544</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00192206549544</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00515472755654</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00515472755654</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 }</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 }
	&quot;0.941773298694&quot; probability: 9.09%
	&quot;0.943260647972&quot; probability: 54.55%
	&quot;0.997787902205&quot; probability: 36.36%</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941773298694, 0.943260647972, 0.997787902205 }
	&quot;0.941773298694&quot; probability: 9.09%
	&quot;0.943260647972&quot; probability: 54.55%
	&quot;0.997787902205&quot; probability: 36.36%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 14.29%	count:1.0 total:7.0
	&quot;y&quot; probability: 85.71%	count:6.0 total:7.0</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 14.29%	count:1.0 total:7.0
	&quot;y&quot; probability: 85.71%	count:6.0 total:7.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>11</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;GOAL REACHED&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>11</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5235</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }</INV> <SAMPLES>5235</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 12.06%	count:607.0 total:5034.0
	&quot;GO TO GOAL&quot; probability: 87.94%	count:4427.0 total:5034.0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;GO TO GOAL&quot; }
	&quot;AVOIDING&quot; probability: 12.06%	count:607.0 total:5034.0
	&quot;GO TO GOAL&quot; probability: 87.94%	count:4427.0 total:5034.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.0925445664216</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.127117512456</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.988539091428</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0402241026347</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 1.12411675036</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 1.12411675036</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.0335555937246</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.917557388805</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.917557388805</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.26839615239</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.26839615239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.110095295384</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.110095295384</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.0109747507955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.58%
	&quot;0.996675979108&quot; probability: 7.35%
	&quot;0.998004160168&quot; probability: 70.88%
	&quot;0.999056851193&quot; probability: 16.55%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.765650080046, 0.976635936488, 0.990104091257, 0.993195158835, 0.994762941873, 0.996675979108, 0.998004160168, 0.999056851193 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.765650080046&quot; probability: 0.02%
	&quot;0.976635936488&quot; probability: 0.12%
	&quot;0.990104091257&quot; probability: 0.16%
	&quot;0.993195158835&quot; probability: 0.33%
	&quot;0.994762941873&quot; probability: 4.58%
	&quot;0.996675979108&quot; probability: 7.35%
	&quot;0.998004160168&quot; probability: 70.88%
	&quot;0.999056851193&quot; probability: 16.55%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999598222494</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999598222494</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.96%
	&quot;0.00579792162242&quot; probability: 18.91%
	&quot;0.0068352641971&quot; probability: 0.13%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242, 0.0068352641971 }
	&quot;-0.00398300668693&quot; probability: 80.96%
	&quot;0.00579792162242&quot; probability: 18.91%
	&quot;0.0068352641971&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.0068352641971</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00448487477864</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.04%
	&quot;0.33209650183&quot; probability: 39.46%
	&quot;0.336192066889&quot; probability: 41.49%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.04%
	&quot;0.33209650183&quot; probability: 39.46%
	&quot;0.336192066889&quot; probability: 41.49%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.33625965486</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.33625965486</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0656954191624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.04%
	&quot;1.05235948185&quot; probability: 80.96%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.04%
	&quot;1.05235948185&quot; probability: 80.96%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05277301232</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05277301232</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276342236547</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.96%
	&quot;-0.0768714144176&quot; probability: 19.04%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.96%
	&quot;-0.0768714144176&quot; probability: 19.04%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.131121640413</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.131121640413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.04%
	&quot;0.0496432718844&quot; probability: 41.49%
	&quot;0.0511190919793&quot; probability: 39.46%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.04%
	&quot;0.0496432718844&quot; probability: 41.49%
	&quot;0.0511190919793&quot; probability: 39.46%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0516363599869</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0516363599869</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0164068895762</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.72%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.46%
	&quot;0.00187291365961&quot; probability: 41.49%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00655711337778, -0.00509819561463, -0.00354324353796, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00655711337778&quot; probability: 0.17%
	&quot;-0.00509819561463&quot; probability: 18.72%
	&quot;-0.00354324353796&quot; probability: 0.15%
	&quot;5.12162687346E-4&quot; probability: 39.46%
	&quot;0.00187291365961&quot; probability: 41.49%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00198698787493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00662679015382</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.49%
	&quot;0.943236931927&quot; probability: 39.46%
	&quot;0.997787593551&quot; probability: 19.04%</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 41.49%
	&quot;0.943236931927&quot; probability: 39.46%
	&quot;0.997787593551&quot; probability: 19.04%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.29%	count:5591.0 total:9932.0
	&quot;nonsensical&quot; probability: 7.12%	count:707.0 total:9932.0
	&quot;y&quot; probability: 36.59%	count:3634.0 total:9932.0</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 56.29%	count:5591.0 total:9932.0
	&quot;nonsensical&quot; probability: 7.12%	count:707.0 total:9932.0
	&quot;y&quot; probability: 36.59%	count:3634.0 total:9932.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>return.data &lt; orig(param2.data)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>return.data &lt; orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;GOAL REACHED&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5235</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>state(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..user_input(std_msgs/Bool):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>53</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.data == true</INV> <SAMPLES>53</SAMPLES> <DAIKON>param0.data == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.data == true</INV> <SAMPLES>53</SAMPLES> <DAIKON>param0.data == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.data != 0</INV> <SAMPLES>53</SAMPLES> <DAIKON>param0.data != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..user_input(std_msgs/Bool):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>53</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data one of { &quot;no&quot;, &quot;y&quot; }</INV> <SAMPLES>53</SAMPLES> <DAIKON>return.data one of { &quot;no&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..user_input(std_msgs/Bool):::EXIT;condition=&quot;return.data  ==   &quot;no&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.data == &quot;no&quot;</INV> <SAMPLES>38</SAMPLES> <DAIKON>return.data == &quot;no&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.data == &quot;no&quot;</INV> <SAMPLES>38</SAMPLES> <DAIKON>return.data == &quot;no&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..user_input(std_msgs/Bool):::EXIT;condition=&quot;not(return.data  ==   &quot;no&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.data == &quot;y&quot;</INV> <SAMPLES>15</SAMPLES> <DAIKON>return.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.data == &quot;y&quot;</INV> <SAMPLES>15</SAMPLES> <DAIKON>return.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..user_input(std_msgs/Bool):::EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>15</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.data == &quot;y&quot;</INV> <SAMPLES>15</SAMPLES> <DAIKON>return.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.data == &quot;y&quot;</INV> <SAMPLES>15</SAMPLES> <DAIKON>return.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>15</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PARENT> <INV>orig(param0.data) == true</INV> <SAMPLES>15</SAMPLES> <DAIKON>orig(param0.data) == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PARENT> <INV>orig(param0.data) == true</INV> <SAMPLES>15</SAMPLES> <DAIKON>orig(param0.data) == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.data  ==  &quot;y&quot;&quot;</PARENT> <INV>orig(param0.data) != 0</INV> <SAMPLES>15</SAMPLES> <DAIKON>orig(param0.data) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..user_input(std_msgs/Bool):::EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>38</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data == &quot;no&quot;</INV> <SAMPLES>38</SAMPLES> <DAIKON>return.data == &quot;no&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.data == &quot;no&quot;</INV> <SAMPLES>38</SAMPLES> <DAIKON>return.data == &quot;no&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>38</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.data) == true</INV> <SAMPLES>38</SAMPLES> <DAIKON>orig(param0.data) == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.data) == true</INV> <SAMPLES>38</SAMPLES> <DAIKON>orig(param0.data) == true</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>orig(param0.data) != 0</INV> <SAMPLES>38</SAMPLES> <DAIKON>orig(param0.data) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>user_input(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99897785038)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99897785038)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0681580253423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0681580253423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0385605990791)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0385605990791)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0304312055358)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0304312055358)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0139154449107)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0139154449107)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.963827982442)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.963827982442)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00199593726413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00199593726413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00513753542575)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00513753542575)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00595482019994)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00595482019994)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00407325030909)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00407325030909)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336262247471)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336262247471)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659890268292)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659890268292)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130828206539)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130828206539)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513694691606)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513694691606)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163321065972)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163321065972)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05241193615)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05241193615)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276404042358)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276404042358)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.seq one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.seq one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs != param1.header.stamp.nsecs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs != param1.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999247471565)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999247471565)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995349986004)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995349986004)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0752501830867)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0752501830867)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.021351562739)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.021351562739)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.06012958511)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.06012958511)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0193489475652)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0193489475652)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.0480247095369)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.0480247095369)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0404800709009)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0404800709009)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.899386908127)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.899386908127)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.23434685526)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.23434685526)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.922656613543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.922656613543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.038277608594)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.038277608594)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00195868802955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00195868802955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00667282022084)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00667282022084)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00669723346787)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00669723346787)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00446151329888)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00446151329888)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336247695033)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336247695033)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659328035045)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659328035045)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130946964056)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130946964056)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051380817624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051380817624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163550433646)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163550433646)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05248299982)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05248299982)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276380029344)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276380029344)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt;= 0.06012958511</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &lt;= 0.963827982442</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x &lt;= 0.899386908127</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y &lt;= 1.23434685526</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0752501830867</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt;= 0.021351562739</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.72%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 88.94%
	&quot;0.999247471565&quot; probability: 0.82%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.72%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 88.94%
	&quot;0.999247471565&quot; probability: 0.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999247471565</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.85%
	&quot;0.00579792162242&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.85%
	&quot;0.00579792162242&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00669723346787</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00446151329888</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.15%
	&quot;0.33209650183&quot; probability: 38.28%
	&quot;0.336192066889&quot; probability: 42.57%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.15%
	&quot;0.33209650183&quot; probability: 38.28%
	&quot;0.336192066889&quot; probability: 42.57%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336262247471</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659328035045</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.15%
	&quot;1.05235948185&quot; probability: 80.85%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.15%
	&quot;1.05235948185&quot; probability: 80.85%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &lt;= 1.05248299982</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &gt;= 0.276380029344</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.85%
	&quot;-0.0768714144176&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.85%
	&quot;-0.0768714144176&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946964056</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.15%
	&quot;0.0496432718844&quot; probability: 42.57%
	&quot;0.0511190919793&quot; probability: 38.28%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.15%
	&quot;0.0496432718844&quot; probability: 42.57%
	&quot;0.0511190919793&quot; probability: 38.28%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y &lt;= 0.051380817624</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163550433646</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.60%
	&quot;5.12162687346E-4&quot; probability: 38.28%
	&quot;0.00187291365961&quot; probability: 42.57%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.60%
	&quot;5.12162687346E-4&quot; probability: 38.28%
	&quot;0.00187291365961&quot; probability: 42.57%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00199593726413</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00667282022084</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.57%
	&quot;0.943236931927&quot; probability: 38.28%
	&quot;0.997787593551&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.57%
	&quot;0.943236931927&quot; probability: 38.28%
	&quot;0.997787593551&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param2 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.23%	count:3665.0 total:4512.0
	&quot;nonsensical&quot; probability: 18.77%	count:847.0 total:4512.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.23%	count:3665.0 total:4512.0
	&quot;nonsensical&quot; probability: 18.77%	count:847.0 total:4512.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PPTNAME>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.06012958511</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.963827982442</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.899386908127</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.23434685526</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0752501830867</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.021351562739</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.72%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 88.94%
	&quot;0.999247471565&quot; probability: 0.82%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.72%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 88.94%
	&quot;0.999247471565&quot; probability: 0.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999247471565</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.85%
	&quot;0.00579792162242&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.85%
	&quot;0.00579792162242&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00669723346787</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00446151329888</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.15%
	&quot;0.33209650183&quot; probability: 38.28%
	&quot;0.336192066889&quot; probability: 42.57%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.15%
	&quot;0.33209650183&quot; probability: 38.28%
	&quot;0.336192066889&quot; probability: 42.57%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336262247471</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659328035045</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.15%
	&quot;1.05235948185&quot; probability: 80.85%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.15%
	&quot;1.05235948185&quot; probability: 80.85%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05248299982</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276380029344</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.85%
	&quot;-0.0768714144176&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.85%
	&quot;-0.0768714144176&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946964056</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.15%
	&quot;0.0496432718844&quot; probability: 42.57%
	&quot;0.0511190919793&quot; probability: 38.28%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.15%
	&quot;0.0496432718844&quot; probability: 42.57%
	&quot;0.0511190919793&quot; probability: 38.28%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.051380817624</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163550433646</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.60%
	&quot;5.12162687346E-4&quot; probability: 38.28%
	&quot;0.00187291365961&quot; probability: 42.57%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.60%
	&quot;5.12162687346E-4&quot; probability: 38.28%
	&quot;0.00187291365961&quot; probability: 42.57%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00199593726413</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00667282022084</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.57%
	&quot;0.943236931927&quot; probability: 38.28%
	&quot;0.997787593551&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.57%
	&quot;0.943236931927&quot; probability: 38.28%
	&quot;0.997787593551&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.23%	count:3665.0 total:4512.0
	&quot;nonsensical&quot; probability: 18.77%	count:847.0 total:4512.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.23%	count:3665.0 total:4512.0
	&quot;nonsensical&quot; probability: 18.77%	count:847.0 total:4512.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.06012958511</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.963827982442</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.899386908127</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.23434685526</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0752501830867</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.021351562739</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.72%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 88.94%
	&quot;0.999247471565&quot; probability: 0.82%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.72%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 88.94%
	&quot;0.999247471565&quot; probability: 0.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999247471565</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.85%
	&quot;0.00579792162242&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.85%
	&quot;0.00579792162242&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00669723346787</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00446151329888</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.15%
	&quot;0.33209650183&quot; probability: 38.28%
	&quot;0.336192066889&quot; probability: 42.57%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.15%
	&quot;0.33209650183&quot; probability: 38.28%
	&quot;0.336192066889&quot; probability: 42.57%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336262247471</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659328035045</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.15%
	&quot;1.05235948185&quot; probability: 80.85%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.15%
	&quot;1.05235948185&quot; probability: 80.85%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05248299982</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276380029344</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.85%
	&quot;-0.0768714144176&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.85%
	&quot;-0.0768714144176&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946964056</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.15%
	&quot;0.0496432718844&quot; probability: 42.57%
	&quot;0.0511190919793&quot; probability: 38.28%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.15%
	&quot;0.0496432718844&quot; probability: 42.57%
	&quot;0.0511190919793&quot; probability: 38.28%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.051380817624</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163550433646</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.60%
	&quot;5.12162687346E-4&quot; probability: 38.28%
	&quot;0.00187291365961&quot; probability: 42.57%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.60%
	&quot;5.12162687346E-4&quot; probability: 38.28%
	&quot;0.00187291365961&quot; probability: 42.57%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00199593726413</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00667282022084</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.57%
	&quot;0.943236931927&quot; probability: 38.28%
	&quot;0.997787593551&quot; probability: 19.15%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.57%
	&quot;0.943236931927&quot; probability: 38.28%
	&quot;0.997787593551&quot; probability: 19.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.23%	count:3665.0 total:4512.0
	&quot;nonsensical&quot; probability: 18.77%	count:847.0 total:4512.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.23%	count:3665.0 total:4512.0
	&quot;nonsensical&quot; probability: 18.77%	count:847.0 total:4512.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>5435</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.seq one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.26%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.05%
	&quot;158353&quot; probability: 0.18%
	&quot;161045&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.05%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.15%
	&quot;205675&quot; probability: 0.13%
	&quot;207953&quot; probability: 0.11%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.seq one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.26%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.05%
	&quot;158353&quot; probability: 0.18%
	&quot;161045&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.05%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.15%
	&quot;205675&quot; probability: 0.13%
	&quot;207953&quot; probability: 0.11%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.06012958511</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0193489475652</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0193489475652</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.0480247095369</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.0480247095369</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.05%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.26%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023653&quot; probability: 0.18%
	&quot;1550024239&quot; probability: 0.15%
	&quot;1550024286&quot; probability: 0.13%
	&quot;1550024309&quot; probability: 0.11%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.05%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.26%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023653&quot; probability: 0.18%
	&quot;1550024239&quot; probability: 0.15%
	&quot;1550024286&quot; probability: 0.13%
	&quot;1550024309&quot; probability: 0.11%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.922656613543</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.922656613543</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.038277608594</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.038277608594</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 132642966, 146057361, 326268647, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.26%
	&quot;382804205&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.05%
	&quot;474144125&quot; probability: 0.13%
	&quot;486198332&quot; probability: 0.18%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.11%
	&quot;574409426&quot; probability: 0.15%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 132642966, 146057361, 326268647, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.26%
	&quot;382804205&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.05%
	&quot;474144125&quot; probability: 0.13%
	&quot;486198332&quot; probability: 0.18%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.11%
	&quot;574409426&quot; probability: 0.15%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.899386908127</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.23434685526</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0752501830867</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.021351562739</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w one of { 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 12.87%
	&quot;0.998047271354&quot; probability: 85.93%
	&quot;0.999247471565&quot; probability: 1.21%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 12.87%
	&quot;0.998047271354&quot; probability: 85.93%
	&quot;0.999247471565&quot; probability: 1.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999247471565</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= 0.995349986004</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.995349986004</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00394848034915, 0.00597083555115 }
	&quot;-0.00394848034915&quot; probability: 87.00%
	&quot;0.00597083555115&quot; probability: 13.00%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00394848034915, 0.00597083555115 }
	&quot;-0.00394848034915&quot; probability: 87.00%
	&quot;0.00597083555115&quot; probability: 13.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00600762304953</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00600762304953</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00441620324333</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00441620324333</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660228506143, 0.332195335889, 0.336235249952 }
	&quot;0.0660228506143&quot; probability: 13.00%
	&quot;0.332195335889&quot; probability: 38.01%
	&quot;0.336235249952&quot; probability: 48.99%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660228506143, 0.332195335889, 0.336235249952 }
	&quot;0.0660228506143&quot; probability: 13.00%
	&quot;0.332195335889&quot; probability: 38.01%
	&quot;0.336235249952&quot; probability: 48.99%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336247695033</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336247695033</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.065984409234</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.065984409234</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276563142702, 1.05238982973 }
	&quot;0.276563142702&quot; probability: 13.00%
	&quot;1.05238982973&quot; probability: 87.00%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276563142702, 1.05238982973 }
	&quot;0.276563142702&quot; probability: 13.00%
	&quot;1.05238982973&quot; probability: 87.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05248299982</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276415789809</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276415789809</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130727245466, -0.0775015354881 }
	&quot;-0.130727245466&quot; probability: 87.00%
	&quot;-0.0775015354881&quot; probability: 13.00%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130727245466, -0.0775015354881 }
	&quot;-0.130727245466&quot; probability: 87.00%
	&quot;-0.0775015354881&quot; probability: 13.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946797723</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946797723</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0162885476683, 0.0497534191739, 0.0511575119757 }
	&quot;-0.0162885476683&quot; probability: 13.00%
	&quot;0.0497534191739&quot; probability: 48.99%
	&quot;0.0511575119757&quot; probability: 38.01%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0162885476683, 0.0497534191739, 0.0511575119757 }
	&quot;-0.0162885476683&quot; probability: 13.00%
	&quot;0.0497534191739&quot; probability: 48.99%
	&quot;0.0511575119757&quot; probability: 38.01%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.051380817624</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163550433646</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00513088375001, 3.64407613131E-4, 0.00188248328853 }
	&quot;-0.00513088375001&quot; probability: 13.00%
	&quot;3.64407613131E-4&quot; probability: 38.01%
	&quot;0.00188248328853&quot; probability: 48.99%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00513088375001, 3.64407613131E-4, 0.00188248328853 }
	&quot;-0.00513088375001&quot; probability: 13.00%
	&quot;3.64407613131E-4&quot; probability: 38.01%
	&quot;0.00188248328853&quot; probability: 48.99%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00195868802955</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00195868802955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00513088375001</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00513088375001</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941767870788, 0.943202250242, 0.997787054612 }</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941767870788, 0.943202250242, 0.997787054612 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941767870788, 0.943202250242, 0.997787054612 }
	&quot;0.941767870788&quot; probability: 48.99%
	&quot;0.943202250242&quot; probability: 38.01%
	&quot;0.997787054612&quot; probability: 13.00%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941767870788, 0.943202250242, 0.997787054612 }
	&quot;0.941767870788&quot; probability: 48.99%
	&quot;0.943202250242&quot; probability: 38.01%
	&quot;0.997787054612&quot; probability: 13.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param2.data == &quot;y&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param2.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param2.data == &quot;y&quot;</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param2.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != param1.header.stamp.nsecs</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.header.stamp.nsecs != param1.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>3665</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156879, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150055&quot; probability: 0.10%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.01%
	&quot;150984&quot; probability: 0.13%
	&quot;156879&quot; probability: 0.08%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.15%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.05%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.01%
	&quot;163174&quot; probability: 0.03%
	&quot;201119&quot; probability: 0.24%
	&quot;207953&quot; probability: 0.19%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156879, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150055&quot; probability: 0.10%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.01%
	&quot;150984&quot; probability: 0.13%
	&quot;156879&quot; probability: 0.08%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.15%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.05%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.01%
	&quot;163174&quot; probability: 0.03%
	&quot;201119&quot; probability: 0.24%
	&quot;207953&quot; probability: 0.19%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0304312055358</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0304312055358</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1550023569, 1550023578, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.15%
	&quot;1548777269&quot; probability: 0.05%
	&quot;1548777273&quot; probability: 0.02%
	&quot;1548777274&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.10%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.13%
	&quot;1550023638&quot; probability: 0.08%
	&quot;1550024239&quot; probability: 0.24%
	&quot;1550024309&quot; probability: 0.19%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1550023569, 1550023578, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.15%
	&quot;1548777269&quot; probability: 0.05%
	&quot;1548777273&quot; probability: 0.02%
	&quot;1548777274&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.10%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.13%
	&quot;1550023638&quot; probability: 0.08%
	&quot;1550024239&quot; probability: 0.24%
	&quot;1550024309&quot; probability: 0.19%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.963827982442</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 262952903, 276088278, 292943925, 326268647, 343145296, 386032425, 466087285, 542851752, 544093352, 574409426, 576134403, 636097238, 703113486, 742824203, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.13%
	&quot;343145296&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.08%
	&quot;466087285&quot; probability: 0.00%
	&quot;542851752&quot; probability: 0.03%
	&quot;544093352&quot; probability: 0.19%
	&quot;574409426&quot; probability: 0.24%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.01%
	&quot;703113486&quot; probability: 0.15%
	&quot;742824203&quot; probability: 0.01%
	&quot;856007530&quot; probability: 0.10%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 262952903, 276088278, 292943925, 326268647, 343145296, 386032425, 466087285, 542851752, 544093352, 574409426, 576134403, 636097238, 703113486, 742824203, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.13%
	&quot;343145296&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.08%
	&quot;466087285&quot; probability: 0.00%
	&quot;542851752&quot; probability: 0.03%
	&quot;544093352&quot; probability: 0.19%
	&quot;574409426&quot; probability: 0.24%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.01%
	&quot;703113486&quot; probability: 0.15%
	&quot;742824203&quot; probability: 0.01%
	&quot;856007530&quot; probability: 0.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.710633832892</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.710633832892</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 0.575820786534</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 0.575820786534</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0681580253423</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0681580253423</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0273742628493</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0273742628493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.997023109931, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.997023109931&quot; probability: 4.94%
	&quot;0.998047271354&quot; probability: 95.00%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.997023109931, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.997023109931&quot; probability: 4.94%
	&quot;0.998047271354&quot; probability: 95.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.99897785038</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.99897785038</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.23%
	&quot;0.00579792162242&quot; probability: 31.77%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.23%
	&quot;0.00579792162242&quot; probability: 31.77%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00669723346787</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00446151329888</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.77%
	&quot;0.33209650183&quot; probability: 38.90%
	&quot;0.336192066889&quot; probability: 29.33%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.77%
	&quot;0.33209650183&quot; probability: 38.90%
	&quot;0.336192066889&quot; probability: 29.33%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336262247471</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659328035045</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024239, 1550024246, 1550024247, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.01%
	&quot;1548777245&quot; probability: 0.02%
	&quot;1548777246&quot; probability: 0.01%
	&quot;1548777247&quot; probability: 0.01%
	&quot;1548777248&quot; probability: 0.01%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.02%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.04%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777262&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.04%
	&quot;1548777271&quot; probability: 0.01%
	&quot;1548777272&quot; probability: 0.04%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.01%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.01%
	&quot;1550023580&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.05%
	&quot;1550023587&quot; probability: 0.01%
	&quot;1550023588&quot; probability: 0.01%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.03%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550024239&quot; probability: 0.07%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.10%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.00%
	&quot;1550024319&quot; probability: 0.11%
	&quot;1550024328&quot; probability: 0.01%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024239, 1550024246, 1550024247, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.01%
	&quot;1548777245&quot; probability: 0.02%
	&quot;1548777246&quot; probability: 0.01%
	&quot;1548777247&quot; probability: 0.01%
	&quot;1548777248&quot; probability: 0.01%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.02%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.04%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777262&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.04%
	&quot;1548777271&quot; probability: 0.01%
	&quot;1548777272&quot; probability: 0.04%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.01%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.01%
	&quot;1550023580&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.05%
	&quot;1550023587&quot; probability: 0.01%
	&quot;1550023588&quot; probability: 0.01%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.03%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550024239&quot; probability: 0.07%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.10%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.00%
	&quot;1550024319&quot; probability: 0.11%
	&quot;1550024328&quot; probability: 0.01%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.77%
	&quot;1.05235948185&quot; probability: 68.23%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.77%
	&quot;1.05235948185&quot; probability: 68.23%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05243810671</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05243810671</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276380029344</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.23%
	&quot;-0.0768714144176&quot; probability: 31.77%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.23%
	&quot;-0.0768714144176&quot; probability: 31.77%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946964056</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.77%
	&quot;0.0496432718844&quot; probability: 29.33%
	&quot;0.0511190919793&quot; probability: 38.90%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.77%
	&quot;0.0496432718844&quot; probability: 29.33%
	&quot;0.0511190919793&quot; probability: 38.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0513694691606</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0513694691606</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163321065972</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163321065972</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 1.70%
	&quot;-0.00509819561463&quot; probability: 30.07%
	&quot;5.12162687346E-4&quot; probability: 38.90%
	&quot;0.00187291365961&quot; probability: 29.33%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 1.70%
	&quot;-0.00509819561463&quot; probability: 30.07%
	&quot;5.12162687346E-4&quot; probability: 38.90%
	&quot;0.00187291365961&quot; probability: 29.33%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00199593726413</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00667282022084</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 29.33%
	&quot;0.943236931927&quot; probability: 38.90%
	&quot;0.997787593551&quot; probability: 31.77%</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 29.33%
	&quot;0.943236931927&quot; probability: 38.90%
	&quot;0.997787593551&quot; probability: 31.77%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 27.27%	count:424.0 total:1555.0
	&quot;y&quot; probability: 72.73%	count:1131.0 total:1555.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 27.27%	count:424.0 total:1555.0
	&quot;y&quot; probability: 72.73%	count:1131.0 total:1555.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1770</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0304312055358</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0304312055358</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0139154449107</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0139154449107</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.963827982442</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.x one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.y one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 4.9E-324</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0681580253423</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0681580253423</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0385605990791</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0385605990791</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.99897785038</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.99897785038</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00595482019994</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00595482019994</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00407325030909</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00407325030909</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336262247471</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659890268292</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659890268292</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.header.stamp.secs one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05241193615</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05241193615</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276404042358</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276404042358</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130828206539</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130828206539</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0513694691606</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0513694691606</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163321065972</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163321065972</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00199593726413</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00513753542575</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00513753542575</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt; param1.transform.translation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt; param1.transform.translation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>639</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.seq one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.seq one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.06012958511</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0193489475652</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0193489475652</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.0480247095369</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.0480247095369</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.922656613543</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.922656613543</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.038277608594</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.038277608594</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.899386908127</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.23434685526</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0752501830867</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.021351562739</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999247471565</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= 0.995349986004</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.995349986004</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00669723346787</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00446151329888</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336247695033</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336247695033</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659328035045</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05248299982</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276380029344</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946964056</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.051380817624</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163550433646</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00195868802955</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00195868802955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00667282022084</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2.data == &quot;y&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param2.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param2.data == &quot;y&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param2.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != param1.header.stamp.nsecs</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.header.stamp.nsecs != param1.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4796</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.seq one of { 150984, 156879, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150984&quot; probability: 0.18%
	&quot;156879&quot; probability: 0.14%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.08%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.02%
	&quot;163174&quot; probability: 0.06%
	&quot;201119&quot; probability: 0.19%
	&quot;207953&quot; probability: 0.32%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.seq one of { 150984, 156879, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150984&quot; probability: 0.18%
	&quot;156879&quot; probability: 0.14%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.08%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.02%
	&quot;163174&quot; probability: 0.06%
	&quot;201119&quot; probability: 0.19%
	&quot;207953&quot; probability: 0.32%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y one of { -0.0193489475652, -0.012113410325, 0.00164817359182, 0.00276378970341, 0.00567178575213, 0.0084364608046, 0.0141637091604, 0.0153503184685, 0.0304312055358 }
	&quot;-0.0193489475652&quot; probability: 31.81%
	&quot;-0.012113410325&quot; probability: 18.45%
	&quot;0.00164817359182&quot; probability: 5.73%
	&quot;0.00276378970341&quot; probability: 0.11%
	&quot;0.00567178575213&quot; probability: 13.89%
	&quot;0.0084364608046&quot; probability: 1.80%
	&quot;0.0141637091604&quot; probability: 8.38%
	&quot;0.0153503184685&quot; probability: 0.95%
	&quot;0.0304312055358&quot; probability: 18.88%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y one of { -0.0193489475652, -0.012113410325, 0.00164817359182, 0.00276378970341, 0.00567178575213, 0.0084364608046, 0.0141637091604, 0.0153503184685, 0.0304312055358 }
	&quot;-0.0193489475652&quot; probability: 31.81%
	&quot;-0.012113410325&quot; probability: 18.45%
	&quot;0.00164817359182&quot; probability: 5.73%
	&quot;0.00276378970341&quot; probability: 0.11%
	&quot;0.00567178575213&quot; probability: 13.89%
	&quot;0.0084364608046&quot; probability: 1.80%
	&quot;0.0141637091604&quot; probability: 8.38%
	&quot;0.0153503184685&quot; probability: 0.95%
	&quot;0.0304312055358&quot; probability: 18.88%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.0304312055358</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.0304312055358</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0193489475652</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0193489475652</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z one of { -0.0404800709009, -0.0139154449107, 0.0178672092569, 0.0279127999839, 0.0362574685504, 0.0375099468218, 0.0395092897092, 0.0417281217694, 0.0480247095369 }
	&quot;-0.0404800709009&quot; probability: 31.81%
	&quot;-0.0139154449107&quot; probability: 18.88%
	&quot;0.0178672092569&quot; probability: 18.45%
	&quot;0.0279127999839&quot; probability: 13.79%
	&quot;0.0362574685504&quot; probability: 0.95%
	&quot;0.0375099468218&quot; probability: 1.80%
	&quot;0.0395092897092&quot; probability: 8.48%
	&quot;0.0417281217694&quot; probability: 5.73%
	&quot;0.0480247095369&quot; probability: 0.11%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z one of { -0.0404800709009, -0.0139154449107, 0.0178672092569, 0.0279127999839, 0.0362574685504, 0.0375099468218, 0.0395092897092, 0.0417281217694, 0.0480247095369 }
	&quot;-0.0404800709009&quot; probability: 31.81%
	&quot;-0.0139154449107&quot; probability: 18.88%
	&quot;0.0178672092569&quot; probability: 18.45%
	&quot;0.0279127999839&quot; probability: 13.79%
	&quot;0.0362574685504&quot; probability: 0.95%
	&quot;0.0375099468218&quot; probability: 1.80%
	&quot;0.0395092897092&quot; probability: 8.48%
	&quot;0.0417281217694&quot; probability: 5.73%
	&quot;0.0480247095369&quot; probability: 0.11%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.0480247095369</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.0480247095369</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777252, 1548777269, 1548777273, 1548777274, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.08%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.06%
	&quot;1550023579&quot; probability: 0.18%
	&quot;1550023638&quot; probability: 0.14%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024309&quot; probability: 0.32%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777252, 1548777269, 1548777273, 1548777274, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.08%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.06%
	&quot;1550023579&quot; probability: 0.18%
	&quot;1550023638&quot; probability: 0.14%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024309&quot; probability: 0.32%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z one of { 0.038277608594, 0.40644452608, 0.443944916721, 0.468211629637, 0.567787591576, 0.572652708231, 0.747051672725, 0.829106997929, 0.922656613543 }
	&quot;0.038277608594&quot; probability: 18.88%
	&quot;0.40644452608&quot; probability: 5.73%
	&quot;0.443944916721&quot; probability: 1.80%
	&quot;0.468211629637&quot; probability: 0.95%
	&quot;0.567787591576&quot; probability: 31.81%
	&quot;0.572652708231&quot; probability: 8.48%
	&quot;0.747051672725&quot; probability: 13.79%
	&quot;0.829106997929&quot; probability: 0.11%
	&quot;0.922656613543&quot; probability: 18.45%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z one of { 0.038277608594, 0.40644452608, 0.443944916721, 0.468211629637, 0.567787591576, 0.572652708231, 0.747051672725, 0.829106997929, 0.922656613543 }
	&quot;0.038277608594&quot; probability: 18.88%
	&quot;0.40644452608&quot; probability: 5.73%
	&quot;0.443944916721&quot; probability: 1.80%
	&quot;0.468211629637&quot; probability: 0.95%
	&quot;0.567787591576&quot; probability: 31.81%
	&quot;0.572652708231&quot; probability: 8.48%
	&quot;0.747051672725&quot; probability: 13.79%
	&quot;0.829106997929&quot; probability: 0.11%
	&quot;0.922656613543&quot; probability: 18.45%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.922656613543</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.922656613543</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.038277608594</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.038277608594</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 262952903, 292943925, 326268647, 343145296, 386032425, 542851752, 544093352, 574409426, 703113486, 742824203 }
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.18%
	&quot;343145296&quot; probability: 0.08%
	&quot;386032425&quot; probability: 0.14%
	&quot;542851752&quot; probability: 0.06%
	&quot;544093352&quot; probability: 0.32%
	&quot;574409426&quot; probability: 0.19%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.02%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 262952903, 292943925, 326268647, 343145296, 386032425, 542851752, 544093352, 574409426, 703113486, 742824203 }
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.18%
	&quot;343145296&quot; probability: 0.08%
	&quot;386032425&quot; probability: 0.14%
	&quot;542851752&quot; probability: 0.06%
	&quot;544093352&quot; probability: 0.32%
	&quot;574409426&quot; probability: 0.19%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.02%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x one of { -1.32452715405, -0.351829913918, -0.330484533363, -0.27644542861, 0.131180364976, 0.136249017358, 0.190448997017, 0.260147323069, 0.709633165307, 0.710633832892 }
	&quot;-1.32452715405&quot; probability: 18.88%
	&quot;-0.351829913918&quot; probability: 31.81%
	&quot;-0.330484533363&quot; probability: 0.11%
	&quot;-0.27644542861&quot; probability: 18.45%
	&quot;0.131180364976&quot; probability: 0.95%
	&quot;0.136249017358&quot; probability: 1.80%
	&quot;0.190448997017&quot; probability: 5.73%
	&quot;0.260147323069&quot; probability: 13.79%
	&quot;0.709633165307&quot; probability: 8.38%
	&quot;0.710633832892&quot; probability: 0.11%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.x one of { -1.32452715405, -0.351829913918, -0.330484533363, -0.27644542861, 0.131180364976, 0.136249017358, 0.190448997017, 0.260147323069, 0.709633165307, 0.710633832892 }
	&quot;-1.32452715405&quot; probability: 18.88%
	&quot;-0.351829913918&quot; probability: 31.81%
	&quot;-0.330484533363&quot; probability: 0.11%
	&quot;-0.27644542861&quot; probability: 18.45%
	&quot;0.131180364976&quot; probability: 0.95%
	&quot;0.136249017358&quot; probability: 1.80%
	&quot;0.190448997017&quot; probability: 5.73%
	&quot;0.260147323069&quot; probability: 13.79%
	&quot;0.709633165307&quot; probability: 8.38%
	&quot;0.710633832892&quot; probability: 0.11%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.710633832892</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.710633832892</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y one of { -1.25653514783, -1.17664263086, -1.17306110997, -0.993945504859, -0.790765475961, -0.491086000867, -0.464563026468, -0.22486068212, 0.347917042261, 0.575820786534 }
	&quot;-1.25653514783&quot; probability: 0.95%
	&quot;-1.17664263086&quot; probability: 1.80%
	&quot;-1.17306110997&quot; probability: 18.88%
	&quot;-0.993945504859&quot; probability: 5.73%
	&quot;-0.790765475961&quot; probability: 0.11%
	&quot;-0.491086000867&quot; probability: 8.38%
	&quot;-0.464563026468&quot; probability: 0.11%
	&quot;-0.22486068212&quot; probability: 18.45%
	&quot;0.347917042261&quot; probability: 13.79%
	&quot;0.575820786534&quot; probability: 31.81%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.y one of { -1.25653514783, -1.17664263086, -1.17306110997, -0.993945504859, -0.790765475961, -0.491086000867, -0.464563026468, -0.22486068212, 0.347917042261, 0.575820786534 }
	&quot;-1.25653514783&quot; probability: 0.95%
	&quot;-1.17664263086&quot; probability: 1.80%
	&quot;-1.17306110997&quot; probability: 18.88%
	&quot;-0.993945504859&quot; probability: 5.73%
	&quot;-0.790765475961&quot; probability: 0.11%
	&quot;-0.491086000867&quot; probability: 8.38%
	&quot;-0.464563026468&quot; probability: 0.11%
	&quot;-0.22486068212&quot; probability: 18.45%
	&quot;0.347917042261&quot; probability: 13.79%
	&quot;0.575820786534&quot; probability: 31.81%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 0.575820786534</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 0.575820786534</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x one of { 0.0273742628493, 0.0308892186852, 0.0326323445138, 0.0371397690786, 0.0395360881076, 0.0507383517382, 0.0645305256358, 0.0681580253423 }
	&quot;0.0273742628493&quot; probability: 0.95%
	&quot;0.0308892186852&quot; probability: 31.81%
	&quot;0.0326323445138&quot; probability: 1.80%
	&quot;0.0371397690786&quot; probability: 5.73%
	&quot;0.0395360881076&quot; probability: 18.56%
	&quot;0.0507383517382&quot; probability: 13.89%
	&quot;0.0645305256358&quot; probability: 8.38%
	&quot;0.0681580253423&quot; probability: 18.88%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x one of { 0.0273742628493, 0.0308892186852, 0.0326323445138, 0.0371397690786, 0.0395360881076, 0.0507383517382, 0.0645305256358, 0.0681580253423 }
	&quot;0.0273742628493&quot; probability: 0.95%
	&quot;0.0308892186852&quot; probability: 31.81%
	&quot;0.0326323445138&quot; probability: 1.80%
	&quot;0.0371397690786&quot; probability: 5.73%
	&quot;0.0395360881076&quot; probability: 18.56%
	&quot;0.0507383517382&quot; probability: 13.89%
	&quot;0.0645305256358&quot; probability: 8.38%
	&quot;0.0681580253423&quot; probability: 18.88%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0681580253423</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0681580253423</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.0273742628493</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.0273742628493</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w one of { 0.997023109931, 0.998047271354 }
	&quot;0.997023109931&quot; probability: 8.38%
	&quot;0.998047271354&quot; probability: 91.62%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.997023109931, 0.998047271354 }
	&quot;0.997023109931&quot; probability: 8.38%
	&quot;0.998047271354&quot; probability: 91.62%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.99897785038</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.99897785038</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= 0.997023109931</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.997023109931</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.seq one of { 72231, 72460, 72578, 72721, 72767, 72980, 72984, 72989, 72995, 72997, 73005, 73011, 73015, 73480, 73929, 73980, 74034, 74407, 74453, 167097, 167267, 167686, 167801, 167891, 172803, 173103, 173121, 233817, 234622, 239628, 240149, 240521, 240556, 241467 }
	&quot;72231&quot; probability: 0.00%
	&quot;72460&quot; probability: 0.02%
	&quot;72578&quot; probability: 0.03%
	&quot;72721&quot; probability: 0.01%
	&quot;72767&quot; probability: 0.04%
	&quot;72980&quot; probability: 0.00%
	&quot;72984&quot; probability: 0.00%
	&quot;72989&quot; probability: 0.00%
	&quot;72995&quot; probability: 0.00%
	&quot;72997&quot; probability: 0.00%
	&quot;73005&quot; probability: 0.00%
	&quot;73011&quot; probability: 0.00%
	&quot;73015&quot; probability: 0.01%
	&quot;73480&quot; probability: 0.07%
	&quot;73929&quot; probability: 0.01%
	&quot;73980&quot; probability: 0.01%
	&quot;74034&quot; probability: 0.07%
	&quot;74407&quot; probability: 0.01%
	&quot;74453&quot; probability: 0.01%
	&quot;167097&quot; probability: 0.03%
	&quot;167267&quot; probability: 0.08%
	&quot;167686&quot; probability: 0.02%
	&quot;167801&quot; probability: 0.02%
	&quot;167891&quot; probability: 0.01%
	&quot;172803&quot; probability: 0.05%
	&quot;173103&quot; probability: 0.01%
	&quot;173121&quot; probability: 0.06%
	&quot;233817&quot; probability: 0.16%
	&quot;234622&quot; probability: 0.00%
	&quot;239628&quot; probability: 0.01%
	&quot;240149&quot; probability: 0.07%
	&quot;240521&quot; probability: 0.01%
	&quot;240556&quot; probability: 0.18%
	&quot;241467&quot; probability: 0.01%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.header.seq one of { 72231, 72460, 72578, 72721, 72767, 72980, 72984, 72989, 72995, 72997, 73005, 73011, 73015, 73480, 73929, 73980, 74034, 74407, 74453, 167097, 167267, 167686, 167801, 167891, 172803, 173103, 173121, 233817, 234622, 239628, 240149, 240521, 240556, 241467 }
	&quot;72231&quot; probability: 0.00%
	&quot;72460&quot; probability: 0.02%
	&quot;72578&quot; probability: 0.03%
	&quot;72721&quot; probability: 0.01%
	&quot;72767&quot; probability: 0.04%
	&quot;72980&quot; probability: 0.00%
	&quot;72984&quot; probability: 0.00%
	&quot;72989&quot; probability: 0.00%
	&quot;72995&quot; probability: 0.00%
	&quot;72997&quot; probability: 0.00%
	&quot;73005&quot; probability: 0.00%
	&quot;73011&quot; probability: 0.00%
	&quot;73015&quot; probability: 0.01%
	&quot;73480&quot; probability: 0.07%
	&quot;73929&quot; probability: 0.01%
	&quot;73980&quot; probability: 0.01%
	&quot;74034&quot; probability: 0.07%
	&quot;74407&quot; probability: 0.01%
	&quot;74453&quot; probability: 0.01%
	&quot;167097&quot; probability: 0.03%
	&quot;167267&quot; probability: 0.08%
	&quot;167686&quot; probability: 0.02%
	&quot;167801&quot; probability: 0.02%
	&quot;167891&quot; probability: 0.01%
	&quot;172803&quot; probability: 0.05%
	&quot;173103&quot; probability: 0.01%
	&quot;173121&quot; probability: 0.06%
	&quot;233817&quot; probability: 0.16%
	&quot;234622&quot; probability: 0.00%
	&quot;239628&quot; probability: 0.01%
	&quot;240149&quot; probability: 0.07%
	&quot;240521&quot; probability: 0.01%
	&quot;240556&quot; probability: 0.18%
	&quot;241467&quot; probability: 0.01%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 70.71%
	&quot;0.00591641943256&quot; probability: 29.29%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 70.71%
	&quot;0.00591641943256&quot; probability: 29.29%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00669723346787</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00446151329888</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 29.29%
	&quot;0.33211761156&quot; probability: 43.22%
	&quot;0.336239855564&quot; probability: 27.49%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 29.29%
	&quot;0.33211761156&quot; probability: 43.22%
	&quot;0.336239855564&quot; probability: 27.49%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336239855564</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336239855564</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.0659328035045</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.stamp.secs one of { 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777253&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.04%
	&quot;1548777261&quot; probability: 0.01%
	&quot;1548777262&quot; probability: 0.01%
	&quot;1548777266&quot; probability: 0.07%
	&quot;1548777271&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.07%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1550023581&quot; probability: 0.03%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.06%
	&quot;1550024250&quot; probability: 0.16%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.07%
	&quot;1550024318&quot; probability: 0.01%
	&quot;1550024319&quot; probability: 0.18%
	&quot;1550024328&quot; probability: 0.01%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.header.stamp.secs one of { 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777253&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.04%
	&quot;1548777261&quot; probability: 0.01%
	&quot;1548777262&quot; probability: 0.01%
	&quot;1548777266&quot; probability: 0.07%
	&quot;1548777271&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.07%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1550023581&quot; probability: 0.03%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.06%
	&quot;1550024250&quot; probability: 0.16%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.07%
	&quot;1550024318&quot; probability: 0.01%
	&quot;1550024319&quot; probability: 0.18%
	&quot;1550024328&quot; probability: 0.01%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 29.29%
	&quot;1.05237855841&quot; probability: 70.71%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 29.29%
	&quot;1.05237855841&quot; probability: 70.71%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05243810671</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05243810671</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276380029344</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs one of { 3007899, 32886514, 43030628, 54011873, 75975814, 183136034, 193165903, 232933478, 342941848, 372995708, 376073439, 376166318, 384317252, 426163181, 492947036, 526045568, 544412472, 545906617, 546091596, 692837015, 692942286, 693205077, 703980264, 704129552, 726094006, 733015924, 782931237, 842991672, 843226002, 862986473, 893097090, 914028548, 914285989, 942949751 }
	&quot;3007899&quot; probability: 0.00%
	&quot;32886514&quot; probability: 0.01%
	&quot;43030628&quot; probability: 0.01%
	&quot;54011873&quot; probability: 0.18%
	&quot;75975814&quot; probability: 0.08%
	&quot;183136034&quot; probability: 0.01%
	&quot;193165903&quot; probability: 0.02%
	&quot;232933478&quot; probability: 0.07%
	&quot;342941848&quot; probability: 0.04%
	&quot;372995708&quot; probability: 0.03%
	&quot;376073439&quot; probability: 0.02%
	&quot;376166318&quot; probability: 0.03%
	&quot;384317252&quot; probability: 0.00%
	&quot;426163181&quot; probability: 0.01%
	&quot;492947036&quot; probability: 0.01%
	&quot;526045568&quot; probability: 0.02%
	&quot;544412472&quot; probability: 0.16%
	&quot;545906617&quot; probability: 0.05%
	&quot;546091596&quot; probability: 0.01%
	&quot;692837015&quot; probability: 0.01%
	&quot;692942286&quot; probability: 0.07%
	&quot;693205077&quot; probability: 0.00%
	&quot;703980264&quot; probability: 0.01%
	&quot;704129552&quot; probability: 0.01%
	&quot;726094006&quot; probability: 0.06%
	&quot;733015924&quot; probability: 0.00%
	&quot;782931237&quot; probability: 0.00%
	&quot;842991672&quot; probability: 0.01%
	&quot;843226002&quot; probability: 0.00%
	&quot;862986473&quot; probability: 0.00%
	&quot;893097090&quot; probability: 0.00%
	&quot;914028548&quot; probability: 0.07%
	&quot;914285989&quot; probability: 0.01%
	&quot;942949751&quot; probability: 0.00%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.header.stamp.nsecs one of { 3007899, 32886514, 43030628, 54011873, 75975814, 183136034, 193165903, 232933478, 342941848, 372995708, 376073439, 376166318, 384317252, 426163181, 492947036, 526045568, 544412472, 545906617, 546091596, 692837015, 692942286, 693205077, 703980264, 704129552, 726094006, 733015924, 782931237, 842991672, 843226002, 862986473, 893097090, 914028548, 914285989, 942949751 }
	&quot;3007899&quot; probability: 0.00%
	&quot;32886514&quot; probability: 0.01%
	&quot;43030628&quot; probability: 0.01%
	&quot;54011873&quot; probability: 0.18%
	&quot;75975814&quot; probability: 0.08%
	&quot;183136034&quot; probability: 0.01%
	&quot;193165903&quot; probability: 0.02%
	&quot;232933478&quot; probability: 0.07%
	&quot;342941848&quot; probability: 0.04%
	&quot;372995708&quot; probability: 0.03%
	&quot;376073439&quot; probability: 0.02%
	&quot;376166318&quot; probability: 0.03%
	&quot;384317252&quot; probability: 0.00%
	&quot;426163181&quot; probability: 0.01%
	&quot;492947036&quot; probability: 0.01%
	&quot;526045568&quot; probability: 0.02%
	&quot;544412472&quot; probability: 0.16%
	&quot;545906617&quot; probability: 0.05%
	&quot;546091596&quot; probability: 0.01%
	&quot;692837015&quot; probability: 0.01%
	&quot;692942286&quot; probability: 0.07%
	&quot;693205077&quot; probability: 0.00%
	&quot;703980264&quot; probability: 0.01%
	&quot;704129552&quot; probability: 0.01%
	&quot;726094006&quot; probability: 0.06%
	&quot;733015924&quot; probability: 0.00%
	&quot;782931237&quot; probability: 0.00%
	&quot;842991672&quot; probability: 0.01%
	&quot;843226002&quot; probability: 0.00%
	&quot;862986473&quot; probability: 0.00%
	&quot;893097090&quot; probability: 0.00%
	&quot;914028548&quot; probability: 0.07%
	&quot;914285989&quot; probability: 0.01%
	&quot;942949751&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130810805077, -0.129680064273, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 63.83%
	&quot;-0.129680064273&quot; probability: 6.87%
	&quot;-0.0777035894394&quot; probability: 29.29%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130810805077, -0.129680064273, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 63.83%
	&quot;-0.129680064273&quot; probability: 6.87%
	&quot;-0.0777035894394&quot; probability: 29.29%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946964056</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 29.29%
	&quot;0.0498290551547&quot; probability: 27.49%
	&quot;0.0513694691606&quot; probability: 43.22%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 29.29%
	&quot;0.0498290551547&quot; probability: 27.49%
	&quot;0.0513694691606&quot; probability: 43.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.0513694691606</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.0513694691606</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.016326538866</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.016326538866</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 2.71%
	&quot;-0.0050857084782&quot; probability: 26.58%
	&quot;5.46497583515E-5&quot; probability: 43.22%
	&quot;0.00195819392832&quot; probability: 27.49%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 2.71%
	&quot;-0.0050857084782&quot; probability: 26.58%
	&quot;5.46497583515E-5&quot; probability: 43.22%
	&quot;0.00195819392832&quot; probability: 27.49%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00195819392832</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00195819392832</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00667282022084</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 27.49%
	&quot;0.94322918622&quot; probability: 43.22%
	&quot;0.997789312085&quot; probability: 29.29%</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 27.49%
	&quot;0.94322918622&quot; probability: 43.22%
	&quot;0.997789312085&quot; probability: 29.29%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param2.data == &quot;y&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param2.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param2.data == &quot;y&quot;</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param2.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.header.stamp.nsecs != param1.header.stamp.nsecs</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.header.stamp.nsecs != param1.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y &lt; param1.transform.translation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w &gt; param1.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>1131</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id == param1.header.frame_id</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.frame_id == param1.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0 != null</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.04%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.24%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.04%
	&quot;158353&quot; probability: 0.16%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.03%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.11%
	&quot;207953&quot; probability: 0.10%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.seq one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.04%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.24%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.04%
	&quot;158353&quot; probability: 0.16%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.03%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.11%
	&quot;207953&quot; probability: 0.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt;= 0.06012958511</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &gt;= -0.127117512456</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt;= 0.988539091428</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &gt;= -0.0404800709009</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.04%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.24%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.04%
	&quot;1550023653&quot; probability: 0.16%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.11%
	&quot;1550024309&quot; probability: 0.10%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.stamp.secs one of { 1548777243, 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.04%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.24%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.04%
	&quot;1550023653&quot; probability: 0.16%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.11%
	&quot;1550024309&quot; probability: 0.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &lt;= 0.963827982442</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt;= 0.0335555937246</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 276088278, 326268647, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.24%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.04%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.11%
	&quot;486198332&quot; probability: 0.16%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.10%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.03%
	&quot;842715123&quot; probability: 0.03%
	&quot;856007530&quot; probability: 0.04%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.stamp.nsecs one of { 103161645, 132642966, 146057361, 276088278, 326268647, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.24%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.04%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.11%
	&quot;486198332&quot; probability: 0.16%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.10%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.03%
	&quot;842715123&quot; probability: 0.03%
	&quot;856007530&quot; probability: 0.04%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x &lt;= 0.899386908127</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y &lt;= 1.23434685526</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt;= 0.0752501830867</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt;= 0.021351562739</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 11.11%
	&quot;0.998047271354&quot; probability: 87.83%
	&quot;0.999247471565&quot; probability: 1.04%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w one of { -0.0529799957713, 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 11.11%
	&quot;0.998047271354&quot; probability: 87.83%
	&quot;0.999247471565&quot; probability: 1.04%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &lt;= 0.999247471565</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w &gt;= -0.0529799957713</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1 != null</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.header.seq != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 83.93%
	&quot;0.00579792162242&quot; probability: 16.07%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.y one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 83.93%
	&quot;0.00579792162242&quot; probability: 16.07%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt;= 0.00600762304953</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.y &lt;= 0.00600762304953</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &gt;= -0.00441620324333</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.y &gt;= -0.00441620324333</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.07%
	&quot;0.33209650183&quot; probability: 37.23%
	&quot;0.336192066889&quot; probability: 46.70%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.07%
	&quot;0.33209650183&quot; probability: 37.23%
	&quot;0.336192066889&quot; probability: 46.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt;= 0.336262247471</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.z &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt;= 0.065984409234</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.z &gt;= 0.065984409234</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.header.stamp.secs != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.07%
	&quot;1.05235948185&quot; probability: 83.93%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.z one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.07%
	&quot;1.05235948185&quot; probability: 83.93%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &lt;= 1.05248299982</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.z &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt;= 0.276404042358</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.z &gt;= 0.276404042358</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.header.stamp.nsecs != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.93%
	&quot;-0.0768714144176&quot; probability: 16.07%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.x one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.93%
	&quot;-0.0768714144176&quot; probability: 16.07%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &gt;= -0.130946797723</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.x &gt;= -0.130946797723</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.07%
	&quot;0.0496432718844&quot; probability: 46.70%
	&quot;0.0511190919793&quot; probability: 37.23%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.y one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.07%
	&quot;0.0496432718844&quot; probability: 46.70%
	&quot;0.0511190919793&quot; probability: 37.23%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &lt;= 0.051380817624</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.y &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.y &gt;= -0.0163550433646</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.y &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 16.07%
	&quot;5.12162687346E-4&quot; probability: 37.23%
	&quot;0.00187291365961&quot; probability: 46.70%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.x one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 16.07%
	&quot;5.12162687346E-4&quot; probability: 37.23%
	&quot;0.00187291365961&quot; probability: 46.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt;= 0.00199593726413</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.x &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &gt;= -0.00513753542575</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.x &gt;= -0.00513753542575</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 46.70%
	&quot;0.943236931927&quot; probability: 37.23%
	&quot;0.997787593551&quot; probability: 16.07%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.w one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 46.70%
	&quot;0.943236931927&quot; probability: 37.23%
	&quot;0.997787593551&quot; probability: 16.07%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.w != 0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param2 != null</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param2 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 10.37%	count:424.0 total:4089.0
	&quot;y&quot; probability: 89.63%	count:3665.0 total:4089.0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 10.37%	count:424.0 total:4089.0
	&quot;y&quot; probability: 89.63%	count:3665.0 total:4089.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.seq != param1.header.seq</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.seq != param1.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.child_frame_id &gt; param1.child_frame_id</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.child_frame_id &gt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.header.frame_id &lt; param1.child_frame_id</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.header.frame_id &lt; param1.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z != param1.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param0.transform.translation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.z != param1.transform.translation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.z != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param0.transform.translation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.x != param1.transform.translation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.x != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.translation.y != param1.transform.translation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.translation.y != param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &gt; param1.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param0.transform.rotation.w != param1.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param0.transform.rotation.w != param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y != param1.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.y != param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.y &lt; param1.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.y &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &gt; param1.transform.rotation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.z &gt; param1.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.z &lt; param1.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.z &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.z &gt; param1.transform.translation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.z &gt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.translation.x &lt; param1.transform.translation.y</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.translation.x &lt; param1.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>param1.transform.rotation.x &lt; param1.transform.rotation.w</INV> <SAMPLES>4304</SAMPLES> <DAIKON>param1.transform.rotation.x &lt; param1.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  &lt;==&gt;  (param2.data &lt; orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  &lt;==&gt;  (param2.data &lt; orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.26%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.05%
	&quot;158353&quot; probability: 0.18%
	&quot;161045&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.05%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.15%
	&quot;205675&quot; probability: 0.13%
	&quot;207953&quot; probability: 0.11%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.26%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.05%
	&quot;158353&quot; probability: 0.18%
	&quot;161045&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.05%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.15%
	&quot;205675&quot; probability: 0.13%
	&quot;207953&quot; probability: 0.11%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 146057361, 326268647, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.26%
	&quot;382804205&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.05%
	&quot;474144125&quot; probability: 0.13%
	&quot;486198332&quot; probability: 0.18%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.11%
	&quot;574409426&quot; probability: 0.15%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 146057361, 326268647, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.26%
	&quot;382804205&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.05%
	&quot;474144125&quot; probability: 0.13%
	&quot;486198332&quot; probability: 0.18%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.11%
	&quot;574409426&quot; probability: 0.15%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.05%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.26%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023653&quot; probability: 0.18%
	&quot;1550024239&quot; probability: 0.15%
	&quot;1550024286&quot; probability: 0.13%
	&quot;1550024309&quot; probability: 0.11%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.05%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.26%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023653&quot; probability: 0.18%
	&quot;1550024239&quot; probability: 0.15%
	&quot;1550024286&quot; probability: 0.13%
	&quot;1550024309&quot; probability: 0.11%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999247471565)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999247471565)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.995349986004)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.995349986004)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 12.87%
	&quot;0.998047271354&quot; probability: 85.93%
	&quot;0.999247471565&quot; probability: 1.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 12.87%
	&quot;0.998047271354&quot; probability: 85.93%
	&quot;0.999247471565&quot; probability: 1.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0193489475652)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0193489475652)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0480247095369)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0480247095369)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.899386908127)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.899386908127)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.922656613543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.922656613543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.038277608594)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.038277608594)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941767870788, 0.943202250242, 0.997787054612 }
	&quot;0.941767870788&quot; probability: 48.99%
	&quot;0.943202250242&quot; probability: 38.01%
	&quot;0.997787054612&quot; probability: 13.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941767870788, 0.943202250242, 0.997787054612 }
	&quot;0.941767870788&quot; probability: 48.99%
	&quot;0.943202250242&quot; probability: 38.01%
	&quot;0.997787054612&quot; probability: 13.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941767870788, 0.943202250242, 0.997787054612 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941767870788, 0.943202250242, 0.997787054612 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195868802955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195868802955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00513088375001)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00513088375001)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00513088375001, 3.64407613131E-4, 0.00188248328853 }
	&quot;-0.00513088375001&quot; probability: 13.00%
	&quot;3.64407613131E-4&quot; probability: 38.01%
	&quot;0.00188248328853&quot; probability: 48.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00513088375001, 3.64407613131E-4, 0.00188248328853 }
	&quot;-0.00513088375001&quot; probability: 13.00%
	&quot;3.64407613131E-4&quot; probability: 38.01%
	&quot;0.00188248328853&quot; probability: 48.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00600762304953)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00600762304953)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00441620324333)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00441620324333)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00394848034915, 0.00597083555115 }
	&quot;-0.00394848034915&quot; probability: 87.00%
	&quot;0.00597083555115&quot; probability: 13.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00394848034915, 0.00597083555115 }
	&quot;-0.00394848034915&quot; probability: 87.00%
	&quot;0.00597083555115&quot; probability: 13.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336247695033)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336247695033)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.065984409234)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.065984409234)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660228506143, 0.332195335889, 0.336235249952 }
	&quot;0.0660228506143&quot; probability: 13.00%
	&quot;0.332195335889&quot; probability: 38.01%
	&quot;0.336235249952&quot; probability: 48.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660228506143, 0.332195335889, 0.336235249952 }
	&quot;0.0660228506143&quot; probability: 13.00%
	&quot;0.332195335889&quot; probability: 38.01%
	&quot;0.336235249952&quot; probability: 48.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946797723)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946797723)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130727245466, -0.0775015354881 }
	&quot;-0.130727245466&quot; probability: 87.00%
	&quot;-0.0775015354881&quot; probability: 13.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130727245466, -0.0775015354881 }
	&quot;-0.130727245466&quot; probability: 87.00%
	&quot;-0.0775015354881&quot; probability: 13.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162885476683, 0.0497534191739, 0.0511575119757 }
	&quot;-0.0162885476683&quot; probability: 13.00%
	&quot;0.0497534191739&quot; probability: 48.99%
	&quot;0.0511575119757&quot; probability: 38.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162885476683, 0.0497534191739, 0.0511575119757 }
	&quot;-0.0162885476683&quot; probability: 13.00%
	&quot;0.0497534191739&quot; probability: 48.99%
	&quot;0.0511575119757&quot; probability: 38.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276415789809)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276415789809)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276563142702, 1.05238982973 }
	&quot;0.276563142702&quot; probability: 13.00%
	&quot;1.05238982973&quot; probability: 87.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276563142702, 1.05238982973 }
	&quot;0.276563142702&quot; probability: 13.00%
	&quot;1.05238982973&quot; probability: 87.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param2.data) == &quot;y&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (orig(param2.data) == &quot;y&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999430746398)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999430746398)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.995433941588, 0.996445806653, 0.997551688683, 0.998841764666 }
	&quot;0.926599849731&quot; probability: 0.03%
	&quot;0.930715267134&quot; probability: 0.03%
	&quot;0.975731991017&quot; probability: 0.03%
	&quot;0.991980662549&quot; probability: 0.05%
	&quot;0.993534224488&quot; probability: 0.38%
	&quot;0.995433941588&quot; probability: 2.89%
	&quot;0.996445806653&quot; probability: 9.28%
	&quot;0.997551688683&quot; probability: 46.40%
	&quot;0.998841764666&quot; probability: 40.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.995433941588, 0.996445806653, 0.997551688683, 0.998841764666 }
	&quot;0.926599849731&quot; probability: 0.03%
	&quot;0.930715267134&quot; probability: 0.03%
	&quot;0.975731991017&quot; probability: 0.03%
	&quot;0.991980662549&quot; probability: 0.05%
	&quot;0.993534224488&quot; probability: 0.38%
	&quot;0.995433941588&quot; probability: 2.89%
	&quot;0.996445806653&quot; probability: 9.28%
	&quot;0.997551688683&quot; probability: 46.40%
	&quot;0.998841764666&quot; probability: 40.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.089547849628)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.089547849628)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.00200394076527)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= 0.00200394076527)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425276387071)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0425276387071)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &gt;= -0.924663381543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.y &gt;= -0.924663381543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.902971109035)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.902971109035)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.99778640095 }
	&quot;0.941773958906&quot; probability: 48.99%
	&quot;0.943237478084&quot; probability: 38.01%
	&quot;0.99778640095&quot; probability: 13.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.99778640095 }
	&quot;0.941773958906&quot; probability: 48.99%
	&quot;0.943237478084&quot; probability: 38.01%
	&quot;0.99778640095&quot; probability: 13.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.99778640095 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941773958906, 0.943237478084, 0.99778640095 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.00510149711995, -0.00357115376734, 1.65917698752E-4, 0.00188572349177 }
	&quot;-0.00659605094816&quot; probability: 0.14%
	&quot;-0.00510149711995&quot; probability: 12.64%
	&quot;-0.00357115376734&quot; probability: 0.22%
	&quot;1.65917698752E-4&quot; probability: 38.01%
	&quot;0.00188572349177&quot; probability: 48.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.00510149711995, -0.00357115376734, 1.65917698752E-4, 0.00188572349177 }
	&quot;-0.00659605094816&quot; probability: 0.14%
	&quot;-0.00510149711995&quot; probability: 12.64%
	&quot;-0.00357115376734&quot; probability: 0.22%
	&quot;1.65917698752E-4&quot; probability: 38.01%
	&quot;0.00188572349177&quot; probability: 48.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00395894206308, 0.00593400823553 }
	&quot;-0.00395894206308&quot; probability: 87.00%
	&quot;0.00593400823553&quot; probability: 13.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00395894206308, 0.00593400823553 }
	&quot;-0.00395894206308&quot; probability: 87.00%
	&quot;0.00593400823553&quot; probability: 13.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336256651125)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336256651125)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660383248753, 0.33209531689, 0.336218055957 }
	&quot;0.0660383248753&quot; probability: 13.00%
	&quot;0.33209531689&quot; probability: 38.01%
	&quot;0.336218055957&quot; probability: 48.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660383248753, 0.33209531689, 0.336218055957 }
	&quot;0.0660383248753&quot; probability: 13.00%
	&quot;0.33209531689&quot; probability: 38.01%
	&quot;0.336218055957&quot; probability: 48.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130721478912, -0.129710901827, -0.0774917401888 }
	&quot;-0.130721478912&quot; probability: 85.31%
	&quot;-0.129710901827&quot; probability: 1.69%
	&quot;-0.0774917401888&quot; probability: 13.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130721478912, -0.129710901827, -0.0774917401888 }
	&quot;-0.130721478912&quot; probability: 85.31%
	&quot;-0.129710901827&quot; probability: 1.69%
	&quot;-0.0774917401888&quot; probability: 13.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513761028967)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513761028967)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0162983014486, 0.0497529588339, 0.0512137702218 }
	&quot;-0.0162983014486&quot; probability: 13.00%
	&quot;0.0497529588339&quot; probability: 48.99%
	&quot;0.0512137702218&quot; probability: 38.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0162983014486, 0.0497529588339, 0.0512137702218 }
	&quot;-0.0162983014486&quot; probability: 13.00%
	&quot;0.0497529588339&quot; probability: 48.99%
	&quot;0.0512137702218&quot; probability: 38.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276412899227)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276412899227)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276592491027, 1.05240257554 }
	&quot;0.276592491027&quot; probability: 13.00%
	&quot;1.05240257554&quot; probability: 87.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276592491027, 1.05240257554 }
	&quot;0.276592491027&quot; probability: 13.00%
	&quot;1.05240257554&quot; probability: 87.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.25%
	&quot;0.0&quot; probability: 99.75%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.25%
	&quot;0.0&quot; probability: 99.75%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;no&quot;)  ==&gt;  (return.linear.z one of { -200.0, 0.0 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;no&quot;)  ==&gt;  (return.linear.z one of { -200.0, 0.0 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  &lt;==&gt;  (orig(param2.data) == &quot;nonsensical&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  &lt;==&gt;  (orig(param2.data) == &quot;nonsensical&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.99897785038)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.99897785038)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0681580253423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0681580253423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0385605990791)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0385605990791)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0304312055358)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0304312055358)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0139154449107)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0139154449107)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.x) one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.y) one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00513753542575)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00513753542575)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00595482019994)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00595482019994)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00407325030909)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00407325030909)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659890268292)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659890268292)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130828206539)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130828206539)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513694691606)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513694691606)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163321065972)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163321065972)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05241193615)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05241193615)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276404042358)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276404042358)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.03%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.03%
	&quot;1548777248&quot; probability: 0.03%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777250&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.03%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.03%
	&quot;1550023573&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.03%
	&quot;1550024245&quot; probability: 0.03%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.03%
	&quot;1550024249&quot; probability: 0.03%
	&quot;1550024250&quot; probability: 0.02%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.03%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.03%
	&quot;1548777248&quot; probability: 0.03%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777250&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.03%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.03%
	&quot;1550023573&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.03%
	&quot;1550024245&quot; probability: 0.03%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.03%
	&quot;1550024249&quot; probability: 0.03%
	&quot;1550024250&quot; probability: 0.02%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.206398315973)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.206398315973)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 4.9E-324)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt; param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.03%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.03%
	&quot;1548777248&quot; probability: 0.03%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777250&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.03%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.03%
	&quot;1550023573&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.03%
	&quot;1550024245&quot; probability: 0.03%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.03%
	&quot;1550024249&quot; probability: 0.03%
	&quot;1550024250&quot; probability: 0.02%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.header.stamp.secs one of { 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777250, 1548777251, 1548777252, 1548777253, 1548777254, 1550023570, 1550023571, 1550023572, 1550023573, 1550023574, 1550023575, 1550023576, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024240, 1550024241, 1550024242, 1550024243, 1550024244, 1550024245, 1550024246, 1550024247, 1550024248, 1550024249, 1550024250 }
	&quot;1548777244&quot; probability: 0.00%
	&quot;1548777245&quot; probability: 0.03%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.03%
	&quot;1548777248&quot; probability: 0.03%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777250&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.03%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777253&quot; probability: 0.03%
	&quot;1548777254&quot; probability: 0.03%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023572&quot; probability: 0.03%
	&quot;1550023573&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023576&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024240&quot; probability: 0.03%
	&quot;1550024241&quot; probability: 0.03%
	&quot;1550024242&quot; probability: 0.04%
	&quot;1550024243&quot; probability: 0.03%
	&quot;1550024244&quot; probability: 0.03%
	&quot;1550024245&quot; probability: 0.03%
	&quot;1550024246&quot; probability: 0.03%
	&quot;1550024247&quot; probability: 0.03%
	&quot;1550024248&quot; probability: 0.03%
	&quot;1550024249&quot; probability: 0.03%
	&quot;1550024250&quot; probability: 0.02%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 33.49%
	&quot;0.943261993842&quot; probability: 32.71%
	&quot;0.997788345438&quot; probability: 33.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 33.49%
	&quot;0.943261993842&quot; probability: 32.71%
	&quot;0.997788345438&quot; probability: 33.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198029099406)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198029099406)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00524249297106)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00524249297106)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.0051186549392&quot; probability: 33.65%
	&quot;-0.00410114939048&quot; probability: 0.16%
	&quot;2.89138628677E-4&quot; probability: 32.71%
	&quot;0.00181840508637&quot; probability: 33.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.0051186549392&quot; probability: 33.65%
	&quot;-0.00410114939048&quot; probability: 0.16%
	&quot;2.89138628677E-4&quot; probability: 32.71%
	&quot;0.00181840508637&quot; probability: 33.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00651115636875)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00651115636875)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00407497876901)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00407497876901)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 66.20%
	&quot;0.00581902761016&quot; probability: 33.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 66.20%
	&quot;0.00581902761016&quot; probability: 33.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 33.80%
	&quot;0.332025338306&quot; probability: 32.71%
	&quot;0.336205303253&quot; probability: 33.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 33.80%
	&quot;0.332025338306&quot; probability: 32.71%
	&quot;0.336205303253&quot; probability: 33.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130832166999)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.130832166999)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 66.20%
	&quot;-0.0768626611435&quot; probability: 33.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 66.20%
	&quot;-0.0768626611435&quot; probability: 33.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 33.80%
	&quot;0.0496066092566&quot; probability: 33.49%
	&quot;0.0511671453035&quot; probability: 32.71%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 33.80%
	&quot;0.0496066092566&quot; probability: 33.49%
	&quot;0.0511671453035&quot; probability: 32.71%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05241324746)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05241324746)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 33.80%
	&quot;1.05235838107&quot; probability: 66.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 33.80%
	&quot;1.05235838107&quot; probability: 66.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2 == orig(param2))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2 == orig(param2))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2.data == orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (param2.data == orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.linear.x &gt;= -0.35850143434)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.linear.x &gt;= -0.35850143434)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.linear.y &lt;= 0.390774709239)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.linear.y &lt;= 0.390774709239)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.linear.z == 0.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;nonsensical&quot;)  ==&gt;  (return.linear.z == 0.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150984, 156879, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150984&quot; probability: 0.18%
	&quot;156879&quot; probability: 0.14%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.08%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.02%
	&quot;163174&quot; probability: 0.06%
	&quot;201119&quot; probability: 0.19%
	&quot;207953&quot; probability: 0.32%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.seq) one of { 150984, 156879, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150984&quot; probability: 0.18%
	&quot;156879&quot; probability: 0.14%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.08%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.02%
	&quot;163174&quot; probability: 0.06%
	&quot;201119&quot; probability: 0.19%
	&quot;207953&quot; probability: 0.32%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 262952903, 292943925, 326268647, 343145296, 386032425, 542851752, 544093352, 574409426, 703113486, 742824203 }
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.18%
	&quot;343145296&quot; probability: 0.08%
	&quot;386032425&quot; probability: 0.14%
	&quot;542851752&quot; probability: 0.06%
	&quot;544093352&quot; probability: 0.32%
	&quot;574409426&quot; probability: 0.19%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.02%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 262952903, 292943925, 326268647, 343145296, 386032425, 542851752, 544093352, 574409426, 703113486, 742824203 }
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.18%
	&quot;343145296&quot; probability: 0.08%
	&quot;386032425&quot; probability: 0.14%
	&quot;542851752&quot; probability: 0.06%
	&quot;544093352&quot; probability: 0.32%
	&quot;574409426&quot; probability: 0.19%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.02%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777252, 1548777269, 1548777273, 1548777274, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.08%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.06%
	&quot;1550023579&quot; probability: 0.18%
	&quot;1550023638&quot; probability: 0.14%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024309&quot; probability: 0.32%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777252, 1548777269, 1548777273, 1548777274, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.08%
	&quot;1548777273&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.06%
	&quot;1550023579&quot; probability: 0.18%
	&quot;1550023638&quot; probability: 0.14%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024309&quot; probability: 0.32%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.99897785038)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.99897785038)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.997023109931)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.997023109931)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.997023109931, 0.998047271354 }
	&quot;0.997023109931&quot; probability: 8.38%
	&quot;0.998047271354&quot; probability: 91.62%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.997023109931, 0.998047271354 }
	&quot;0.997023109931&quot; probability: 8.38%
	&quot;0.998047271354&quot; probability: 91.62%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0681580253423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0681580253423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0273742628493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0273742628493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0273742628493, 0.0308892186852, 0.0326323445138, 0.0371397690786, 0.0395360881076, 0.0507383517382, 0.0645305256358, 0.0681580253423 }
	&quot;0.0273742628493&quot; probability: 0.95%
	&quot;0.0308892186852&quot; probability: 31.81%
	&quot;0.0326323445138&quot; probability: 1.80%
	&quot;0.0371397690786&quot; probability: 5.73%
	&quot;0.0395360881076&quot; probability: 18.56%
	&quot;0.0507383517382&quot; probability: 13.89%
	&quot;0.0645305256358&quot; probability: 8.38%
	&quot;0.0681580253423&quot; probability: 18.88%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0273742628493, 0.0308892186852, 0.0326323445138, 0.0371397690786, 0.0395360881076, 0.0507383517382, 0.0645305256358, 0.0681580253423 }
	&quot;0.0273742628493&quot; probability: 0.95%
	&quot;0.0308892186852&quot; probability: 31.81%
	&quot;0.0326323445138&quot; probability: 1.80%
	&quot;0.0371397690786&quot; probability: 5.73%
	&quot;0.0395360881076&quot; probability: 18.56%
	&quot;0.0507383517382&quot; probability: 13.89%
	&quot;0.0645305256358&quot; probability: 8.38%
	&quot;0.0681580253423&quot; probability: 18.88%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0304312055358)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0304312055358)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0193489475652)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0193489475652)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.012113410325, 0.00164817359182, 0.00276378970341, 0.00567178575213, 0.0084364608046, 0.0141637091604, 0.0153503184685, 0.0304312055358 }
	&quot;-0.0193489475652&quot; probability: 31.81%
	&quot;-0.012113410325&quot; probability: 18.45%
	&quot;0.00164817359182&quot; probability: 5.73%
	&quot;0.00276378970341&quot; probability: 0.11%
	&quot;0.00567178575213&quot; probability: 13.89%
	&quot;0.0084364608046&quot; probability: 1.80%
	&quot;0.0141637091604&quot; probability: 8.38%
	&quot;0.0153503184685&quot; probability: 0.95%
	&quot;0.0304312055358&quot; probability: 18.88%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.012113410325, 0.00164817359182, 0.00276378970341, 0.00567178575213, 0.0084364608046, 0.0141637091604, 0.0153503184685, 0.0304312055358 }
	&quot;-0.0193489475652&quot; probability: 31.81%
	&quot;-0.012113410325&quot; probability: 18.45%
	&quot;0.00164817359182&quot; probability: 5.73%
	&quot;0.00276378970341&quot; probability: 0.11%
	&quot;0.00567178575213&quot; probability: 13.89%
	&quot;0.0084364608046&quot; probability: 1.80%
	&quot;0.0141637091604&quot; probability: 8.38%
	&quot;0.0153503184685&quot; probability: 0.95%
	&quot;0.0304312055358&quot; probability: 18.88%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0480247095369)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0480247095369)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0404800709009, -0.0139154449107, 0.0178672092569, 0.0279127999839, 0.0362574685504, 0.0375099468218, 0.0395092897092, 0.0417281217694, 0.0480247095369 }
	&quot;-0.0404800709009&quot; probability: 31.81%
	&quot;-0.0139154449107&quot; probability: 18.88%
	&quot;0.0178672092569&quot; probability: 18.45%
	&quot;0.0279127999839&quot; probability: 13.79%
	&quot;0.0362574685504&quot; probability: 0.95%
	&quot;0.0375099468218&quot; probability: 1.80%
	&quot;0.0395092897092&quot; probability: 8.48%
	&quot;0.0417281217694&quot; probability: 5.73%
	&quot;0.0480247095369&quot; probability: 0.11%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0404800709009, -0.0139154449107, 0.0178672092569, 0.0279127999839, 0.0362574685504, 0.0375099468218, 0.0395092897092, 0.0417281217694, 0.0480247095369 }
	&quot;-0.0404800709009&quot; probability: 31.81%
	&quot;-0.0139154449107&quot; probability: 18.88%
	&quot;0.0178672092569&quot; probability: 18.45%
	&quot;0.0279127999839&quot; probability: 13.79%
	&quot;0.0362574685504&quot; probability: 0.95%
	&quot;0.0375099468218&quot; probability: 1.80%
	&quot;0.0395092897092&quot; probability: 8.48%
	&quot;0.0417281217694&quot; probability: 5.73%
	&quot;0.0480247095369&quot; probability: 0.11%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.710633832892)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.710633832892)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.x) one of { -1.32452715405, -0.351829913918, -0.330484533363, -0.27644542861, 0.131180364976, 0.136249017358, 0.190448997017, 0.260147323069, 0.709633165307, 0.710633832892 }
	&quot;-1.32452715405&quot; probability: 18.88%
	&quot;-0.351829913918&quot; probability: 31.81%
	&quot;-0.330484533363&quot; probability: 0.11%
	&quot;-0.27644542861&quot; probability: 18.45%
	&quot;0.131180364976&quot; probability: 0.95%
	&quot;0.136249017358&quot; probability: 1.80%
	&quot;0.190448997017&quot; probability: 5.73%
	&quot;0.260147323069&quot; probability: 13.79%
	&quot;0.709633165307&quot; probability: 8.38%
	&quot;0.710633832892&quot; probability: 0.11%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.x) one of { -1.32452715405, -0.351829913918, -0.330484533363, -0.27644542861, 0.131180364976, 0.136249017358, 0.190448997017, 0.260147323069, 0.709633165307, 0.710633832892 }
	&quot;-1.32452715405&quot; probability: 18.88%
	&quot;-0.351829913918&quot; probability: 31.81%
	&quot;-0.330484533363&quot; probability: 0.11%
	&quot;-0.27644542861&quot; probability: 18.45%
	&quot;0.131180364976&quot; probability: 0.95%
	&quot;0.136249017358&quot; probability: 1.80%
	&quot;0.190448997017&quot; probability: 5.73%
	&quot;0.260147323069&quot; probability: 13.79%
	&quot;0.709633165307&quot; probability: 8.38%
	&quot;0.710633832892&quot; probability: 0.11%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.575820786534)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.575820786534)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) one of { -1.25653514783, -1.17664263086, -1.17306110997, -0.993945504859, -0.790765475961, -0.491086000867, -0.464563026468, -0.22486068212, 0.347917042261, 0.575820786534 }
	&quot;-1.25653514783&quot; probability: 0.95%
	&quot;-1.17664263086&quot; probability: 1.80%
	&quot;-1.17306110997&quot; probability: 18.88%
	&quot;-0.993945504859&quot; probability: 5.73%
	&quot;-0.790765475961&quot; probability: 0.11%
	&quot;-0.491086000867&quot; probability: 8.38%
	&quot;-0.464563026468&quot; probability: 0.11%
	&quot;-0.22486068212&quot; probability: 18.45%
	&quot;0.347917042261&quot; probability: 13.79%
	&quot;0.575820786534&quot; probability: 31.81%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.y) one of { -1.25653514783, -1.17664263086, -1.17306110997, -0.993945504859, -0.790765475961, -0.491086000867, -0.464563026468, -0.22486068212, 0.347917042261, 0.575820786534 }
	&quot;-1.25653514783&quot; probability: 0.95%
	&quot;-1.17664263086&quot; probability: 1.80%
	&quot;-1.17306110997&quot; probability: 18.88%
	&quot;-0.993945504859&quot; probability: 5.73%
	&quot;-0.790765475961&quot; probability: 0.11%
	&quot;-0.491086000867&quot; probability: 8.38%
	&quot;-0.464563026468&quot; probability: 0.11%
	&quot;-0.22486068212&quot; probability: 18.45%
	&quot;0.347917042261&quot; probability: 13.79%
	&quot;0.575820786534&quot; probability: 31.81%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.922656613543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.922656613543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.038277608594)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.038277608594)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.038277608594, 0.40644452608, 0.443944916721, 0.468211629637, 0.567787591576, 0.572652708231, 0.747051672725, 0.829106997929, 0.922656613543 }
	&quot;0.038277608594&quot; probability: 18.88%
	&quot;0.40644452608&quot; probability: 5.73%
	&quot;0.443944916721&quot; probability: 1.80%
	&quot;0.468211629637&quot; probability: 0.95%
	&quot;0.567787591576&quot; probability: 31.81%
	&quot;0.572652708231&quot; probability: 8.48%
	&quot;0.747051672725&quot; probability: 13.79%
	&quot;0.829106997929&quot; probability: 0.11%
	&quot;0.922656613543&quot; probability: 18.45%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.038277608594, 0.40644452608, 0.443944916721, 0.468211629637, 0.567787591576, 0.572652708231, 0.747051672725, 0.829106997929, 0.922656613543 }
	&quot;0.038277608594&quot; probability: 18.88%
	&quot;0.40644452608&quot; probability: 5.73%
	&quot;0.443944916721&quot; probability: 1.80%
	&quot;0.468211629637&quot; probability: 0.95%
	&quot;0.567787591576&quot; probability: 31.81%
	&quot;0.572652708231&quot; probability: 8.48%
	&quot;0.747051672725&quot; probability: 13.79%
	&quot;0.829106997929&quot; probability: 0.11%
	&quot;0.922656613543&quot; probability: 18.45%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.header.seq) one of { 72231, 72460, 72578, 72721, 72767, 72980, 72984, 72989, 72995, 72997, 73005, 73011, 73015, 73480, 73929, 73980, 74034, 74407, 74453, 167097, 167267, 167686, 167801, 167891, 172803, 173103, 173121, 233817, 234622, 239628, 240149, 240521, 240556, 241467 }
	&quot;72231&quot; probability: 0.00%
	&quot;72460&quot; probability: 0.02%
	&quot;72578&quot; probability: 0.03%
	&quot;72721&quot; probability: 0.01%
	&quot;72767&quot; probability: 0.04%
	&quot;72980&quot; probability: 0.00%
	&quot;72984&quot; probability: 0.00%
	&quot;72989&quot; probability: 0.00%
	&quot;72995&quot; probability: 0.00%
	&quot;72997&quot; probability: 0.00%
	&quot;73005&quot; probability: 0.00%
	&quot;73011&quot; probability: 0.00%
	&quot;73015&quot; probability: 0.01%
	&quot;73480&quot; probability: 0.07%
	&quot;73929&quot; probability: 0.01%
	&quot;73980&quot; probability: 0.01%
	&quot;74034&quot; probability: 0.07%
	&quot;74407&quot; probability: 0.01%
	&quot;74453&quot; probability: 0.01%
	&quot;167097&quot; probability: 0.03%
	&quot;167267&quot; probability: 0.08%
	&quot;167686&quot; probability: 0.02%
	&quot;167801&quot; probability: 0.02%
	&quot;167891&quot; probability: 0.01%
	&quot;172803&quot; probability: 0.05%
	&quot;173103&quot; probability: 0.01%
	&quot;173121&quot; probability: 0.06%
	&quot;233817&quot; probability: 0.16%
	&quot;234622&quot; probability: 0.00%
	&quot;239628&quot; probability: 0.01%
	&quot;240149&quot; probability: 0.07%
	&quot;240521&quot; probability: 0.01%
	&quot;240556&quot; probability: 0.18%
	&quot;241467&quot; probability: 0.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.header.seq) one of { 72231, 72460, 72578, 72721, 72767, 72980, 72984, 72989, 72995, 72997, 73005, 73011, 73015, 73480, 73929, 73980, 74034, 74407, 74453, 167097, 167267, 167686, 167801, 167891, 172803, 173103, 173121, 233817, 234622, 239628, 240149, 240521, 240556, 241467 }
	&quot;72231&quot; probability: 0.00%
	&quot;72460&quot; probability: 0.02%
	&quot;72578&quot; probability: 0.03%
	&quot;72721&quot; probability: 0.01%
	&quot;72767&quot; probability: 0.04%
	&quot;72980&quot; probability: 0.00%
	&quot;72984&quot; probability: 0.00%
	&quot;72989&quot; probability: 0.00%
	&quot;72995&quot; probability: 0.00%
	&quot;72997&quot; probability: 0.00%
	&quot;73005&quot; probability: 0.00%
	&quot;73011&quot; probability: 0.00%
	&quot;73015&quot; probability: 0.01%
	&quot;73480&quot; probability: 0.07%
	&quot;73929&quot; probability: 0.01%
	&quot;73980&quot; probability: 0.01%
	&quot;74034&quot; probability: 0.07%
	&quot;74407&quot; probability: 0.01%
	&quot;74453&quot; probability: 0.01%
	&quot;167097&quot; probability: 0.03%
	&quot;167267&quot; probability: 0.08%
	&quot;167686&quot; probability: 0.02%
	&quot;167801&quot; probability: 0.02%
	&quot;167891&quot; probability: 0.01%
	&quot;172803&quot; probability: 0.05%
	&quot;173103&quot; probability: 0.01%
	&quot;173121&quot; probability: 0.06%
	&quot;233817&quot; probability: 0.16%
	&quot;234622&quot; probability: 0.00%
	&quot;239628&quot; probability: 0.01%
	&quot;240149&quot; probability: 0.07%
	&quot;240521&quot; probability: 0.01%
	&quot;240556&quot; probability: 0.18%
	&quot;241467&quot; probability: 0.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 3007899, 32886514, 43030628, 54011873, 75975814, 183136034, 193165903, 232933478, 342941848, 372995708, 376073439, 376166318, 384317252, 426163181, 492947036, 526045568, 544412472, 545906617, 546091596, 692837015, 692942286, 693205077, 703980264, 704129552, 726094006, 733015924, 782931237, 842991672, 843226002, 862986473, 893097090, 914028548, 914285989, 942949751 }
	&quot;3007899&quot; probability: 0.00%
	&quot;32886514&quot; probability: 0.01%
	&quot;43030628&quot; probability: 0.01%
	&quot;54011873&quot; probability: 0.18%
	&quot;75975814&quot; probability: 0.08%
	&quot;183136034&quot; probability: 0.01%
	&quot;193165903&quot; probability: 0.02%
	&quot;232933478&quot; probability: 0.07%
	&quot;342941848&quot; probability: 0.04%
	&quot;372995708&quot; probability: 0.03%
	&quot;376073439&quot; probability: 0.02%
	&quot;376166318&quot; probability: 0.03%
	&quot;384317252&quot; probability: 0.00%
	&quot;426163181&quot; probability: 0.01%
	&quot;492947036&quot; probability: 0.01%
	&quot;526045568&quot; probability: 0.02%
	&quot;544412472&quot; probability: 0.16%
	&quot;545906617&quot; probability: 0.05%
	&quot;546091596&quot; probability: 0.01%
	&quot;692837015&quot; probability: 0.01%
	&quot;692942286&quot; probability: 0.07%
	&quot;693205077&quot; probability: 0.00%
	&quot;703980264&quot; probability: 0.01%
	&quot;704129552&quot; probability: 0.01%
	&quot;726094006&quot; probability: 0.06%
	&quot;733015924&quot; probability: 0.00%
	&quot;782931237&quot; probability: 0.00%
	&quot;842991672&quot; probability: 0.01%
	&quot;843226002&quot; probability: 0.00%
	&quot;862986473&quot; probability: 0.00%
	&quot;893097090&quot; probability: 0.00%
	&quot;914028548&quot; probability: 0.07%
	&quot;914285989&quot; probability: 0.01%
	&quot;942949751&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 3007899, 32886514, 43030628, 54011873, 75975814, 183136034, 193165903, 232933478, 342941848, 372995708, 376073439, 376166318, 384317252, 426163181, 492947036, 526045568, 544412472, 545906617, 546091596, 692837015, 692942286, 693205077, 703980264, 704129552, 726094006, 733015924, 782931237, 842991672, 843226002, 862986473, 893097090, 914028548, 914285989, 942949751 }
	&quot;3007899&quot; probability: 0.00%
	&quot;32886514&quot; probability: 0.01%
	&quot;43030628&quot; probability: 0.01%
	&quot;54011873&quot; probability: 0.18%
	&quot;75975814&quot; probability: 0.08%
	&quot;183136034&quot; probability: 0.01%
	&quot;193165903&quot; probability: 0.02%
	&quot;232933478&quot; probability: 0.07%
	&quot;342941848&quot; probability: 0.04%
	&quot;372995708&quot; probability: 0.03%
	&quot;376073439&quot; probability: 0.02%
	&quot;376166318&quot; probability: 0.03%
	&quot;384317252&quot; probability: 0.00%
	&quot;426163181&quot; probability: 0.01%
	&quot;492947036&quot; probability: 0.01%
	&quot;526045568&quot; probability: 0.02%
	&quot;544412472&quot; probability: 0.16%
	&quot;545906617&quot; probability: 0.05%
	&quot;546091596&quot; probability: 0.01%
	&quot;692837015&quot; probability: 0.01%
	&quot;692942286&quot; probability: 0.07%
	&quot;693205077&quot; probability: 0.00%
	&quot;703980264&quot; probability: 0.01%
	&quot;704129552&quot; probability: 0.01%
	&quot;726094006&quot; probability: 0.06%
	&quot;733015924&quot; probability: 0.00%
	&quot;782931237&quot; probability: 0.00%
	&quot;842991672&quot; probability: 0.01%
	&quot;843226002&quot; probability: 0.00%
	&quot;862986473&quot; probability: 0.00%
	&quot;893097090&quot; probability: 0.00%
	&quot;914028548&quot; probability: 0.07%
	&quot;914285989&quot; probability: 0.01%
	&quot;942949751&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777253&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.04%
	&quot;1548777261&quot; probability: 0.01%
	&quot;1548777262&quot; probability: 0.01%
	&quot;1548777266&quot; probability: 0.07%
	&quot;1548777271&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.07%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1550023581&quot; probability: 0.03%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.06%
	&quot;1550024250&quot; probability: 0.16%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.07%
	&quot;1550024318&quot; probability: 0.01%
	&quot;1550024319&quot; probability: 0.18%
	&quot;1550024328&quot; probability: 0.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777253&quot; probability: 0.00%
	&quot;1548777256&quot; probability: 0.02%
	&quot;1548777257&quot; probability: 0.03%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.04%
	&quot;1548777261&quot; probability: 0.01%
	&quot;1548777262&quot; probability: 0.01%
	&quot;1548777266&quot; probability: 0.07%
	&quot;1548777271&quot; probability: 0.02%
	&quot;1548777272&quot; probability: 0.07%
	&quot;1548777276&quot; probability: 0.02%
	&quot;1550023581&quot; probability: 0.03%
	&quot;1550023583&quot; probability: 0.08%
	&quot;1550023587&quot; probability: 0.02%
	&quot;1550023588&quot; probability: 0.02%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.05%
	&quot;1550023641&quot; probability: 0.06%
	&quot;1550024250&quot; probability: 0.16%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.07%
	&quot;1550024318&quot; probability: 0.01%
	&quot;1550024319&quot; probability: 0.18%
	&quot;1550024328&quot; probability: 0.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 27.49%
	&quot;0.94322918622&quot; probability: 43.22%
	&quot;0.997789312085&quot; probability: 29.29%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 27.49%
	&quot;0.94322918622&quot; probability: 43.22%
	&quot;0.997789312085&quot; probability: 29.29%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195819392832)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195819392832)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 2.71%
	&quot;-0.0050857084782&quot; probability: 26.58%
	&quot;5.46497583515E-5&quot; probability: 43.22%
	&quot;0.00195819392832&quot; probability: 27.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 2.71%
	&quot;-0.0050857084782&quot; probability: 26.58%
	&quot;5.46497583515E-5&quot; probability: 43.22%
	&quot;0.00195819392832&quot; probability: 27.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 70.71%
	&quot;0.00591641943256&quot; probability: 29.29%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 70.71%
	&quot;0.00591641943256&quot; probability: 29.29%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336239855564)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336239855564)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 29.29%
	&quot;0.33211761156&quot; probability: 43.22%
	&quot;0.336239855564&quot; probability: 27.49%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 29.29%
	&quot;0.33211761156&quot; probability: 43.22%
	&quot;0.336239855564&quot; probability: 27.49%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130810805077, -0.129680064273, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 63.83%
	&quot;-0.129680064273&quot; probability: 6.87%
	&quot;-0.0777035894394&quot; probability: 29.29%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130810805077, -0.129680064273, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 63.83%
	&quot;-0.129680064273&quot; probability: 6.87%
	&quot;-0.0777035894394&quot; probability: 29.29%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513694691606)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513694691606)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016326538866)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.016326538866)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 29.29%
	&quot;0.0498290551547&quot; probability: 27.49%
	&quot;0.0513694691606&quot; probability: 43.22%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 29.29%
	&quot;0.0498290551547&quot; probability: 27.49%
	&quot;0.0513694691606&quot; probability: 43.22%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05243810671)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05243810671)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 29.29%
	&quot;1.05237855841&quot; probability: 70.71%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 29.29%
	&quot;1.05237855841&quot; probability: 70.71%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param2.data) == &quot;y&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (orig(param2.data) == &quot;y&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995348625507)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w &gt;= 0.995348625507)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.995605562752&quot; probability: 0.44%
	&quot;0.996683457272&quot; probability: 2.12%
	&quot;0.99771068881&quot; probability: 68.44%
	&quot;0.998821820189&quot; probability: 29.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.w one of { 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.995605562752&quot; probability: 0.44%
	&quot;0.996683457272&quot; probability: 2.12%
	&quot;0.99771068881&quot; probability: 68.44%
	&quot;0.998821820189&quot; probability: 29.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0416319008723)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0652799118839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.y &gt;= -0.0652799118839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &lt;= 0.065473829033)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.371424188128)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param0.transform.translation.z &gt;= 0.371424188128)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &lt;= 0.997790354734)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 26.88%
	&quot;0.943189357147&quot; probability: 42.26%
	&quot;0.997786924692&quot; probability: 30.86%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 26.88%
	&quot;0.943189357147&quot; probability: 42.26%
	&quot;0.997786924692&quot; probability: 30.86%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00197222515495)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.88%
	&quot;-0.00513675410628&quot; probability: 29.97%
	&quot;2.75938565783E-4&quot; probability: 42.26%
	&quot;0.00191107265235&quot; probability: 26.88%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.88%
	&quot;-0.00513675410628&quot; probability: 29.97%
	&quot;2.75938565783E-4&quot; probability: 42.26%
	&quot;0.00191107265235&quot; probability: 26.88%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 69.14%
	&quot;0.0059419944482&quot; probability: 30.86%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 69.14%
	&quot;0.0059419944482&quot; probability: 30.86%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0659025253996)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 30.86%
	&quot;0.332231048848&quot; probability: 42.26%
	&quot;0.33622739792&quot; probability: 26.88%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 30.86%
	&quot;0.332231048848&quot; probability: 42.26%
	&quot;0.33622739792&quot; probability: 26.88%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129767325698, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 64.01%
	&quot;-0.129767325698&quot; probability: 5.13%
	&quot;-0.0775165645194&quot; probability: 30.86%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129767325698, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 64.01%
	&quot;-0.129767325698&quot; probability: 5.13%
	&quot;-0.0775165645194&quot; probability: 30.86%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163477345081)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163477345081)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 30.86%
	&quot;0.0498189383075&quot; probability: 26.88%
	&quot;0.0513074083698&quot; probability: 42.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 30.86%
	&quot;0.0498189383075&quot; probability: 26.88%
	&quot;0.0513074083698&quot; probability: 42.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 30.86%
	&quot;1.05235703608&quot; probability: 69.14%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 30.86%
	&quot;1.05235703608&quot; probability: 69.14%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (param2.data == orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (param2.data == orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data == &quot;y&quot;)  ==&gt;  (return.linear.z == 0.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data == &quot;y&quot;)  ==&gt;  (return.linear.z == 0.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.04%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.24%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.04%
	&quot;158353&quot; probability: 0.16%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.03%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.11%
	&quot;207953&quot; probability: 0.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.04%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.24%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.04%
	&quot;158353&quot; probability: 0.16%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.03%
	&quot;163174&quot; probability: 0.01%
	&quot;163704&quot; probability: 0.03%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.11%
	&quot;207953&quot; probability: 0.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 276088278, 326268647, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.24%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.04%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.11%
	&quot;486198332&quot; probability: 0.16%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.10%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.03%
	&quot;842715123&quot; probability: 0.03%
	&quot;856007530&quot; probability: 0.04%
	&quot;946176678&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 276088278, 326268647, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.24%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.04%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.11%
	&quot;486198332&quot; probability: 0.16%
	&quot;542851752&quot; probability: 0.01%
	&quot;544093352&quot; probability: 0.10%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.03%
	&quot;842715123&quot; probability: 0.03%
	&quot;856007530&quot; probability: 0.04%
	&quot;946176678&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.04%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.24%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.04%
	&quot;1550023653&quot; probability: 0.16%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.11%
	&quot;1550024309&quot; probability: 0.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.03%
	&quot;1548777274&quot; probability: 0.01%
	&quot;1548777279&quot; probability: 0.03%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.04%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.24%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.04%
	&quot;1550023653&quot; probability: 0.16%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.11%
	&quot;1550024309&quot; probability: 0.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999247471565)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999247471565)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 11.11%
	&quot;0.998047271354&quot; probability: 87.83%
	&quot;0.999247471565&quot; probability: 1.04%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 11.11%
	&quot;0.998047271354&quot; probability: 87.83%
	&quot;0.999247471565&quot; probability: 1.04%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.899386908127)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.899386908127)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 46.70%
	&quot;0.943236931927&quot; probability: 37.23%
	&quot;0.997787593551&quot; probability: 16.07%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 46.70%
	&quot;0.943236931927&quot; probability: 37.23%
	&quot;0.997787593551&quot; probability: 16.07%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00513753542575)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00513753542575)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 16.07%
	&quot;5.12162687346E-4&quot; probability: 37.23%
	&quot;0.00187291365961&quot; probability: 46.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 16.07%
	&quot;5.12162687346E-4&quot; probability: 37.23%
	&quot;0.00187291365961&quot; probability: 46.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00600762304953)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00600762304953)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00441620324333)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00441620324333)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 83.93%
	&quot;0.00579792162242&quot; probability: 16.07%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 83.93%
	&quot;0.00579792162242&quot; probability: 16.07%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.065984409234)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.065984409234)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.07%
	&quot;0.33209650183&quot; probability: 37.23%
	&quot;0.336192066889&quot; probability: 46.70%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 16.07%
	&quot;0.33209650183&quot; probability: 37.23%
	&quot;0.336192066889&quot; probability: 46.70%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946797723)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946797723)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.93%
	&quot;-0.0768714144176&quot; probability: 16.07%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 83.93%
	&quot;-0.0768714144176&quot; probability: 16.07%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.07%
	&quot;0.0496432718844&quot; probability: 46.70%
	&quot;0.0511190919793&quot; probability: 37.23%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 16.07%
	&quot;0.0496432718844&quot; probability: 46.70%
	&quot;0.0511190919793&quot; probability: 37.23%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276404042358)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276404042358)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.07%
	&quot;1.05235948185&quot; probability: 83.93%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 16.07%
	&quot;1.05235948185&quot; probability: 83.93%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 10.37%	count:424.0 total:4089.0
	&quot;y&quot; probability: 89.63%	count:3665.0 total:4089.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 10.37%	count:424.0 total:4089.0
	&quot;y&quot; probability: 89.63%	count:3665.0 total:4089.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 46.65%
	&quot;0.943261993842&quot; probability: 37.20%
	&quot;0.997788345438&quot; probability: 16.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 46.65%
	&quot;0.943261993842&quot; probability: 37.20%
	&quot;0.997788345438&quot; probability: 16.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00669230441157)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.12%
	&quot;-0.0051186549392&quot; probability: 15.82%
	&quot;-0.00410114939048&quot; probability: 0.21%
	&quot;2.89138628677E-4&quot; probability: 37.20%
	&quot;0.00181840508637&quot; probability: 46.65%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00659605094816, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00659605094816&quot; probability: 0.12%
	&quot;-0.0051186549392&quot; probability: 15.82%
	&quot;-0.00410114939048&quot; probability: 0.21%
	&quot;2.89138628677E-4&quot; probability: 37.20%
	&quot;0.00181840508637&quot; probability: 46.65%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 83.85%
	&quot;0.00581902761016&quot; probability: 16.03%
	&quot;0.00685348608903&quot; probability: 0.12%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 83.85%
	&quot;0.00581902761016&quot; probability: 16.03%
	&quot;0.00685348608903&quot; probability: 0.12%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 16.15%
	&quot;0.332025338306&quot; probability: 37.20%
	&quot;0.336205303253&quot; probability: 46.65%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 16.15%
	&quot;0.332025338306&quot; probability: 37.20%
	&quot;0.336205303253&quot; probability: 46.65%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.130892708791)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 83.85%
	&quot;-0.0768626611435&quot; probability: 16.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130057847125, -0.0768626611435 }
	&quot;-0.130057847125&quot; probability: 83.85%
	&quot;-0.0768626611435&quot; probability: 16.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.0514066457666)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 16.15%
	&quot;0.0496066092566&quot; probability: 46.65%
	&quot;0.0511671453035&quot; probability: 37.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 16.15%
	&quot;0.0496066092566&quot; probability: 46.65%
	&quot;0.0511671453035&quot; probability: 37.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05269256745)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276368991543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 16.15%
	&quot;1.05235838107&quot; probability: 83.85%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 16.15%
	&quot;1.05235838107&quot; probability: 83.85%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 89.63%	count:3665.0 total:4089.0
	&quot;nonsensical&quot; probability: 10.37%	count:424.0 total:4089.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 89.63%	count:3665.0 total:4089.0
	&quot;nonsensical&quot; probability: 10.37%	count:424.0 total:4089.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.22%
	&quot;0.0&quot; probability: 99.78%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.22%
	&quot;0.0&quot; probability: 99.78%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;nonsensical&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  &lt;==&gt;  (orig(param2.data) == &quot;y&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  &lt;==&gt;  (orig(param2.data) == &quot;y&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.seq) one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.seq) one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999247471565)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.999247471565)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.995349986004)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= 0.995349986004)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0193489475652)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.0193489475652)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0480247095369)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.0480247095369)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0404800709009)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &gt;= -0.0404800709009)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.899386908127)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.899386908127)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.922656613543)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.922656613543)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.038277608594)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.038277608594)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195868802955)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00195868802955)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336247695033)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336247695033)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.999723647518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= 0.926599849731)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.994598087046, 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.926599849731&quot; probability: 0.02%
	&quot;0.930715267134&quot; probability: 0.02%
	&quot;0.975731991017&quot; probability: 0.02%
	&quot;0.991980662549&quot; probability: 0.04%
	&quot;0.993534224488&quot; probability: 0.29%
	&quot;0.994598087046&quot; probability: 0.06%
	&quot;0.995605562752&quot; probability: 3.02%
	&quot;0.996683457272&quot; probability: 7.34%
	&quot;0.99771068881&quot; probability: 56.01%
	&quot;0.998821820189&quot; probability: 33.17%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w one of { 0.926599849731, 0.930715267134, 0.975731991017, 0.991980662549, 0.993534224488, 0.994598087046, 0.995605562752, 0.996683457272, 0.99771068881, 0.998821820189 }
	&quot;0.926599849731&quot; probability: 0.02%
	&quot;0.930715267134&quot; probability: 0.02%
	&quot;0.975731991017&quot; probability: 0.02%
	&quot;0.991980662549&quot; probability: 0.04%
	&quot;0.993534224488&quot; probability: 0.29%
	&quot;0.994598087046&quot; probability: 0.06%
	&quot;0.995605562752&quot; probability: 3.02%
	&quot;0.996683457272&quot; probability: 7.34%
	&quot;0.99771068881&quot; probability: 56.01%
	&quot;0.998821820189&quot; probability: 33.17%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.0902756046823)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.00311831326622)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.0898579409188)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.0653046676083)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.364462933325)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.0510419947615)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 0.95731031194)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0385435452523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &lt;= 0.997811861822)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w &gt;= 0.941759290728)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 43.74%
	&quot;0.943189357147&quot; probability: 38.99%
	&quot;0.997786924692&quot; probability: 17.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941770256841, 0.943189357147, 0.997786924692 }
	&quot;0.941770256841&quot; probability: 43.74%
	&quot;0.943189357147&quot; probability: 38.99%
	&quot;0.997786924692&quot; probability: 17.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, -0.00357115376734, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.31%
	&quot;-0.00513675410628&quot; probability: 16.78%
	&quot;-0.00357115376734&quot; probability: 0.17%
	&quot;2.75938565783E-4&quot; probability: 38.99%
	&quot;0.00191107265235&quot; probability: 43.74%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.00513675410628, -0.00357115376734, 2.75938565783E-4, 0.00191107265235 }
	&quot;-0.00660047310277&quot; probability: 0.31%
	&quot;-0.00513675410628&quot; probability: 16.78%
	&quot;-0.00357115376734&quot; probability: 0.17%
	&quot;2.75938565783E-4&quot; probability: 38.99%
	&quot;0.00191107265235&quot; probability: 43.74%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 82.74%
	&quot;0.0059419944482&quot; probability: 17.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00403336319758, 0.0059419944482 }
	&quot;-0.00403336319758&quot; probability: 82.74%
	&quot;0.0059419944482&quot; probability: 17.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336258248784)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 17.26%
	&quot;0.332231048848&quot; probability: 38.99%
	&quot;0.33622739792&quot; probability: 43.74%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660269594456, 0.332231048848, 0.33622739792 }
	&quot;0.0660269594456&quot; probability: 17.26%
	&quot;0.332231048848&quot; probability: 38.99%
	&quot;0.33622739792&quot; probability: 43.74%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129761970985, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 77.46%
	&quot;-0.129761970985&quot; probability: 5.28%
	&quot;-0.0775165645194&quot; probability: 17.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.130791068005, -0.129761970985, -0.0775165645194 }
	&quot;-0.130791068005&quot; probability: 77.46%
	&quot;-0.129761970985&quot; probability: 5.28%
	&quot;-0.0775165645194&quot; probability: 17.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 17.26%
	&quot;0.0498189383075&quot; probability: 43.74%
	&quot;0.0513074083698&quot; probability: 38.99%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.016323776005, 0.0498189383075, 0.0513074083698 }
	&quot;-0.016323776005&quot; probability: 17.26%
	&quot;0.0498189383075&quot; probability: 43.74%
	&quot;0.0513074083698&quot; probability: 38.99%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 17.26%
	&quot;1.05235703608&quot; probability: 82.74%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276629382916, 1.05235703608 }
	&quot;0.276629382916&quot; probability: 17.26%
	&quot;1.05235703608&quot; probability: 82.74%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 78.85%	count:3665.0 total:4648.0
	&quot;y&quot; probability: 21.15%	count:983.0 total:4648.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 78.85%	count:3665.0 total:4648.0
	&quot;y&quot; probability: 21.15%	count:983.0 total:4648.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.x &gt;= -1.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.x &gt;= -1.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.y &lt;= 1.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.y &lt;= 1.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.20%
	&quot;0.0&quot; probability: 99.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.20%
	&quot;0.0&quot; probability: 99.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;no&quot;, &quot;y&quot; })  ==&gt;  (return.linear.z one of { -200.0, 0.0 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  &lt;==&gt;  (param2.data == orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  &lt;==&gt;  (param2.data == orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156879, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150055&quot; probability: 0.10%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.01%
	&quot;150984&quot; probability: 0.13%
	&quot;156879&quot; probability: 0.08%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.15%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.05%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.01%
	&quot;163174&quot; probability: 0.03%
	&quot;201119&quot; probability: 0.24%
	&quot;207953&quot; probability: 0.19%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156879, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 201119, 207953 }
	&quot;150055&quot; probability: 0.10%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.01%
	&quot;150984&quot; probability: 0.13%
	&quot;156879&quot; probability: 0.08%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.15%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.05%
	&quot;163055&quot; probability: 0.01%
	&quot;163100&quot; probability: 0.01%
	&quot;163174&quot; probability: 0.03%
	&quot;201119&quot; probability: 0.24%
	&quot;207953&quot; probability: 0.19%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 262952903, 276088278, 292943925, 326268647, 343145296, 386032425, 466087285, 542851752, 544093352, 574409426, 576134403, 636097238, 703113486, 742824203, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.13%
	&quot;343145296&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.08%
	&quot;466087285&quot; probability: 0.00%
	&quot;542851752&quot; probability: 0.03%
	&quot;544093352&quot; probability: 0.19%
	&quot;574409426&quot; probability: 0.24%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.01%
	&quot;703113486&quot; probability: 0.15%
	&quot;742824203&quot; probability: 0.01%
	&quot;856007530&quot; probability: 0.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 262952903, 276088278, 292943925, 326268647, 343145296, 386032425, 466087285, 542851752, 544093352, 574409426, 576134403, 636097238, 703113486, 742824203, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.13%
	&quot;343145296&quot; probability: 0.05%
	&quot;386032425&quot; probability: 0.08%
	&quot;466087285&quot; probability: 0.00%
	&quot;542851752&quot; probability: 0.03%
	&quot;544093352&quot; probability: 0.19%
	&quot;574409426&quot; probability: 0.24%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.01%
	&quot;703113486&quot; probability: 0.15%
	&quot;742824203&quot; probability: 0.01%
	&quot;856007530&quot; probability: 0.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1550023569, 1550023578, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.15%
	&quot;1548777269&quot; probability: 0.05%
	&quot;1548777273&quot; probability: 0.02%
	&quot;1548777274&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.10%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.13%
	&quot;1550023638&quot; probability: 0.08%
	&quot;1550024239&quot; probability: 0.24%
	&quot;1550024309&quot; probability: 0.19%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1550023569, 1550023578, 1550023579, 1550023638, 1550024239, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.15%
	&quot;1548777269&quot; probability: 0.05%
	&quot;1548777273&quot; probability: 0.02%
	&quot;1548777274&quot; probability: 0.03%
	&quot;1550023569&quot; probability: 0.10%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.13%
	&quot;1550023638&quot; probability: 0.08%
	&quot;1550024239&quot; probability: 0.24%
	&quot;1550024309&quot; probability: 0.19%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.99897785038)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &lt;= 0.99897785038)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.997023109931, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.997023109931&quot; probability: 4.94%
	&quot;0.998047271354&quot; probability: 95.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.997023109931, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.06%
	&quot;0.997023109931&quot; probability: 4.94%
	&quot;0.998047271354&quot; probability: 95.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0681580253423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0681580253423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0273742628493)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.0273742628493)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0304312055358)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.0304312055358)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.710633832892)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.x) &lt;= 0.710633832892)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.575820786534)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.y) &lt;= 0.575820786534)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024239, 1550024246, 1550024247, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.01%
	&quot;1548777245&quot; probability: 0.02%
	&quot;1548777246&quot; probability: 0.01%
	&quot;1548777247&quot; probability: 0.01%
	&quot;1548777248&quot; probability: 0.01%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.02%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.04%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777262&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.04%
	&quot;1548777271&quot; probability: 0.01%
	&quot;1548777272&quot; probability: 0.04%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.01%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.01%
	&quot;1550023580&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.05%
	&quot;1550023587&quot; probability: 0.01%
	&quot;1550023588&quot; probability: 0.01%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.03%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550024239&quot; probability: 0.07%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.10%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.00%
	&quot;1550024319&quot; probability: 0.11%
	&quot;1550024328&quot; probability: 0.01%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1548777256, 1548777257, 1548777258, 1548777259, 1548777261, 1548777262, 1548777266, 1548777271, 1548777272, 1548777276, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550023583, 1550023587, 1550023588, 1550023589, 1550023638, 1550023641, 1550024239, 1550024246, 1550024247, 1550024250, 1550024259, 1550024309, 1550024314, 1550024318, 1550024319, 1550024328 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.01%
	&quot;1548777245&quot; probability: 0.02%
	&quot;1548777246&quot; probability: 0.01%
	&quot;1548777247&quot; probability: 0.01%
	&quot;1548777248&quot; probability: 0.01%
	&quot;1548777249&quot; probability: 0.03%
	&quot;1548777251&quot; probability: 0.02%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.04%
	&quot;1548777256&quot; probability: 0.01%
	&quot;1548777257&quot; probability: 0.02%
	&quot;1548777258&quot; probability: 0.01%
	&quot;1548777259&quot; probability: 0.03%
	&quot;1548777261&quot; probability: 0.00%
	&quot;1548777262&quot; probability: 0.00%
	&quot;1548777266&quot; probability: 0.04%
	&quot;1548777271&quot; probability: 0.01%
	&quot;1548777272&quot; probability: 0.04%
	&quot;1548777276&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.01%
	&quot;1550023571&quot; probability: 0.03%
	&quot;1550023574&quot; probability: 0.01%
	&quot;1550023575&quot; probability: 0.03%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.01%
	&quot;1550023580&quot; probability: 0.01%
	&quot;1550023581&quot; probability: 0.02%
	&quot;1550023583&quot; probability: 0.05%
	&quot;1550023587&quot; probability: 0.01%
	&quot;1550023588&quot; probability: 0.01%
	&quot;1550023589&quot; probability: 0.01%
	&quot;1550023638&quot; probability: 0.03%
	&quot;1550023641&quot; probability: 0.04%
	&quot;1550024239&quot; probability: 0.07%
	&quot;1550024246&quot; probability: 0.02%
	&quot;1550024247&quot; probability: 0.04%
	&quot;1550024250&quot; probability: 0.10%
	&quot;1550024259&quot; probability: 0.00%
	&quot;1550024309&quot; probability: 0.01%
	&quot;1550024314&quot; probability: 0.04%
	&quot;1550024318&quot; probability: 0.00%
	&quot;1550024319&quot; probability: 0.11%
	&quot;1550024328&quot; probability: 0.01%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 29.33%
	&quot;0.943236931927&quot; probability: 38.90%
	&quot;0.997787593551&quot; probability: 31.77%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 29.33%
	&quot;0.943236931927&quot; probability: 38.90%
	&quot;0.997787593551&quot; probability: 31.77%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 1.70%
	&quot;-0.00509819561463&quot; probability: 30.07%
	&quot;5.12162687346E-4&quot; probability: 38.90%
	&quot;0.00187291365961&quot; probability: 29.33%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 1.70%
	&quot;-0.00509819561463&quot; probability: 30.07%
	&quot;5.12162687346E-4&quot; probability: 38.90%
	&quot;0.00187291365961&quot; probability: 29.33%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.23%
	&quot;0.00579792162242&quot; probability: 31.77%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 68.23%
	&quot;0.00579792162242&quot; probability: 31.77%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.77%
	&quot;0.33209650183&quot; probability: 38.90%
	&quot;0.336192066889&quot; probability: 29.33%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 31.77%
	&quot;0.33209650183&quot; probability: 38.90%
	&quot;0.336192066889&quot; probability: 29.33%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.23%
	&quot;-0.0768714144176&quot; probability: 31.77%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 68.23%
	&quot;-0.0768714144176&quot; probability: 31.77%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513694691606)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.0513694691606)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163321065972)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163321065972)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.77%
	&quot;0.0496432718844&quot; probability: 29.33%
	&quot;0.0511190919793&quot; probability: 38.90%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 31.77%
	&quot;0.0496432718844&quot; probability: 29.33%
	&quot;0.0511190919793&quot; probability: 38.90%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05243810671)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05243810671)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.77%
	&quot;1.05235948185&quot; probability: 68.23%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 31.77%
	&quot;1.05235948185&quot; probability: 68.23%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 27.27%	count:424.0 total:1555.0
	&quot;y&quot; probability: 72.73%	count:1131.0 total:1555.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 27.27%	count:424.0 total:1555.0
	&quot;y&quot; probability: 72.73%	count:1131.0 total:1555.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.header.stamp.secs &lt;= param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y != orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y != param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.x &lt;= 0.806160937883)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt; param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.y &lt;= 0.880686367206)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z != param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 29.27%
	&quot;0.943261993842&quot; probability: 38.81%
	&quot;0.997788345438&quot; probability: 31.92%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 29.27%
	&quot;0.943261993842&quot; probability: 38.81%
	&quot;0.997788345438&quot; probability: 31.92%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198029099406)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198029099406)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.56%
	&quot;-0.0051186549392&quot; probability: 31.30%
	&quot;-0.00410114939048&quot; probability: 0.06%
	&quot;2.89138628677E-4&quot; probability: 38.81%
	&quot;0.00181840508637&quot; probability: 29.27%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.56%
	&quot;-0.0051186549392&quot; probability: 31.30%
	&quot;-0.00410114939048&quot; probability: 0.06%
	&quot;2.89138628677E-4&quot; probability: 38.81%
	&quot;0.00181840508637&quot; probability: 29.27%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &lt;= 0.00676654475974)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448736317552)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 68.08%
	&quot;0.00581902761016&quot; probability: 31.92%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016 }
	&quot;-0.00397824813233&quot; probability: 68.08%
	&quot;0.00581902761016&quot; probability: 31.92%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z &gt;= 0.0658043961984)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 31.92%
	&quot;0.332025338306&quot; probability: 38.81%
	&quot;0.336205303253&quot; probability: 29.27%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 31.92%
	&quot;0.332025338306&quot; probability: 38.81%
	&quot;0.336205303253&quot; probability: 29.27%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.06%
	&quot;-0.130057847125&quot; probability: 68.02%
	&quot;-0.0768626611435&quot; probability: 31.92%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.06%
	&quot;-0.130057847125&quot; probability: 68.02%
	&quot;-0.0768626611435&quot; probability: 31.92%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y &gt;= -0.0163525149423)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 31.92%
	&quot;0.0496066092566&quot; probability: 29.27%
	&quot;0.0511671453035&quot; probability: 38.81%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 31.92%
	&quot;0.0496066092566&quot; probability: 29.27%
	&quot;0.0511671453035&quot; probability: 38.81%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 31.92%
	&quot;1.05235838107&quot; probability: 68.08%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 31.92%
	&quot;1.05235838107&quot; probability: 68.08%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 27.27%	count:424.0 total:1555.0
	&quot;y&quot; probability: 72.73%	count:1131.0 total:1555.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;nonsensical&quot; probability: 27.27%	count:424.0 total:1555.0
	&quot;y&quot; probability: 72.73%	count:1131.0 total:1555.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (return.linear.z == 0.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(param2.data one of { &quot;nonsensical&quot;, &quot;y&quot; })  ==&gt;  (return.linear.z == 0.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  &lt;==&gt;  (return.linear.z != 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  &lt;==&gt;  (return.linear.z != 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  &lt;==&gt;  (return.linear.z == -200.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  &lt;==&gt;  (return.linear.z == -200.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.300623723709925E15 * param1.transform.rotation.y + 4.267844335634095E15 * param1.transform.rotation.z + 2.0579482111137216E16 * param1.transform.rotation.w - 2.0823269494417996E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.300623723709925E15 * param1.transform.rotation.y + 4.267844335634095E15 * param1.transform.rotation.z + 2.0579482111137216E16 * param1.transform.rotation.w - 2.0823269494417996E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.364583601559069E15 * param1.transform.rotation.x + 8.0906431996273936E16 * param1.transform.rotation.w + 4.7323551162485267E17 * orig(param0.transform.rotation.x) - 9.09283394998248E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.364583601559069E15 * param1.transform.rotation.x + 8.0906431996273936E16 * param1.transform.rotation.w + 4.7323551162485267E17 * orig(param0.transform.rotation.x) - 9.09283394998248E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.364583601559069E15 * param1.transform.rotation.y - 9.3482427402324752E16 * param1.transform.rotation.w - 5.4628407496116416E17 * orig(param0.transform.rotation.x) + 1.05051259303133408E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.364583601559069E15 * param1.transform.rotation.y - 9.3482427402324752E16 * param1.transform.rotation.w - 5.4628407496116416E17 * orig(param0.transform.rotation.x) + 1.05051259303133408E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.40758620161763E14 * param0.transform.rotation.w + 5.5093407143406184E16 * param1.transform.rotation.w - 4.2096371044221304E16 * orig(param0.transform.rotation.z) - 5.3808270266745168E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.40758620161763E14 * param0.transform.rotation.w + 5.5093407143406184E16 * param1.transform.rotation.w - 4.2096371044221304E16 * orig(param0.transform.rotation.z) - 5.3808270266745168E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.40758620161763E14 * param0.transform.rotation.z - 6.1145855953717504E17 * param1.transform.rotation.w + 4.671001090160073E17 * orig(param0.transform.rotation.z) + 5.9563346429483098E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.40758620161763E14 * param0.transform.rotation.z - 6.1145855953717504E17 * param1.transform.rotation.w + 4.671001090160073E17 * orig(param0.transform.rotation.z) + 5.9563346429483098E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.64180190601215E14 * param0.transform.rotation.w + 6.426069021762052E16 * param1.transform.rotation.w - 3.3677096835377043E17 * orig(param0.transform.rotation.y) - 6.7290264124631976E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.64180190601215E14 * param0.transform.rotation.w + 6.426069021762052E16 * param1.transform.rotation.w - 3.3677096835377043E17 * orig(param0.transform.rotation.y) - 6.7290264124631976E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.64180190601215E14 * param0.transform.rotation.z - 7.1320237960693286E17 * param1.transform.rotation.w + 3.7368008721280584E18 * orig(param0.transform.rotation.y) + 7.4499273890199475E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.64180190601215E14 * param0.transform.rotation.z - 7.1320237960693286E17 * param1.transform.rotation.w + 3.7368008721280584E18 * orig(param0.transform.rotation.y) + 7.4499273890199475E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.648232233674913E15 * param0.transform.rotation.w + 3.3677096835377043E17 * param1.transform.rotation.z + 1.64208595203866957E18 * param1.transform.rotation.w - 1.66233200220495411E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.648232233674913E15 * param0.transform.rotation.w + 3.3677096835377043E17 * param1.transform.rotation.z + 1.64208595203866957E18 * param1.transform.rotation.w - 1.66233200220495411E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (1.648232233674913E15 * param0.transform.rotation.z - 3.7368008721280584E18 * param1.transform.rotation.z - 1.822222083562312E19 * param1.transform.rotation.w + 1.842854186666001E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (1.648232233674913E15 * param0.transform.rotation.z - 3.7368008721280584E18 * param1.transform.rotation.z - 1.822222083562312E19 * param1.transform.rotation.w + 1.842854186666001E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.139984278590601E15 * param0.transform.rotation.z + 1.4762664721173336E16 * param0.transform.rotation.w - 1.66140603789593952E17 * orig(param0.transform.rotation.w) + 1.51196100477232768E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.139984278590601E15 * param0.transform.rotation.z + 1.4762664721173336E16 * param0.transform.rotation.w - 1.66140603789593952E17 * orig(param0.transform.rotation.w) + 1.51196100477232768E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.435265217930763E15 * param1.transform.rotation.x + 1.44387357082627008E17 * param1.transform.rotation.w + 2.9577219476553292E16 * orig(param1.transform.rotation.z) - 1.46008275404693408E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.435265217930763E15 * param1.transform.rotation.x + 1.44387357082627008E17 * param1.transform.rotation.w + 2.9577219476553292E16 * orig(param1.transform.rotation.z) - 1.46008275404693408E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.435265217930763E15 * param1.transform.rotation.y - 1.66830748721088608E17 * param1.transform.rotation.w - 3.414275468507276E16 * orig(param1.transform.rotation.z) + 1.68701772248687328E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.435265217930763E15 * param1.transform.rotation.y - 1.66830748721088608E17 * param1.transform.rotation.w - 3.414275468507276E16 * orig(param1.transform.rotation.z) + 1.68701772248687328E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.531121442212563E15 * param0.transform.rotation.w + 9.9068962160161306E17 * param1.transform.rotation.w + 1.0776670987320654E19 * orig(param1.transform.rotation.x) - 9.3621654186262016E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.531121442212563E15 * param0.transform.rotation.w + 9.9068962160161306E17 * param1.transform.rotation.w + 1.0776670987320654E19 * orig(param1.transform.rotation.x) - 9.3621654186262016E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.531121442212563E15 * param0.transform.rotation.z - 1.099524753290652E19 * param1.transform.rotation.w - 1.1957762790809787E20 * orig(param1.transform.rotation.x) + 1.0362669430491558E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.531121442212563E15 * param0.transform.rotation.z - 1.099524753290652E19 * param1.transform.rotation.w - 1.1957762790809787E20 * orig(param1.transform.rotation.x) + 1.0362669430491558E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.650107733731791E15 * param0.transform.rotation.x - 6.1862678130996756E18 * param1.transform.rotation.w + 3.2420414473037447E19 * orig(param0.transform.rotation.y) + 6.4620491913547489E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.650107733731791E15 * param0.transform.rotation.x - 6.1862678130996756E18 * param1.transform.rotation.w + 3.2420414473037447E19 * orig(param0.transform.rotation.y) + 6.4620491913547489E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.939842277431993E15 * param1.transform.rotation.x + 1.74303830873440768E17 * param1.transform.rotation.w + 1.89294204649941069E18 * orig(param1.transform.rotation.x) - 1.64275641771098848E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.939842277431993E15 * param1.transform.rotation.x + 1.74303830873440768E17 * param1.transform.rotation.w + 1.89294204649941069E18 * orig(param1.transform.rotation.x) - 1.64275641771098848E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.939842277431993E15 * param1.transform.rotation.y - 2.01397402079527392E17 * param1.transform.rotation.w - 2.18513629984465664E18 * orig(param1.transform.rotation.x) + 1.89821143072402336E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.939842277431993E15 * param1.transform.rotation.y - 2.01397402079527392E17 * param1.transform.rotation.w - 2.18513629984465664E18 * orig(param1.transform.rotation.x) + 1.89821143072402336E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.953753567452041E15 * param0.transform.rotation.w + 1.15610928627964698E18 * param1.transform.rotation.w - 8.621336789856523E19 * orig(param0.transform.rotation.w) + 8.49919860684164E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.953753567452041E15 * param0.transform.rotation.w + 1.15610928627964698E18 * param1.transform.rotation.w - 8.621336789856523E19 * orig(param0.transform.rotation.w) + 8.49919860684164E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (2.953753567452041E15 * param0.transform.rotation.z - 1.2831170833490754E19 * param1.transform.rotation.w + 9.56621023264783E20 * orig(param0.transform.rotation.w) - 9.430984362993444E20 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (2.953753567452041E15 * param0.transform.rotation.z - 1.2831170833490754E19 * param1.transform.rotation.w + 9.56621023264783E20 * orig(param0.transform.rotation.w) - 9.430984362993444E20 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.172848007500541E15 * param0.transform.rotation.x - 7.4065243668484495E18 * param1.transform.rotation.w - 1.51970692842363034E18 * orig(param1.transform.rotation.z) + 7.4903812821338491E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.172848007500541E15 * param0.transform.rotation.x - 7.4065243668484495E18 * param1.transform.rotation.w - 1.51970692842363034E18 * orig(param1.transform.rotation.z) + 7.4903812821338491E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.172848007500541E15 * param0.transform.rotation.y - 2.0716433558318805E19 * param1.transform.rotation.w - 4.2504853791609902E18 * orig(param1.transform.rotation.z) + 2.095122508887775E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.172848007500541E15 * param0.transform.rotation.y - 2.0716433558318805E19 * param1.transform.rotation.w - 4.2504853791609902E18 * orig(param1.transform.rotation.z) + 2.095122508887775E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.273186454696183E15 * param0.transform.rotation.x + 7.5985346421181517E17 * param1.transform.rotation.z + 3.7049237086614815E18 * param1.transform.rotation.w - 3.7469928078048614E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.273186454696183E15 * param0.transform.rotation.x + 7.5985346421181517E17 * param1.transform.rotation.z + 3.7049237086614815E18 * param1.transform.rotation.w - 3.7469928078048614E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.273186454696183E15 * param0.transform.rotation.y + 2.1252426895804951E18 * param1.transform.rotation.z + 1.0361267416686158E19 * param1.transform.rotation.w - 1.047867182701483E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.273186454696183E15 * param0.transform.rotation.y + 2.1252426895804951E18 * param1.transform.rotation.z + 1.0361267416686158E19 * param1.transform.rotation.w - 1.047867182701483E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.430720260945045E15 * param1.transform.rotation.x + 2.03408083735772736E17 * param1.transform.rotation.w - 1.5143536371995286E19 * orig(param0.transform.rotation.w) + 1.4929199728934234E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.430720260945045E15 * param1.transform.rotation.x + 2.03408083735772736E17 * param1.transform.rotation.w - 1.5143536371995286E19 * orig(param0.transform.rotation.w) + 1.4929199728934234E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.430720260945045E15 * param1.transform.rotation.y - 2.3502558389611216E17 * param1.transform.rotation.w + 1.7481090398757253E19 * orig(param0.transform.rotation.w) - 1.7233449464921287E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.430720260945045E15 * param1.transform.rotation.y - 2.3502558389611216E17 * param1.transform.rotation.w + 1.7481090398757253E19 * orig(param0.transform.rotation.w) - 1.7233449464921287E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.483612617023773E15 * param1.transform.rotation.z + 6.5687893879568424E16 * param1.transform.rotation.w + 9.993018539932668E15 * orig(param1.transform.rotation.z) - 6.6432358654067368E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.483612617023773E15 * param1.transform.rotation.z + 6.5687893879568424E16 * param1.transform.rotation.w + 9.993018539932668E15 * orig(param1.transform.rotation.z) - 6.6432358654067368E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.586014165572715E15 * param0.transform.translation.y + 1.48898539408780128E17 * param1.transform.translation.z - 7.7986147777183373E17 * orig(param0.transform.translation.z) + 2.893652682758743E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.586014165572715E15 * param0.transform.translation.y + 1.48898539408780128E17 * param1.transform.translation.z - 7.7986147777183373E17 * orig(param0.transform.translation.z) + 2.893652682758743E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.586014165572715E15 * param0.transform.translation.z - 2.1557182876590832E17 * param1.transform.translation.z + 1.19639274035940736E18 * orig(param0.transform.translation.z) - 4.5380750677673491E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.586014165572715E15 * param0.transform.translation.z - 2.1557182876590832E17 * param1.transform.translation.z + 1.19639274035940736E18 * orig(param0.transform.translation.z) - 4.5380750677673491E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.830249224452705E15 * param0.transform.rotation.x - 8.9411261254708869E18 * param1.transform.rotation.w - 9.726124341911234E19 * orig(param1.transform.rotation.x) + 8.4265589492984904E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.830249224452705E15 * param0.transform.rotation.x - 8.9411261254708869E18 * param1.transform.rotation.w - 9.726124341911234E19 * orig(param1.transform.rotation.x) + 8.4265589492984904E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (3.830249224452705E15 * param0.transform.rotation.y - 2.5008794427781317E19 * param1.transform.rotation.w - 2.7203106426630337E20 * orig(param1.transform.rotation.x) + 2.356989893870726E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (3.830249224452705E15 * param0.transform.rotation.y - 2.5008794427781317E19 * param1.transform.rotation.w - 2.7203106426630337E20 * orig(param1.transform.rotation.x) + 2.356989893870726E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (4.44470722264233E14 * param0.transform.rotation.x - 1.03754835624605952E18 * param1.transform.rotation.w - 6.0788277136945213E18 * orig(param0.transform.rotation.x) + 1.16636244993361254E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (4.44470722264233E14 * param0.transform.rotation.x - 1.03754835624605952E18 * param1.transform.rotation.w - 6.0788277136945213E18 * orig(param0.transform.rotation.x) + 1.16636244993361254E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (4.44470722264233E14 * param0.transform.rotation.y - 2.9020766720113311E18 * param1.transform.rotation.w - 1.700194151664396E19 * orig(param0.transform.rotation.x) + 3.2623934446748564E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (4.44470722264233E14 * param0.transform.rotation.y - 2.9020766720113311E18 * param1.transform.rotation.w - 1.700194151664396E19 * orig(param0.transform.rotation.x) + 3.2623934446748564E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (4.699472267763797E15 * param0.transform.rotation.w + 1.83938957848202854E18 * param1.transform.rotation.w + 1.0776670987320654E19 * orig(param0.transform.rotation.x) - 2.07247283272916736E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (4.699472267763797E15 * param0.transform.rotation.w + 1.83938957848202854E18 * param1.transform.rotation.w + 1.0776670987320654E19 * orig(param0.transform.rotation.x) - 2.07247283272916736E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (4.699472267763797E15 * param0.transform.rotation.z - 2.0414611482617717E19 * param1.transform.rotation.w - 1.1957762790809787E20 * orig(param0.transform.rotation.x) + 2.294863776242622E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (4.699472267763797E15 * param0.transform.rotation.z - 2.0414611482617717E19 * param1.transform.rotation.w - 1.1957762790809787E20 * orig(param0.transform.rotation.x) + 2.294863776242622E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (4.937883944733465E15 * param0.transform.rotation.w + 1.9327047272944937E18 * param1.transform.rotation.w - 1.0776670987320654E19 * orig(param1.transform.rotation.y) - 1.86952287368889498E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (4.937883944733465E15 * param0.transform.rotation.w + 1.9327047272944937E18 * param1.transform.rotation.w - 1.0776670987320654E19 * orig(param1.transform.rotation.y) - 1.86952287368889498E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (4.937883944733465E15 * param0.transform.rotation.z - 2.1450277080995873E19 * param1.transform.rotation.w + 1.1957762790809787E20 * orig(param1.transform.rotation.y) + 2.069430317066573E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (4.937883944733465E15 * param0.transform.rotation.z - 2.1450277080995873E19 * param1.transform.rotation.w + 1.1957762790809787E20 * orig(param1.transform.rotation.y) + 2.069430317066573E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (5.374379854950155E15 * param0.transform.translation.y + 2.231550890993888E17 * param1.transform.translation.z + 7.7986147777183373E17 * orig(param0.transform.translation.y) - 6.7900746682201485E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (5.374379854950155E15 * param0.transform.translation.y + 2.231550890993888E17 * param1.transform.translation.z + 7.7986147777183373E17 * orig(param0.transform.translation.y) - 6.7900746682201485E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (5.374379854950155E15 * param0.transform.translation.z - 3.230787276126752E17 * param1.transform.translation.z - 1.19639274035940736E18 * orig(param0.transform.translation.y) + 1.02685012558351322E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (5.374379854950155E15 * param0.transform.translation.z - 3.230787276126752E17 * param1.transform.translation.z - 1.19639274035940736E18 * orig(param0.transform.translation.y) + 1.02685012558351322E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (5.735244362313377E15 * param1.transform.rotation.x + 3.4004377412374662E17 * param1.transform.rotation.w - 1.89294204649941069E18 * orig(param1.transform.rotation.y) - 3.2804857569849638E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (5.735244362313377E15 * param1.transform.rotation.x + 3.4004377412374662E17 * param1.transform.rotation.w - 1.89294204649941069E18 * orig(param1.transform.rotation.y) - 3.2804857569849638E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (5.735244362313377E15 * param1.transform.rotation.y - 3.9289975646929568E17 * param1.transform.rotation.w + 2.18513629984465664E18 * orig(param1.transform.rotation.y) + 3.7905274665067821E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (5.735244362313377E15 * param1.transform.rotation.y - 3.9289975646929568E17 * param1.transform.rotation.w + 2.18513629984465664E18 * orig(param1.transform.rotation.y) + 3.7905274665067821E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (6.102134586154061E15 * param1.transform.rotation.x + 3.6179676815895974E17 * param1.transform.rotation.w - 1.89294204649941069E18 * orig(param0.transform.rotation.y) - 3.7787099108303482E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (6.102134586154061E15 * param1.transform.rotation.x + 3.6179676815895974E17 * param1.transform.rotation.w - 1.89294204649941069E18 * orig(param0.transform.rotation.y) - 3.7787099108303482E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (6.102134586154061E15 * param1.transform.rotation.y - 4.180340089076391E17 * param1.transform.rotation.w + 2.18513629984465664E18 * orig(param0.transform.rotation.y) + 4.3658919716042918E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (6.102134586154061E15 * param1.transform.rotation.y - 4.180340089076391E17 * param1.transform.rotation.w + 2.18513629984465664E18 * orig(param0.transform.rotation.y) + 4.3658919716042918E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (6.53952253042137E14 * param1.transform.rotation.x + 3.877295860005504E16 * param1.transform.rotation.w - 2.9577219476553292E16 * orig(param0.transform.rotation.z) - 3.7767711327171496E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (6.53952253042137E14 * param1.transform.rotation.x + 3.877295860005504E16 * param1.transform.rotation.w - 2.9577219476553292E16 * orig(param0.transform.rotation.z) - 3.7767711327171496E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (6.53952253042137E14 * param1.transform.rotation.y - 4.4799779177876936E16 * param1.transform.rotation.w + 3.414275468507276E16 * orig(param0.transform.rotation.z) + 4.3639335364353936E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (6.53952253042137E14 * param1.transform.rotation.y - 4.4799779177876936E16 * param1.transform.rotation.w + 3.414275468507276E16 * orig(param0.transform.rotation.z) + 4.3639335364353936E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (6.816148279170225E15 * param0.transform.rotation.x - 1.5911246992728123E19 * param1.transform.rotation.w + 1.2157655427389043E19 * orig(param0.transform.rotation.z) + 1.5499272094684539E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (6.816148279170225E15 * param0.transform.rotation.x - 1.5911246992728123E19 * param1.transform.rotation.w + 1.2157655427389043E19 * orig(param0.transform.rotation.z) + 1.5499272094684539E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (6.816148279170225E15 * param0.transform.rotation.y - 4.450458471860945E19 * param1.transform.rotation.w + 3.400388303328792E19 * orig(param0.transform.rotation.z) + 4.335286710685526E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (6.816148279170225E15 * param0.transform.rotation.y - 4.450458471860945E19 * param1.transform.rotation.w + 3.400388303328792E19 * orig(param0.transform.rotation.z) + 4.335286710685526E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (7.472310824098531E15 * param0.transform.rotation.x - 1.7442957262534978E19 * param1.transform.rotation.w + 9.726124341911234E19 * orig(param1.transform.rotation.y) + 1.6827980380565998E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (7.472310824098531E15 * param0.transform.rotation.x - 1.7442957262534978E19 * param1.transform.rotation.w + 9.726124341911234E19 * orig(param1.transform.rotation.y) + 1.6827980380565998E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (7.472310824098531E15 * param0.transform.rotation.y - 4.878885794358911E19 * param1.transform.rotation.w + 2.7203106426630337E20 * orig(param1.transform.rotation.y) + 4.706941374852304E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (7.472310824098531E15 * param0.transform.rotation.y - 4.878885794358911E19 * param1.transform.rotation.w + 2.7203106426630337E20 * orig(param1.transform.rotation.y) + 4.706941374852304E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (7.950323201195373E15 * param0.transform.rotation.y - 5.1909937688591385E19 * param1.transform.rotation.w + 2.7203106426630337E20 * orig(param0.transform.rotation.y) + 5.422457518940552E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (7.950323201195373E15 * param0.transform.rotation.y - 5.1909937688591385E19 * param1.transform.rotation.w + 2.7203106426630337E20 * orig(param0.transform.rotation.y) + 5.422457518940552E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (8.204186334680109E15 * param1.transform.rotation.z + 1.54700243846600672E17 * param1.transform.rotation.w - 6.3955318655569075E17 * orig(param1.transform.rotation.y) - 1.51111044401866176E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (8.204186334680109E15 * param1.transform.rotation.z + 1.54700243846600672E17 * param1.transform.rotation.w - 6.3955318655569075E17 * orig(param1.transform.rotation.y) - 1.51111044401866176E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (8.386779192744083E15 * param0.transform.rotation.w + 3.2826141671230623E18 * param1.transform.rotation.w + 6.7354193670754086E17 * orig(param1.transform.rotation.z) - 3.3282015689732285E18 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (8.386779192744083E15 * param0.transform.rotation.w + 3.2826141671230623E18 * param1.transform.rotation.w + 6.7354193670754086E17 * orig(param1.transform.rotation.z) - 3.3282015689732285E18 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (8.386779192744083E15 * param0.transform.rotation.z - 3.6432354327274885E19 * param1.transform.rotation.w - 7.4736017442561167E18 * orig(param1.transform.rotation.z) + 3.6844928757138706E19 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (8.386779192744083E15 * param0.transform.rotation.z - 3.6432354327274885E19 * param1.transform.rotation.w - 7.4736017442561167E18 * orig(param1.transform.rotation.z) + 3.6844928757138706E19 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (8.729017635773501E15 * param1.transform.rotation.z + 1.64596597603739232E17 * param1.transform.rotation.w - 6.3955318655569075E17 * orig(param0.transform.rotation.y) - 1.70520641065162688E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (8.729017635773501E15 * param1.transform.rotation.z + 1.64596597603739232E17 * param1.transform.rotation.w - 6.3955318655569075E17 * orig(param0.transform.rotation.y) - 1.70520641065162688E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (8.939604494889721E15 * param0.transform.rotation.x - 2.086812805557228E19 * param1.transform.rotation.w + 1.5561798947057975E21 * orig(param0.transform.rotation.w) - 1.5341871130766077E21 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (8.939604494889721E15 * param0.transform.rotation.x - 2.086812805557228E19 * param1.transform.rotation.w + 1.5561798947057975E21 * orig(param0.transform.rotation.w) - 1.5341871130766077E21 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (8.939604494889721E15 * param0.transform.rotation.y - 5.836923865190837E19 * param1.transform.rotation.w + 4.352497028260854E21 * orig(param0.transform.rotation.w) - 4.290981525681282E21 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (8.939604494889721E15 * param0.transform.rotation.y - 5.836923865190837E19 * param1.transform.rotation.w + 4.352497028260854E21 * orig(param0.transform.rotation.w) - 4.290981525681282E21 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (9.35469493365663E14 * param1.transform.rotation.z + 1.763945293672645E16 * param1.transform.rotation.w - 9.993018539932668E15 * orig(param0.transform.rotation.z) - 1.73526704851967E16 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (9.35469493365663E14 * param1.transform.rotation.z + 1.763945293672645E16 * param1.transform.rotation.w - 9.993018539932668E15 * orig(param0.transform.rotation.z) - 1.73526704851967E16 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (9.81535835871776E16 * param1.transform.rotation.z - 1.648232233674913E15 * param1.transform.rotation.x + 4.7843173865057242E17 * param1.transform.rotation.w - 4.8386143363704179E17 == 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (9.81535835871776E16 * param1.transform.rotation.z - 1.648232233674913E15 * param1.transform.rotation.x + 4.7843173865057242E17 * param1.transform.rotation.w - 4.8386143363704179E17 == 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.seq) one of { 164991, 207953 }
	&quot;164991&quot; probability: 0.20%
	&quot;207953&quot; probability: 0.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.seq) one of { 164991, 207953 }
	&quot;164991&quot; probability: 0.20%
	&quot;207953&quot; probability: 0.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.seq) one of { 164991, 207953 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.seq) one of { 164991, 207953 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }
	&quot;132642966&quot; probability: 0.20%
	&quot;544093352&quot; probability: 0.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }
	&quot;132642966&quot; probability: 0.20%
	&quot;544093352&quot; probability: 0.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024309&quot; probability: 0.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024309&quot; probability: 0.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) == 0.999247471565)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) == 0.999247471565)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.998515316987, 0.999247471565 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.w) one of { 0.998515316987, 0.999247471565 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }
	&quot;0.0215702553893&quot; probability: 20.00%
	&quot;0.0308892186852&quot; probability: 80.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }
	&quot;0.0215702553893&quot; probability: 20.00%
	&quot;0.0308892186852&quot; probability: 80.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }
	&quot;-0.0193489475652&quot; probability: 80.00%
	&quot;-0.00893083024171&quot; probability: 20.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }
	&quot;-0.0193489475652&quot; probability: 80.00%
	&quot;-0.00893083024171&quot; probability: 20.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }
	&quot;-0.0404800709009&quot; probability: 80.00%
	&quot;0.0309750693943&quot; probability: 20.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }
	&quot;-0.0404800709009&quot; probability: 80.00%
	&quot;0.0309750693943&quot; probability: 20.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }
	&quot;-0.351829913918&quot; probability: 80.00%
	&quot;0.899386908127&quot; probability: 20.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }
	&quot;-0.351829913918&quot; probability: 80.00%
	&quot;0.899386908127&quot; probability: 20.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }
	&quot;0.575820786534&quot; probability: 80.00%
	&quot;0.785447591116&quot; probability: 20.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }
	&quot;0.575820786534&quot; probability: 80.00%
	&quot;0.785447591116&quot; probability: 20.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) &lt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) &lt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }
	&quot;0.427915697329&quot; probability: 20.00%
	&quot;0.567787591576&quot; probability: 80.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }
	&quot;0.427915697329&quot; probability: 20.00%
	&quot;0.567787591576&quot; probability: 80.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.seq) one of { 76129, 242321 }
	&quot;76129&quot; probability: 0.20%
	&quot;242321&quot; probability: 0.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.seq) one of { 76129, 242321 }
	&quot;76129&quot; probability: 0.20%
	&quot;242321&quot; probability: 0.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.seq) one of { 76129, 242321 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.seq) one of { 76129, 242321 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }
	&quot;244222225&quot; probability: 0.80%
	&quot;682851647&quot; probability: 0.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }
	&quot;244222225&quot; probability: 0.80%
	&quot;682851647&quot; probability: 0.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024338&quot; probability: 0.80%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024338&quot; probability: 0.80%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }
	&quot;0.943231651189&quot; probability: 80.00%
	&quot;0.997787757328&quot; probability: 20.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }
	&quot;0.943231651189&quot; probability: 80.00%
	&quot;0.997787757328&quot; probability: 20.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }
	&quot;-0.00508609401294&quot; probability: 20.00%
	&quot;-6.69287804429E-5&quot; probability: 80.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }
	&quot;-0.00508609401294&quot; probability: 20.00%
	&quot;-6.69287804429E-5&quot; probability: 80.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }
	&quot;-0.00386769120191&quot; probability: 80.00%
	&quot;0.00592403787287&quot; probability: 20.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }
	&quot;-0.00386769120191&quot; probability: 80.00%
	&quot;0.00592403787287&quot; probability: 20.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }
	&quot;0.0660199117626&quot; probability: 20.00%
	&quot;0.332113066108&quot; probability: 80.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }
	&quot;0.0660199117626&quot; probability: 20.00%
	&quot;0.332113066108&quot; probability: 80.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }
	&quot;-0.130451319676&quot; probability: 80.00%
	&quot;-0.0775279037996&quot; probability: 20.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }
	&quot;-0.130451319676&quot; probability: 80.00%
	&quot;-0.0775279037996&quot; probability: 20.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }
	&quot;-0.0162844349103&quot; probability: 20.00%
	&quot;0.0513646987144&quot; probability: 80.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }
	&quot;-0.0162844349103&quot; probability: 20.00%
	&quot;0.0513646987144&quot; probability: 80.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }
	&quot;0.27657076897&quot; probability: 20.00%
	&quot;1.05241753805&quot; probability: 80.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }
	&quot;0.27657076897&quot; probability: 20.00%
	&quot;1.05241753805&quot; probability: 80.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (orig(param2.data) == &quot;y&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (orig(param2.data) == &quot;y&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.seq &gt; orig(param0.header.seq))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.seq one of { 165188, 165192, 165198, 165202, 211191, 211197, 211202, 211207 }
	&quot;165188&quot; probability: 0.13%
	&quot;165192&quot; probability: 0.13%
	&quot;165198&quot; probability: 0.13%
	&quot;165202&quot; probability: 0.13%
	&quot;211191&quot; probability: 0.13%
	&quot;211197&quot; probability: 0.13%
	&quot;211202&quot; probability: 0.13%
	&quot;211207&quot; probability: 0.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.seq one of { 165188, 165192, 165198, 165202, 211191, 211197, 211202, 211207 }
	&quot;165188&quot; probability: 0.13%
	&quot;165192&quot; probability: 0.13%
	&quot;165198&quot; probability: 0.13%
	&quot;165202&quot; probability: 0.13%
	&quot;211191&quot; probability: 0.13%
	&quot;211197&quot; probability: 0.13%
	&quot;211202&quot; probability: 0.13%
	&quot;211207&quot; probability: 0.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.nsecs != orig(param0.header.stamp.nsecs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.nsecs one of { 34165072, 122652957, 162722950, 222669032, 262920725, 874062912, 934186021, 984096010 }
	&quot;34165072&quot; probability: 0.13%
	&quot;122652957&quot; probability: 0.13%
	&quot;162722950&quot; probability: 0.13%
	&quot;222669032&quot; probability: 0.13%
	&quot;262920725&quot; probability: 0.13%
	&quot;874062912&quot; probability: 0.13%
	&quot;934186021&quot; probability: 0.13%
	&quot;984096010&quot; probability: 0.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.nsecs one of { 34165072, 122652957, 162722950, 222669032, 262920725, 874062912, 934186021, 984096010 }
	&quot;34165072&quot; probability: 0.13%
	&quot;122652957&quot; probability: 0.13%
	&quot;162722950&quot; probability: 0.13%
	&quot;222669032&quot; probability: 0.13%
	&quot;262920725&quot; probability: 0.13%
	&quot;874062912&quot; probability: 0.13%
	&quot;934186021&quot; probability: 0.13%
	&quot;984096010&quot; probability: 0.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs == param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs &gt; orig(param0.header.stamp.secs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs &gt; orig(param0.header.stamp.secs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs &gt; orig(param1.header.stamp.secs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs &gt; orig(param1.header.stamp.secs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.20%
	&quot;1550024343&quot; probability: 0.60%
	&quot;1550024344&quot; probability: 0.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.20%
	&quot;1550024343&quot; probability: 0.60%
	&quot;1550024344&quot; probability: 0.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w != orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w != orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w == 0.999023981715)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w == 0.999023981715)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w &gt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w one of { 0.998892462987, 0.999023981715, 0.999153532391 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.w one of { 0.998892462987, 0.999023981715, 0.999153532391 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x != orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0313963244255)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &lt;= 0.0313963244255)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt; param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0279165908721)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x &gt;= 0.0279165908721)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x one of { 0.0284166802147, 0.0296878090138, 0.0313637544164 }
	&quot;0.0284166802147&quot; probability: 25.00%
	&quot;0.0296878090138&quot; probability: 50.00%
	&quot;0.0313637544164&quot; probability: 25.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.x one of { 0.0284166802147, 0.0296878090138, 0.0313637544164 }
	&quot;0.0284166802147&quot; probability: 25.00%
	&quot;0.0296878090138&quot; probability: 50.00%
	&quot;0.0313637544164&quot; probability: 25.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; param0.transform.rotation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0078291594107)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &lt;= 0.0078291594107)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &gt;= -0.014634604382)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y &gt;= -0.014634604382)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y one of { -0.0139821081584, -0.00898842824747, -4.13960285797E-4, 0.0028138179687, 0.0078291594107 }
	&quot;-0.0139821081584&quot; probability: 37.50%
	&quot;-0.00898842824747&quot; probability: 12.50%
	&quot;-4.13960285797E-4&quot; probability: 25.00%
	&quot;0.0028138179687&quot; probability: 12.50%
	&quot;0.0078291594107&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.y one of { -0.0139821081584, -0.00898842824747, -4.13960285797E-4, 0.0028138179687, 0.0078291594107 }
	&quot;-0.0139821081584&quot; probability: 37.50%
	&quot;-0.00898842824747&quot; probability: 12.50%
	&quot;-4.13960285797E-4&quot; probability: 25.00%
	&quot;0.0028138179687&quot; probability: 12.50%
	&quot;0.0078291594107&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z != orig(param0.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; orig(param1.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt; param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt;= 0.0341886905195)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &lt;= 0.0341886905195)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &gt;= -0.024745708937)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z &gt;= -0.024745708937)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z one of { -0.0244541158749, -0.0212296424222, 0.0325852786301, 0.0341886905195 }
	&quot;-0.0244541158749&quot; probability: 37.50%
	&quot;-0.0212296424222&quot; probability: 12.50%
	&quot;0.0325852786301&quot; probability: 37.50%
	&quot;0.0341886905195&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.rotation.z one of { -0.0244541158749, -0.0212296424222, 0.0325852786301, 0.0341886905195 }
	&quot;-0.0244541158749&quot; probability: 37.50%
	&quot;-0.0212296424222&quot; probability: 12.50%
	&quot;0.0325852786301&quot; probability: 37.50%
	&quot;0.0341886905195&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &lt;= 0.919518239176)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &lt;= 0.919518239176)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param1.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param1.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; param1.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt;= 0.915267991825)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x &gt;= 0.915267991825)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x one of { 0.915267991825, 0.916904812814, 0.918392004657, 0.919518239176 }
	&quot;0.915267991825&quot; probability: 37.50%
	&quot;0.916904812814&quot; probability: 12.50%
	&quot;0.918392004657&quot; probability: 25.00%
	&quot;0.919518239176&quot; probability: 25.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.x one of { 0.915267991825, 0.916904812814, 0.918392004657, 0.919518239176 }
	&quot;0.915267991825&quot; probability: 37.50%
	&quot;0.916904812814&quot; probability: 12.50%
	&quot;0.918392004657&quot; probability: 25.00%
	&quot;0.919518239176&quot; probability: 25.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y != orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y &lt; orig(param0.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y &lt;= 0.877361523941)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y &lt;= 0.877361523941)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y &gt;= -0.918759705995)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y &gt;= -0.918759705995)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y one of { -0.918759705995, -0.917240518129, -0.91534743942, 0.873754738765, 0.874815382939, 0.876517045517 }
	&quot;-0.918759705995&quot; probability: 12.50%
	&quot;-0.917240518129&quot; probability: 12.50%
	&quot;-0.91534743942&quot; probability: 25.00%
	&quot;0.873754738765&quot; probability: 12.50%
	&quot;0.874815382939&quot; probability: 12.50%
	&quot;0.876517045517&quot; probability: 25.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.y one of { -0.918759705995, -0.917240518129, -0.91534743942, 0.873754738765, 0.874815382939, 0.876517045517 }
	&quot;-0.918759705995&quot; probability: 12.50%
	&quot;-0.917240518129&quot; probability: 12.50%
	&quot;-0.91534743942&quot; probability: 25.00%
	&quot;0.873754738765&quot; probability: 12.50%
	&quot;0.874815382939&quot; probability: 12.50%
	&quot;0.876517045517&quot; probability: 25.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z != param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt; param0.transform.translation.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt; param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt;= 0.425101172047)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &lt;= 0.425101172047)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &gt; orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &gt; param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &gt;= 0.389216029352)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z &gt;= 0.389216029352)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z one of { 0.389223377165, 0.419879352683, 0.421361366973, 0.423668620137, 0.425101172047 }
	&quot;0.389223377165&quot; probability: 50.00%
	&quot;0.419879352683&quot; probability: 12.50%
	&quot;0.421361366973&quot; probability: 12.50%
	&quot;0.423668620137&quot; probability: 12.50%
	&quot;0.425101172047&quot; probability: 12.50%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param0.transform.translation.z one of { 0.389223377165, 0.419879352683, 0.421361366973, 0.423668620137, 0.425101172047 }
	&quot;0.389223377165&quot; probability: 50.00%
	&quot;0.419879352683&quot; probability: 12.50%
	&quot;0.421361366973&quot; probability: 12.50%
	&quot;0.423668620137&quot; probability: 12.50%
	&quot;0.425101172047&quot; probability: 12.50%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.header.seq one of { 76273, 76279, 76283, 76287, 242857, 242860, 242866, 242871 }
	&quot;76273&quot; probability: 0.13%
	&quot;76279&quot; probability: 0.13%
	&quot;76283&quot; probability: 0.13%
	&quot;76287&quot; probability: 0.13%
	&quot;242857&quot; probability: 0.13%
	&quot;242860&quot; probability: 0.13%
	&quot;242866&quot; probability: 0.13%
	&quot;242871&quot; probability: 0.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.header.seq one of { 76273, 76279, 76283, 76287, 242857, 242860, 242866, 242871 }
	&quot;76273&quot; probability: 0.13%
	&quot;76279&quot; probability: 0.13%
	&quot;76283&quot; probability: 0.13%
	&quot;76287&quot; probability: 0.13%
	&quot;242857&quot; probability: 0.13%
	&quot;242860&quot; probability: 0.13%
	&quot;242866&quot; probability: 0.13%
	&quot;242871&quot; probability: 0.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.nsecs one of { 34165072, 122652957, 182682679, 222669032, 262920725, 894728136, 924102970, 984096010 }
	&quot;34165072&quot; probability: 0.13%
	&quot;122652957&quot; probability: 0.13%
	&quot;182682679&quot; probability: 0.13%
	&quot;222669032&quot; probability: 0.13%
	&quot;262920725&quot; probability: 0.13%
	&quot;894728136&quot; probability: 0.13%
	&quot;924102970&quot; probability: 0.13%
	&quot;984096010&quot; probability: 0.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.nsecs one of { 34165072, 122652957, 182682679, 222669032, 262920725, 894728136, 924102970, 984096010 }
	&quot;34165072&quot; probability: 0.13%
	&quot;122652957&quot; probability: 0.13%
	&quot;182682679&quot; probability: 0.13%
	&quot;222669032&quot; probability: 0.13%
	&quot;262920725&quot; probability: 0.13%
	&quot;894728136&quot; probability: 0.13%
	&quot;924102970&quot; probability: 0.13%
	&quot;984096010&quot; probability: 0.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs &gt; orig(param0.header.stamp.secs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs &gt; orig(param0.header.stamp.secs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs &gt; orig(param1.header.stamp.secs))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs &gt; orig(param1.header.stamp.secs))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.20%
	&quot;1550024343&quot; probability: 0.60%
	&quot;1550024344&quot; probability: 0.20%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 }
	&quot;1548777296&quot; probability: 0.20%
	&quot;1550024343&quot; probability: 0.60%
	&quot;1550024344&quot; probability: 0.20%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.header.stamp.secs one of { 1548777296, 1550024343, 1550024344 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.w &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.w &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.w one of { 0.943190290889, 0.997787794212 }
	&quot;0.943190290889&quot; probability: 50.00%
	&quot;0.997787794212&quot; probability: 50.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.w one of { 0.943190290889, 0.997787794212 }
	&quot;0.943190290889&quot; probability: 50.00%
	&quot;0.997787794212&quot; probability: 50.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.w one of { 0.943190290889, 0.997787794212 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.w one of { 0.943190290889, 0.997787794212 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x != orig(param1.transform.rotation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x != orig(param1.transform.rotation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &lt;= 2.2216468465E-4)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &lt;= 2.2216468465E-4)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00512981578956)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00512981578956)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x one of { -0.00507236370623, 2.2216468465E-4 }
	&quot;-0.00507236370623&quot; probability: 50.00%
	&quot;2.2216468465E-4&quot; probability: 50.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.x one of { -0.00507236370623, 2.2216468465E-4 }
	&quot;-0.00507236370623&quot; probability: 50.00%
	&quot;2.2216468465E-4&quot; probability: 50.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y != orig(param1.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y != orig(param1.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00582106403122)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00582106403122)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &gt; orig(param0.transform.rotation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &gt; orig(param0.transform.rotation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &gt;= -0.0038496379418)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y &gt;= -0.0038496379418)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y one of { -0.0038496379418, 0.00575468166734 }
	&quot;-0.0038496379418&quot; probability: 50.00%
	&quot;0.00575468166734&quot; probability: 50.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.y one of { -0.0038496379418, 0.00575468166734 }
	&quot;-0.0038496379418&quot; probability: 50.00%
	&quot;0.00575468166734&quot; probability: 50.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &lt; orig(param0.transform.rotation.w))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &lt;= 0.332230651963)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &lt;= 0.332230651963)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &gt; orig(param0.transform.rotation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0660092507654)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0660092507654)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z one of { 0.0660353881394, 0.332230651963 }
	&quot;0.0660353881394&quot; probability: 50.00%
	&quot;0.332230651963&quot; probability: 50.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.rotation.z one of { 0.0660353881394, 0.332230651963 }
	&quot;0.0660353881394&quot; probability: 50.00%
	&quot;0.332230651963&quot; probability: 50.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x != orig(param1.transform.translation.x))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x != orig(param1.transform.translation.x))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x &lt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x &lt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x &gt;= -0.130612968976)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x &gt;= -0.130612968976)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x one of { -0.13060813179, -0.0768893693482 }
	&quot;-0.13060813179&quot; probability: 50.00%
	&quot;-0.0768893693482&quot; probability: 50.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.x one of { -0.13060813179, -0.0768893693482 }
	&quot;-0.13060813179&quot; probability: 50.00%
	&quot;-0.0768893693482&quot; probability: 50.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt; orig(param0.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513598053325)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt;= 0.0513598053325)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt;= orig(param1.transform.translation.y))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &lt;= orig(param1.transform.translation.y))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163342366815)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163342366815)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y one of { -0.0163055535323, 0.0512984948276 }
	&quot;-0.0163055535323&quot; probability: 50.00%
	&quot;0.0512984948276&quot; probability: 50.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.y one of { -0.0163055535323, 0.0512984948276 }
	&quot;-0.0163055535323&quot; probability: 50.00%
	&quot;0.0512984948276&quot; probability: 50.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z &lt;= 1.05248077958)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z &lt;= 1.05248077958)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z &gt;= 0.276721780585)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z &gt;= 0.276721780585)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z &gt;= orig(param1.transform.translation.z))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z &gt;= orig(param1.transform.translation.z))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z one of { 0.276808644988, 1.05248077958 }
	&quot;0.276808644988&quot; probability: 50.00%
	&quot;1.05248077958&quot; probability: 50.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param1.transform.translation.z one of { 0.276808644988, 1.05248077958 }
	&quot;0.276808644988&quot; probability: 50.00%
	&quot;1.05248077958&quot; probability: 50.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param2.data &lt; orig(param2.data))</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param2.data &lt; orig(param2.data))</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (param2.data == &quot;no&quot;)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (param2.data == &quot;no&quot;)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (return.linear.x == 0.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (return.linear.x == 0.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (return.linear.x &gt; return.linear.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (return.linear.x &gt; return.linear.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (return.linear.y == 0.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (return.linear.y == 0.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (return.linear.y == return.linear.x)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (return.linear.y == return.linear.x)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (return.linear.y &gt; return.linear.z)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (return.linear.y &gt; return.linear.z)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == -200.0)  ==&gt;  (return.linear.z != 0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == -200.0)  ==&gt;  (return.linear.z != 0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  &lt;==&gt;  (return.linear.z == 0.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  &lt;==&gt;  (return.linear.z == 0.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.w) &gt;= -0.0529799957713)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.73%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 89.00%
	&quot;0.999247471565&quot; probability: 0.74%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.73%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 89.00%
	&quot;0.999247471565&quot; probability: 0.74%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.x) &lt;= 0.0752501830867)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.x) &gt;= 0.021351562739)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.y) &lt;= 0.06012958511)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.y) &gt;= -0.127117512456)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.rotation.z) &lt;= 0.988539091428)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.translation.y) &lt;= 1.23434685526)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.translation.z) &lt;= 0.963827982442)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param0.transform.translation.z) &gt;= 0.0335555937246)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.63%
	&quot;0.943236931927&quot; probability: 38.26%
	&quot;0.997787593551&quot; probability: 19.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.63%
	&quot;0.943236931927&quot; probability: 38.26%
	&quot;0.997787593551&quot; probability: 19.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.x) &lt;= 0.00199593726413)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.x) &gt;= -0.00667282022084)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.55%
	&quot;5.12162687346E-4&quot; probability: 38.26%
	&quot;0.00187291365961&quot; probability: 42.63%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.55%
	&quot;5.12162687346E-4&quot; probability: 38.26%
	&quot;0.00187291365961&quot; probability: 42.63%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.y) &lt;= 0.00669723346787)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.y) &gt;= -0.00446151329888)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.90%
	&quot;0.00579792162242&quot; probability: 19.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.90%
	&quot;0.00579792162242&quot; probability: 19.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.z) &lt;= 0.336262247471)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.z) &gt;= 0.0659328035045)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.10%
	&quot;0.33209650183&quot; probability: 38.26%
	&quot;0.336192066889&quot; probability: 42.63%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.10%
	&quot;0.33209650183&quot; probability: 38.26%
	&quot;0.336192066889&quot; probability: 42.63%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.x) &gt;= -0.130946964056)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.90%
	&quot;-0.0768714144176&quot; probability: 19.10%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.90%
	&quot;-0.0768714144176&quot; probability: 19.10%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.y) &lt;= 0.051380817624)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.y) &gt;= -0.0163550433646)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.10%
	&quot;0.0496432718844&quot; probability: 42.63%
	&quot;0.0511190919793&quot; probability: 38.26%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.10%
	&quot;0.0496432718844&quot; probability: 42.63%
	&quot;0.0511190919793&quot; probability: 38.26%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.z) &lt;= 1.05248299982)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.z) &gt;= 0.276380029344)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.10%
	&quot;1.05235948185&quot; probability: 80.90%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.10%
	&quot;1.05235948185&quot; probability: 80.90%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.19%	count:3657.0 total:4504.0
	&quot;nonsensical&quot; probability: 18.81%	count:847.0 total:4504.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.19%	count:3657.0 total:4504.0
	&quot;nonsensical&quot; probability: 18.81%	count:847.0 total:4504.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.w &lt;= 0.99980018378)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.w &gt;= -0.0550752471584)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.x &lt;= 0.127656810118)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.x &gt;= -0.0445691850217)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.y &lt;= 0.15384469518)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.y &gt;= -0.146645399806)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.z &lt;= 0.988352898513)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.rotation.z &gt;= -0.849271705385)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.x &lt;= 0.928052628208)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.y &lt;= 1.27036346097)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.z &lt;= 1.2742265574)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param0.transform.translation.z &gt;= 0.0333393216698)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 42.60%
	&quot;0.943261993842&quot; probability: 38.23%
	&quot;0.997788345438&quot; probability: 19.16%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 }
	&quot;0.941778562619&quot; probability: 42.60%
	&quot;0.943261993842&quot; probability: 38.23%
	&quot;0.997788345438&quot; probability: 19.16%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.w one of { 0.941778562619, 0.943261993842, 0.997788345438 })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.x &lt;= 0.00198558264831)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.x &gt;= -0.00682536700315)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.28%
	&quot;-0.0051186549392&quot; probability: 18.72%
	&quot;-0.00410114939048&quot; probability: 0.17%
	&quot;2.89138628677E-4&quot; probability: 38.23%
	&quot;0.00181840508637&quot; probability: 42.60%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.x one of { -0.00660047310277, -0.0051186549392, -0.00410114939048, 2.89138628677E-4, 0.00181840508637 }
	&quot;-0.00660047310277&quot; probability: 0.28%
	&quot;-0.0051186549392&quot; probability: 18.72%
	&quot;-0.00410114939048&quot; probability: 0.17%
	&quot;2.89138628677E-4&quot; probability: 38.23%
	&quot;0.00181840508637&quot; probability: 42.60%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.y &lt;= 0.00688001770031)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.y &gt;= -0.00448884079839)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 80.84%
	&quot;0.00581902761016&quot; probability: 19.07%
	&quot;0.00685348608903&quot; probability: 0.09%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.y one of { -0.00397824813233, 0.00581902761016, 0.00685348608903 }
	&quot;-0.00397824813233&quot; probability: 80.84%
	&quot;0.00581902761016&quot; probability: 19.07%
	&quot;0.00685348608903&quot; probability: 0.09%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.z &lt;= 0.336268886894)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.z &gt;= 0.0656214083018)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 19.16%
	&quot;0.332025338306&quot; probability: 38.23%
	&quot;0.336205303253&quot; probability: 42.60%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.rotation.z one of { 0.0660178460476, 0.332025338306, 0.336205303253 }
	&quot;0.0660178460476&quot; probability: 19.16%
	&quot;0.332025338306&quot; probability: 38.23%
	&quot;0.336205303253&quot; probability: 42.60%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.x &gt;= -0.131124032259)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 80.82%
	&quot;-0.0768626611435&quot; probability: 19.16%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.x one of { -0.131124032259, -0.130057847125, -0.0768626611435 }
	&quot;-0.131124032259&quot; probability: 0.02%
	&quot;-0.130057847125&quot; probability: 80.82%
	&quot;-0.0768626611435&quot; probability: 19.16%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.y &lt;= 0.051623782523)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.y &gt;= -0.0163980259266)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 19.16%
	&quot;0.0496066092566&quot; probability: 42.60%
	&quot;0.0511671453035&quot; probability: 38.23%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.y one of { -0.0163088589475, 0.0496066092566, 0.0511671453035 }
	&quot;-0.0163088589475&quot; probability: 19.16%
	&quot;0.0496066092566&quot; probability: 42.60%
	&quot;0.0511671453035&quot; probability: 38.23%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.z &lt;= 1.05274696374)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.z &gt;= 0.276359436578)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 19.16%
	&quot;1.05235838107&quot; probability: 80.84%)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param1.transform.translation.z one of { 0.276775139271, 1.05235838107 }
	&quot;0.276775139271&quot; probability: 19.16%
	&quot;1.05235838107&quot; probability: 80.84%)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 35.59%	count:3657.0 total:10274.0
	&quot;nonsensical&quot; probability: 8.24%	count:847.0 total:10274.0
	&quot;y&quot; probability: 56.16%	count:5770.0 total:10274.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; }
	&quot;no&quot; probability: 35.59%	count:3657.0 total:10274.0
	&quot;nonsensical&quot; probability: 8.24%	count:847.0 total:10274.0
	&quot;y&quot; probability: 56.16%	count:5770.0 total:10274.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (param2.data one of { &quot;no&quot;, &quot;nonsensical&quot;, &quot;y&quot; })</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (return.linear.x &lt;= 1.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (return.linear.x &lt;= 1.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (return.linear.x &gt;= -1.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (return.linear.x &gt;= -1.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (return.linear.y &lt;= 1.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (return.linear.y &lt;= 1.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>(return.linear.z == 0.0)  ==&gt;  (return.linear.y &gt;= -1.0)</INV> <SAMPLES>2222</SAMPLES> <DAIKON>(return.linear.z == 0.0)  ==&gt;  (return.linear.y &gt;= -1.0)</DAIKON> <DAIKONCLASS>class daikon.inv.Implication</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.18%
	&quot;0.0&quot; probability: 99.82%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.18%
	&quot;0.0&quot; probability: 99.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param1.transform.rotation.w  ==   0.941783160825)&quot;</PPTNAME>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.18%
	&quot;0.0&quot; probability: 99.82%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.18%
	&quot;0.0&quot; probability: 99.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.943236931927)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.18%
	&quot;0.0&quot; probability: 99.82%</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.18%
	&quot;0.0&quot; probability: 99.82%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param1.transform.rotation.w  ==  0.997787593551)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5435</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.25%
	&quot;0.0&quot; probability: 99.75%</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.25%
	&quot;0.0&quot; probability: 99.75%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;no&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>3665</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;no&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>1770</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == orig(param2.data)</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.y &lt;= 0.390774709239</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.y &lt;= 0.390774709239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.x &gt;= -0.35850143434</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.x &gt;= -0.35850143434</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.20%
	&quot;0.0&quot; probability: 99.80%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.20%
	&quot;0.0&quot; probability: 99.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==  &quot;y&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>1131</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.22%
	&quot;0.0&quot; probability: 99.78%</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.22%
	&quot;0.0&quot; probability: 99.78%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==  &quot;y&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>4304</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == orig(param2.data)</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == orig(param2.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>param2.data == &quot;nonsensical&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>param2.data == &quot;nonsensical&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.y &lt;= 0.390774709239</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.y &lt;= 0.390774709239</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.x &gt;= -0.35850143434</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.x &gt;= -0.35850143434</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>639</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 160133, 161045, 201119 }
	&quot;150055&quot; probability: 0.32%
	&quot;150879&quot; probability: 0.01%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.03%
	&quot;150984&quot; probability: 0.09%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.09%
	&quot;201119&quot; probability: 0.45%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) one of { -0.127117512456, -0.0134844568482, -0.012113410325, -0.00596613549622, -0.00373862510392, 0.00567178575213, 0.0304312055358 }
	&quot;-0.127117512456&quot; probability: 0.21%
	&quot;-0.0134844568482&quot; probability: 32.48%
	&quot;-0.012113410325&quot; probability: 8.76%
	&quot;-0.00596613549622&quot; probability: 1.28%
	&quot;-0.00373862510392&quot; probability: 3.21%
	&quot;0.00567178575213&quot; probability: 9.40%
	&quot;0.0304312055358&quot; probability: 44.66%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.0304312055358</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.0304312055358</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.127117512456</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) one of { -0.0139154449107, 0.0178672092569, 0.0269654814604, 0.0284780077363, 0.0296433705682, 0.0480247095369, 0.0575906189791, 0.988539091428 }
	&quot;-0.0139154449107&quot; probability: 44.66%
	&quot;0.0178672092569&quot; probability: 8.76%
	&quot;0.0269654814604&quot; probability: 3.21%
	&quot;0.0284780077363&quot; probability: 0.43%
	&quot;0.0296433705682&quot; probability: 0.85%
	&quot;0.0480247095369&quot; probability: 9.40%
	&quot;0.0575906189791&quot; probability: 32.48%
	&quot;0.988539091428&quot; probability: 0.21%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.988539091428</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0139154449107</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0139154449107</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1550023569, 1550023578, 1550023579, 1550024239 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.09%
	&quot;1550023569&quot; probability: 0.32%
	&quot;1550023578&quot; probability: 0.04%
	&quot;1550023579&quot; probability: 0.09%
	&quot;1550024239&quot; probability: 0.45%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) one of { 0.0335555937246, 0.0373743135057, 0.829106997929, 0.922656613543, 0.951168307479, 0.95330038816, 0.957488981369, 0.963827982442 }
	&quot;0.0335555937246&quot; probability: 0.21%
	&quot;0.0373743135057&quot; probability: 77.14%
	&quot;0.829106997929&quot; probability: 9.40%
	&quot;0.922656613543&quot; probability: 8.76%
	&quot;0.951168307479&quot; probability: 2.99%
	&quot;0.95330038816&quot; probability: 0.21%
	&quot;0.957488981369&quot; probability: 0.43%
	&quot;0.963827982442&quot; probability: 0.85%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 0.963827982442</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.0335555937246</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 103161645, 276088278, 326268647, 466087285, 574409426, 576134403, 636097238, 703113486, 856007530 }
	&quot;103161645&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.01%
	&quot;326268647&quot; probability: 0.09%
	&quot;466087285&quot; probability: 0.00%
	&quot;574409426&quot; probability: 0.45%
	&quot;576134403&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.03%
	&quot;703113486&quot; probability: 0.09%
	&quot;856007530&quot; probability: 0.32%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) one of { -1.34092694966, -1.32452715405, -1.20908654424, -0.460986326798, -0.407420516885, -0.381020327876, -0.367942690277, -0.330484533363, -0.27644542861 }
	&quot;-1.34092694966&quot; probability: 0.21%
	&quot;-1.32452715405&quot; probability: 44.66%
	&quot;-1.20908654424&quot; probability: 32.48%
	&quot;-0.460986326798&quot; probability: 0.85%
	&quot;-0.407420516885&quot; probability: 0.43%
	&quot;-0.381020327876&quot; probability: 0.21%
	&quot;-0.367942690277&quot; probability: 2.99%
	&quot;-0.330484533363&quot; probability: 9.40%
	&quot;-0.27644542861&quot; probability: 8.76%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) one of { -1.37470366934, -1.17306110997, -1.03992629423, -0.790765475961, -0.420534533235, -0.366865610674, -0.3391575848, -0.325279300566, -0.22486068212 }
	&quot;-1.37470366934&quot; probability: 0.21%
	&quot;-1.17306110997&quot; probability: 44.66%
	&quot;-1.03992629423&quot; probability: 32.48%
	&quot;-0.790765475961&quot; probability: 9.40%
	&quot;-0.420534533235&quot; probability: 0.85%
	&quot;-0.366865610674&quot; probability: 0.43%
	&quot;-0.3391575848&quot; probability: 0.21%
	&quot;-0.325279300566&quot; probability: 2.99%
	&quot;-0.22486068212&quot; probability: 8.76%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 4.9E-324</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) one of { 0.0395360881076, 0.0421111784802, 0.0449134276491, 0.0477272540192, 0.0618443432692, 0.0681580253423 }
	&quot;0.0395360881076&quot; probability: 50.64%
	&quot;0.0421111784802&quot; probability: 0.43%
	&quot;0.0449134276491&quot; probability: 1.07%
	&quot;0.0477272540192&quot; probability: 2.99%
	&quot;0.0618443432692&quot; probability: 0.21%
	&quot;0.0681580253423&quot; probability: 44.66%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.0681580253423</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.0681580253423</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.0385605990791</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.0385605990791</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.998047271354 }
	&quot;-0.0529799957713&quot; probability: 0.21%
	&quot;0.998047271354&quot; probability: 99.79%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.99897785038</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.99897785038</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 66.61%
	&quot;0.00579792162242&quot; probability: 33.39%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.00595482019994</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.00595482019994</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00407325030909</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00407325030909</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 33.39%
	&quot;0.33209650183&quot; probability: 32.91%
	&quot;0.336192066889&quot; probability: 33.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.336262247471</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0659890268292</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0659890268292</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777242, 1548777244, 1548777245, 1548777246, 1548777247, 1548777248, 1548777249, 1548777251, 1548777252, 1548777253, 1550023569, 1550023570, 1550023571, 1550023574, 1550023575, 1550023577, 1550023578, 1550023579, 1550023580, 1550023581, 1550024239, 1550024246, 1550024247, 1550024250 }
	&quot;1548777242&quot; probability: 0.00%
	&quot;1548777244&quot; probability: 0.02%
	&quot;1548777245&quot; probability: 0.04%
	&quot;1548777246&quot; probability: 0.03%
	&quot;1548777247&quot; probability: 0.04%
	&quot;1548777248&quot; probability: 0.02%
	&quot;1548777249&quot; probability: 0.07%
	&quot;1548777251&quot; probability: 0.04%
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777253&quot; probability: 0.06%
	&quot;1550023569&quot; probability: 0.00%
	&quot;1550023570&quot; probability: 0.03%
	&quot;1550023571&quot; probability: 0.07%
	&quot;1550023574&quot; probability: 0.03%
	&quot;1550023575&quot; probability: 0.09%
	&quot;1550023577&quot; probability: 0.00%
	&quot;1550023578&quot; probability: 0.03%
	&quot;1550023579&quot; probability: 0.03%
	&quot;1550023580&quot; probability: 0.03%
	&quot;1550023581&quot; probability: 0.01%
	&quot;1550024239&quot; probability: 0.19%
	&quot;1550024246&quot; probability: 0.04%
	&quot;1550024247&quot; probability: 0.10%
	&quot;1550024250&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 33.39%
	&quot;1.05235948185&quot; probability: 66.61%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05241193615</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05241193615</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276404042358</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276404042358</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 66.61%
	&quot;-0.0768714144176&quot; probability: 33.39%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.130828206539</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.130828206539</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 33.39%
	&quot;0.0496432718844&quot; probability: 33.70%
	&quot;0.0511190919793&quot; probability: 32.91%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.0513694691606</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.0513694691606</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0163321065972</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0163321065972</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00509819561463&quot; probability: 33.39%
	&quot;5.12162687346E-4&quot; probability: 32.91%
	&quot;0.00187291365961&quot; probability: 33.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00199593726413</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00513753542575</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00513753542575</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 33.70%
	&quot;0.943236931927&quot; probability: 32.91%
	&quot;0.997787593551&quot; probability: 33.39%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;param2.data  ==   &quot;nonsensical&quot;&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>639</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.20%
	&quot;0.0&quot; probability: 99.80%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.linear.z one of { -200.0, 0.0 }
	&quot;-200.0&quot; probability: 0.20%
	&quot;0.0&quot; probability: 99.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 150984, 156735, 156800, 156855, 156879, 158353, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150984&quot; probability: 0.25%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.07%
	&quot;158353&quot; probability: 0.15%
	&quot;161045&quot; probability: 0.00%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.04%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.16%
	&quot;205675&quot; probability: 0.10%
	&quot;207953&quot; probability: 0.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.06012958511</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.0193489475652</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.0193489475652</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.0480247095369</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.0480247095369</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0404800709009</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777252&quot; probability: 0.00%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.01%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.04%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023579&quot; probability: 0.25%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.07%
	&quot;1550023653&quot; probability: 0.15%
	&quot;1550024239&quot; probability: 0.16%
	&quot;1550024286&quot; probability: 0.10%
	&quot;1550024309&quot; probability: 0.15%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 0.922656613543</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 0.922656613543</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.038277608594</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.038277608594</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 132642966, 146057361, 262952903, 292943925, 326268647, 343145296, 382804205, 386032425, 474144125, 486198332, 542851752, 544093352, 574409426, 595846903, 703113486, 742824203, 842715123, 946176678 }
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.25%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.04%
	&quot;386032425&quot; probability: 0.07%
	&quot;474144125&quot; probability: 0.10%
	&quot;486198332&quot; probability: 0.15%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.15%
	&quot;574409426&quot; probability: 0.16%
	&quot;595846903&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.00%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.899386908127</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.23434685526</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.0752501830867</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.021351562739</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;0.995349986004&quot; probability: 10.18%
	&quot;0.997023109931&quot; probability: 1.75%
	&quot;0.998047271354&quot; probability: 87.11%
	&quot;0.999247471565&quot; probability: 0.95%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999247471565</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= 0.995349986004</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= 0.995349986004</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00403376054094, 0.00591641943256 }
	&quot;-0.00403376054094&quot; probability: 83.17%
	&quot;0.00591641943256&quot; probability: 16.83%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.00669723346787</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00446151329888</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0659971229686, 0.33211761156, 0.336239855564 }
	&quot;0.0659971229686&quot; probability: 16.83%
	&quot;0.33211761156&quot; probability: 39.20%
	&quot;0.336239855564&quot; probability: 43.97%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.336247695033</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.336247695033</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0659328035045</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276452113946, 1.05237855841 }
	&quot;0.276452113946&quot; probability: 16.83%
	&quot;1.05237855841&quot; probability: 83.17%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05248299982</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276380029344</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130810805077, -0.129732800804, -0.0777035894394 }
	&quot;-0.130810805077&quot; probability: 79.52%
	&quot;-0.129732800804&quot; probability: 3.65%
	&quot;-0.0777035894394&quot; probability: 16.83%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.130946964056</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0160996069572, 0.0498290551547, 0.0513694691606 }
	&quot;-0.0160996069572&quot; probability: 16.83%
	&quot;0.0498290551547&quot; probability: 43.97%
	&quot;0.0513694691606&quot; probability: 39.20%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.051380817624</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0163550433646</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.0050857084782, 5.46497583515E-5, 0.00195819392832 }
	&quot;-0.00667282022084&quot; probability: 0.63%
	&quot;-0.0050857084782&quot; probability: 16.20%
	&quot;5.46497583515E-5&quot; probability: 39.20%
	&quot;0.00195819392832&quot; probability: 43.97%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00195868802955</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00195868802955</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00667282022084</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941765710664, 0.94322918622, 0.997789312085 }
	&quot;0.941765710664&quot; probability: 43.97%
	&quot;0.94322918622&quot; probability: 39.20%
	&quot;0.997789312085&quot; probability: 16.83%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param2.data) == &quot;y&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param2.data) == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param2.data) == &quot;y&quot;</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param2.data) == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(param2.data  ==   &quot;nonsensical&quot;)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>4796</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.linear.y == return.linear.x</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y == return.linear.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.linear.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.linear.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.linear.z == -200.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.z == -200.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.linear.z == -200.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.z == -200.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.linear.z != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.seq) one of { 164991, 207953 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 164991, 207953 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.seq) one of { 164991, 207953 }
	&quot;164991&quot; probability: 0.20%
	&quot;207953&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 164991, 207953 }
	&quot;164991&quot; probability: 0.20%
	&quot;207953&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }
	&quot;-0.0193489475652&quot; probability: 80.00%
	&quot;-0.00893083024171&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }
	&quot;-0.0193489475652&quot; probability: 80.00%
	&quot;-0.00893083024171&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }
	&quot;-0.0404800709009&quot; probability: 80.00%
	&quot;0.0309750693943&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }
	&quot;-0.0404800709009&quot; probability: 80.00%
	&quot;0.0309750693943&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024309&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024309&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }
	&quot;0.427915697329&quot; probability: 20.00%
	&quot;0.567787591576&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }
	&quot;0.427915697329&quot; probability: 20.00%
	&quot;0.567787591576&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }
	&quot;132642966&quot; probability: 0.20%
	&quot;544093352&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }
	&quot;132642966&quot; probability: 0.20%
	&quot;544093352&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }
	&quot;-0.351829913918&quot; probability: 80.00%
	&quot;0.899386908127&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }
	&quot;-0.351829913918&quot; probability: 80.00%
	&quot;0.899386908127&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }
	&quot;0.575820786534&quot; probability: 80.00%
	&quot;0.785447591116&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }
	&quot;0.575820786534&quot; probability: 80.00%
	&quot;0.785447591116&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }
	&quot;0.0215702553893&quot; probability: 20.00%
	&quot;0.0308892186852&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }
	&quot;0.0215702553893&quot; probability: 20.00%
	&quot;0.0308892186852&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) == 0.999247471565</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) == 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { 0.998515316987, 0.999247471565 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { 0.998515316987, 0.999247471565 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.seq) one of { 76129, 242321 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.seq) one of { 76129, 242321 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.seq) one of { 76129, 242321 }
	&quot;76129&quot; probability: 0.20%
	&quot;242321&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.seq) one of { 76129, 242321 }
	&quot;76129&quot; probability: 0.20%
	&quot;242321&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }
	&quot;-0.00386769120191&quot; probability: 80.00%
	&quot;0.00592403787287&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }
	&quot;-0.00386769120191&quot; probability: 80.00%
	&quot;0.00592403787287&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }
	&quot;0.0660199117626&quot; probability: 20.00%
	&quot;0.332113066108&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }
	&quot;0.0660199117626&quot; probability: 20.00%
	&quot;0.332113066108&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024338&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024338&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }
	&quot;0.27657076897&quot; probability: 20.00%
	&quot;1.05241753805&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }
	&quot;0.27657076897&quot; probability: 20.00%
	&quot;1.05241753805&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }
	&quot;244222225&quot; probability: 0.80%
	&quot;682851647&quot; probability: 0.20%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }
	&quot;244222225&quot; probability: 0.80%
	&quot;682851647&quot; probability: 0.20%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }
	&quot;-0.130451319676&quot; probability: 80.00%
	&quot;-0.0775279037996&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }
	&quot;-0.130451319676&quot; probability: 80.00%
	&quot;-0.0775279037996&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }
	&quot;-0.0162844349103&quot; probability: 20.00%
	&quot;0.0513646987144&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }
	&quot;-0.0162844349103&quot; probability: 20.00%
	&quot;0.0513646987144&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }
	&quot;-0.00508609401294&quot; probability: 20.00%
	&quot;-6.69287804429E-5&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }
	&quot;-0.00508609401294&quot; probability: 20.00%
	&quot;-6.69287804429E-5&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }
	&quot;0.943231651189&quot; probability: 80.00%
	&quot;0.997787757328&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }
	&quot;0.943231651189&quot; probability: 80.00%
	&quot;0.997787757328&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param2.data) == &quot;y&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param2.data) == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param2.data) == &quot;y&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param2.data) == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>return.linear.y &gt; return.linear.z</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y &gt; return.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt; orig(param0.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt; orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==   -200.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.06012958511</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.127117512456</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.988539091428</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0404800709009</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 0.963827982442</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.0335555937246</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.899386908127</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.23434685526</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.0752501830867</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.021351562739</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.73%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 89.00%
	&quot;0.999247471565&quot; probability: 0.74%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.73%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 89.00%
	&quot;0.999247471565&quot; probability: 0.74%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999247471565</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.90%
	&quot;0.00579792162242&quot; probability: 19.10%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.90%
	&quot;0.00579792162242&quot; probability: 19.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.00669723346787</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00446151329888</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.10%
	&quot;0.33209650183&quot; probability: 38.26%
	&quot;0.336192066889&quot; probability: 42.63%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.10%
	&quot;0.33209650183&quot; probability: 38.26%
	&quot;0.336192066889&quot; probability: 42.63%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.336262247471</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0659328035045</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.10%
	&quot;1.05235948185&quot; probability: 80.90%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.10%
	&quot;1.05235948185&quot; probability: 80.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05248299982</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276380029344</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.90%
	&quot;-0.0768714144176&quot; probability: 19.10%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.90%
	&quot;-0.0768714144176&quot; probability: 19.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.130946964056</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.10%
	&quot;0.0496432718844&quot; probability: 42.63%
	&quot;0.0511190919793&quot; probability: 38.26%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.10%
	&quot;0.0496432718844&quot; probability: 42.63%
	&quot;0.0511190919793&quot; probability: 38.26%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.051380817624</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0163550433646</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.55%
	&quot;5.12162687346E-4&quot; probability: 38.26%
	&quot;0.00187291365961&quot; probability: 42.63%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.55%
	&quot;5.12162687346E-4&quot; probability: 38.26%
	&quot;0.00187291365961&quot; probability: 42.63%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00199593726413</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00667282022084</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.63%
	&quot;0.943236931927&quot; probability: 38.26%
	&quot;0.997787593551&quot; probability: 19.10%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.63%
	&quot;0.943236931927&quot; probability: 38.26%
	&quot;0.997787593551&quot; probability: 19.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.19%	count:3657.0 total:4504.0
	&quot;nonsensical&quot; probability: 18.81%	count:847.0 total:4504.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.19%	count:3657.0 total:4504.0
	&quot;nonsensical&quot; probability: 18.81%	count:847.0 total:4504.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==   -200.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.linear.z == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.linear.z == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 150055, 150879, 150898, 150909, 150915, 150984, 156735, 156800, 156855, 156879, 158353, 160133, 161045, 162653, 162661, 163055, 163100, 163174, 163704, 164192, 164991, 201119, 205675, 207953 }
	&quot;150055&quot; probability: 0.03%
	&quot;150879&quot; probability: 0.00%
	&quot;150898&quot; probability: 0.00%
	&quot;150909&quot; probability: 0.00%
	&quot;150915&quot; probability: 0.00%
	&quot;150984&quot; probability: 0.22%
	&quot;156735&quot; probability: 0.00%
	&quot;156800&quot; probability: 0.00%
	&quot;156855&quot; probability: 0.00%
	&quot;156879&quot; probability: 0.06%
	&quot;158353&quot; probability: 0.12%
	&quot;160133&quot; probability: 0.00%
	&quot;161045&quot; probability: 0.06%
	&quot;162653&quot; probability: 0.00%
	&quot;162661&quot; probability: 0.02%
	&quot;163055&quot; probability: 0.00%
	&quot;163100&quot; probability: 0.00%
	&quot;163174&quot; probability: 0.02%
	&quot;163704&quot; probability: 0.02%
	&quot;164192&quot; probability: 0.03%
	&quot;164991&quot; probability: 0.01%
	&quot;201119&quot; probability: 0.18%
	&quot;205675&quot; probability: 0.09%
	&quot;207953&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt;= 0.06012958511</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt;= 0.06012958511</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &gt;= -0.127117512456</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &gt;= -0.127117512456</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt;= 0.988539091428</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt;= 0.988539091428</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &gt;= -0.0404800709009</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &gt;= -0.0404800709009</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777243, 1548777252, 1548777269, 1548777273, 1548777274, 1548777279, 1548777285, 1548777294, 1550023569, 1550023578, 1550023579, 1550023636, 1550023637, 1550023638, 1550023653, 1550024239, 1550024286, 1550024309 }
	&quot;1548777243&quot; probability: 0.00%
	&quot;1548777252&quot; probability: 0.06%
	&quot;1548777269&quot; probability: 0.02%
	&quot;1548777273&quot; probability: 0.00%
	&quot;1548777274&quot; probability: 0.02%
	&quot;1548777279&quot; probability: 0.02%
	&quot;1548777285&quot; probability: 0.03%
	&quot;1548777294&quot; probability: 0.01%
	&quot;1550023569&quot; probability: 0.03%
	&quot;1550023578&quot; probability: 0.00%
	&quot;1550023579&quot; probability: 0.22%
	&quot;1550023636&quot; probability: 0.00%
	&quot;1550023637&quot; probability: 0.00%
	&quot;1550023638&quot; probability: 0.06%
	&quot;1550023653&quot; probability: 0.12%
	&quot;1550024239&quot; probability: 0.18%
	&quot;1550024286&quot; probability: 0.09%
	&quot;1550024309&quot; probability: 0.13%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt;= 0.963827982442</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt;= 0.963827982442</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt;= 0.0335555937246</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt;= 0.0335555937246</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 103161645, 132642966, 146057361, 262952903, 276088278, 292943925, 326268647, 343145296, 382804205, 386032425, 466087285, 474144125, 486198332, 542851752, 544093352, 574409426, 576134403, 595846903, 636097238, 703113486, 742824203, 842715123, 856007530, 946176678 }
	&quot;103161645&quot; probability: 0.00%
	&quot;132642966&quot; probability: 0.01%
	&quot;146057361&quot; probability: 0.00%
	&quot;262952903&quot; probability: 0.00%
	&quot;276088278&quot; probability: 0.00%
	&quot;292943925&quot; probability: 0.00%
	&quot;326268647&quot; probability: 0.22%
	&quot;343145296&quot; probability: 0.02%
	&quot;382804205&quot; probability: 0.03%
	&quot;386032425&quot; probability: 0.06%
	&quot;466087285&quot; probability: 0.00%
	&quot;474144125&quot; probability: 0.09%
	&quot;486198332&quot; probability: 0.12%
	&quot;542851752&quot; probability: 0.02%
	&quot;544093352&quot; probability: 0.13%
	&quot;574409426&quot; probability: 0.18%
	&quot;576134403&quot; probability: 0.00%
	&quot;595846903&quot; probability: 0.00%
	&quot;636097238&quot; probability: 0.00%
	&quot;703113486&quot; probability: 0.06%
	&quot;742824203&quot; probability: 0.00%
	&quot;842715123&quot; probability: 0.02%
	&quot;856007530&quot; probability: 0.03%
	&quot;946176678&quot; probability: 0.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) &lt;= 0.899386908127</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) &lt;= 0.899386908127</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) &lt;= 1.23434685526</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &lt;= 1.23434685526</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt;= 0.0752501830867</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt;= 0.0752501830867</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt;= 0.021351562739</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt;= 0.021351562739</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.73%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 89.00%
	&quot;0.999247471565&quot; probability: 0.74%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { -0.0529799957713, 0.995349986004, 0.997023109931, 0.998047271354, 0.999247471565 }
	&quot;-0.0529799957713&quot; probability: 0.02%
	&quot;0.995349986004&quot; probability: 8.73%
	&quot;0.997023109931&quot; probability: 1.50%
	&quot;0.998047271354&quot; probability: 89.00%
	&quot;0.999247471565&quot; probability: 0.74%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &lt;= 0.999247471565</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &lt;= 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt;= -0.0529799957713</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.90%
	&quot;0.00579792162242&quot; probability: 19.10%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00398300668693, 0.00579792162242 }
	&quot;-0.00398300668693&quot; probability: 80.90%
	&quot;0.00579792162242&quot; probability: 19.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt;= 0.00669723346787</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt;= 0.00669723346787</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &gt;= -0.00446151329888</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &gt;= -0.00446151329888</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.10%
	&quot;0.33209650183&quot; probability: 38.26%
	&quot;0.336192066889&quot; probability: 42.63%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660326484606, 0.33209650183, 0.336192066889 }
	&quot;0.0660326484606&quot; probability: 19.10%
	&quot;0.33209650183&quot; probability: 38.26%
	&quot;0.336192066889&quot; probability: 42.63%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt;= 0.336262247471</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt;= 0.336262247471</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt;= 0.0659328035045</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt;= 0.0659328035045</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.10%
	&quot;1.05235948185&quot; probability: 80.90%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.276814966626, 1.05235948185 }
	&quot;0.276814966626&quot; probability: 19.10%
	&quot;1.05235948185&quot; probability: 80.90%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) &lt;= 1.05248299982</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &lt;= 1.05248299982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt;= 0.276380029344</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt;= 0.276380029344</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.90%
	&quot;-0.0768714144176&quot; probability: 19.10%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130144391665, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.90%
	&quot;-0.0768714144176&quot; probability: 19.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt;= 4.9E-324</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) &gt;= -0.130946964056</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &gt;= -0.130946964056</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.10%
	&quot;0.0496432718844&quot; probability: 42.63%
	&quot;0.0511190919793&quot; probability: 38.26%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0163321065972, 0.0496432718844, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.10%
	&quot;0.0496432718844&quot; probability: 42.63%
	&quot;0.0511190919793&quot; probability: 38.26%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.y) &lt;= 0.051380817624</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &lt;= 0.051380817624</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.y) &gt;= -0.0163550433646</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.y) &gt;= -0.0163550433646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.55%
	&quot;5.12162687346E-4&quot; probability: 38.26%
	&quot;0.00187291365961&quot; probability: 42.63%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00667282022084, -0.00509819561463, 5.12162687346E-4, 0.00187291365961 }
	&quot;-0.00667282022084&quot; probability: 0.55%
	&quot;-0.00509819561463&quot; probability: 18.55%
	&quot;5.12162687346E-4&quot; probability: 38.26%
	&quot;0.00187291365961&quot; probability: 42.63%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt;= 0.00199593726413</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt;= 0.00199593726413</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &gt;= -0.00667282022084</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &gt;= -0.00667282022084</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.63%
	&quot;0.943236931927&quot; probability: 38.26%
	&quot;0.997787593551&quot; probability: 19.10%</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.941783160825, 0.943236931927, 0.997787593551 }
	&quot;0.941783160825&quot; probability: 42.63%
	&quot;0.943236931927&quot; probability: 38.26%
	&quot;0.997787593551&quot; probability: 19.10%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.19%	count:3657.0 total:4504.0
	&quot;nonsensical&quot; probability: 18.81%	count:847.0 total:4504.0</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;no&quot;, &quot;nonsensical&quot; }
	&quot;no&quot; probability: 81.19%	count:3657.0 total:4504.0
	&quot;nonsensical&quot; probability: 18.81%	count:847.0 total:4504.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param2.data) one of { &quot;nonsensical&quot;, &quot;y&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;return.linear.z  ==  0.0&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>5427</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String):::EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PPTNAME>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.linear.y == return.linear.x</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y == return.linear.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.angular.y == return.angular.x</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.angular.y == return.angular.z</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) == orig(param1.header.frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) == orig(param1.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.linear.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.linear.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.linear.z == -200.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.z == -200.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.linear.z == -200.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.z == -200.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.linear.z != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.angular.y == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0) != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.seq) one of { 164991, 207953 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 164991, 207953 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.seq) one of { 164991, 207953 }
	&quot;164991&quot; probability: 0.20%
	&quot;207953&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) one of { 164991, 207953 }
	&quot;164991&quot; probability: 0.20%
	&quot;207953&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.seq) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }
	&quot;-0.0193489475652&quot; probability: 80.00%
	&quot;-0.00893083024171&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) one of { -0.0193489475652, -0.00893083024171 }
	&quot;-0.0193489475652&quot; probability: 80.00%
	&quot;-0.00893083024171&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) == &quot;/world&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }
	&quot;-0.0404800709009&quot; probability: 80.00%
	&quot;0.0309750693943&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) one of { -0.0404800709009, 0.0309750693943 }
	&quot;-0.0404800709009&quot; probability: 80.00%
	&quot;0.0309750693943&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024309&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) one of { 1548777294, 1550024309 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024309&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }
	&quot;0.427915697329&quot; probability: 20.00%
	&quot;0.567787591576&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) one of { 0.427915697329, 0.567787591576 }
	&quot;0.427915697329&quot; probability: 20.00%
	&quot;0.567787591576&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }
	&quot;132642966&quot; probability: 0.20%
	&quot;544093352&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) one of { 132642966, 544093352 }
	&quot;132642966&quot; probability: 0.20%
	&quot;544093352&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }
	&quot;-0.351829913918&quot; probability: 80.00%
	&quot;0.899386908127&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) one of { -0.351829913918, 0.899386908127 }
	&quot;-0.351829913918&quot; probability: 80.00%
	&quot;0.899386908127&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }
	&quot;0.575820786534&quot; probability: 80.00%
	&quot;0.785447591116&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) one of { 0.575820786534, 0.785447591116 }
	&quot;0.575820786534&quot; probability: 80.00%
	&quot;0.785447591116&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }
	&quot;0.0215702553893&quot; probability: 20.00%
	&quot;0.0308892186852&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) one of { 0.0215702553893, 0.0308892186852 }
	&quot;0.0215702553893&quot; probability: 20.00%
	&quot;0.0308892186852&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) == 0.999247471565</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) == 0.999247471565</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) one of { 0.998515316987, 0.999247471565 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) one of { 0.998515316987, 0.999247471565 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1) != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.seq) one of { 76129, 242321 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.seq) one of { 76129, 242321 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.seq) one of { 76129, 242321 }
	&quot;76129&quot; probability: 0.20%
	&quot;242321&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.seq) one of { 76129, 242321 }
	&quot;76129&quot; probability: 0.20%
	&quot;242321&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.seq) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.seq) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }
	&quot;-0.00386769120191&quot; probability: 80.00%
	&quot;0.00592403787287&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) one of { -0.00386769120191, 0.00592403787287 }
	&quot;-0.00386769120191&quot; probability: 80.00%
	&quot;0.00592403787287&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.child_frame_id) == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }
	&quot;0.0660199117626&quot; probability: 20.00%
	&quot;0.332113066108&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) one of { 0.0660199117626, 0.332113066108 }
	&quot;0.0660199117626&quot; probability: 20.00%
	&quot;0.332113066108&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024338&quot; probability: 0.80%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) one of { 1548777294, 1550024338 }
	&quot;1548777294&quot; probability: 0.20%
	&quot;1550024338&quot; probability: 0.80%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.stamp.secs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.secs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }
	&quot;0.27657076897&quot; probability: 20.00%
	&quot;1.05241753805&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) one of { 0.27657076897, 1.05241753805 }
	&quot;0.27657076897&quot; probability: 20.00%
	&quot;1.05241753805&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }
	&quot;244222225&quot; probability: 0.80%
	&quot;682851647&quot; probability: 0.20%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) one of { 244222225, 682851647 }
	&quot;244222225&quot; probability: 0.80%
	&quot;682851647&quot; probability: 0.20%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.header.stamp.nsecs) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.header.stamp.nsecs) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }
	&quot;-0.130451319676&quot; probability: 80.00%
	&quot;-0.0775279037996&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) one of { -0.130451319676, -0.0775279037996 }
	&quot;-0.130451319676&quot; probability: 80.00%
	&quot;-0.0775279037996&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }
	&quot;-0.0162844349103&quot; probability: 20.00%
	&quot;0.0513646987144&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.y) one of { -0.0162844349103, 0.0513646987144 }
	&quot;-0.0162844349103&quot; probability: 20.00%
	&quot;0.0513646987144&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.y) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.y) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }
	&quot;-0.00508609401294&quot; probability: 20.00%
	&quot;-6.69287804429E-5&quot; probability: 80.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) one of { -0.00508609401294, -6.69287804429E-5 }
	&quot;-0.00508609401294&quot; probability: 20.00%
	&quot;-6.69287804429E-5&quot; probability: 80.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }
	&quot;0.943231651189&quot; probability: 80.00%
	&quot;0.997787757328&quot; probability: 20.00%</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) one of { 0.943231651189, 0.997787757328 }
	&quot;0.943231651189&quot; probability: 80.00%
	&quot;0.997787757328&quot; probability: 20.00%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.w) != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.w) != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param2) != null</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param2) != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param2.data) == &quot;y&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param2.data) == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param2.data) == &quot;y&quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param2.data) == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>return.linear.y &gt; return.linear.z</INV> <SAMPLES>8</SAMPLES> <DAIKON>return.linear.y &gt; return.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.seq) != orig(param1.header.seq)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.seq) != orig(param1.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) != orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.child_frame_id) &gt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.frame_id) &lt; orig(param1.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.secs) &lt;= orig(param1.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &lt; orig(param0.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &lt; orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.header.stamp.nsecs) != orig(param1.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.x) != orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) != orig(param1.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.translation.y) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param0.transform.rotation.w) &gt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) != orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.y) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &gt; orig(param1.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.z) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.z) &gt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.translation.x) &lt; orig(param1.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT;condition=&quot;not(return.linear.z  ==  0.0)&quot;</PARENT> <INV>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</INV> <SAMPLES>8</SAMPLES> <DAIKON>orig(param1.transform.rotation.x) &lt; orig(param1.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>velocity(geometry_msgs/TransformStamped, geometry_msgs/TransformStamped, std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..viconOBSTACLEOBSTACLE():::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y one of { -0.00384641205689, 0.00579792162242, 0.00687940529118 }
	&quot;-0.00384641205689&quot; probability: 80.30%
	&quot;0.00579792162242&quot; probability: 19.56%
	&quot;0.00687940529118&quot; probability: 0.14%</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.y one of { -0.00384641205689, 0.00579792162242, 0.00687940529118 }
	&quot;-0.00384641205689&quot; probability: 80.30%
	&quot;0.00579792162242&quot; probability: 19.56%
	&quot;0.00687940529118&quot; probability: 0.14%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt;= 0.00691723721209</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.y &lt;= 0.00691723721209</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &gt;= -0.004576336142</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.y &gt;= -0.004576336142</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889, 0.337436885911 }
	&quot;0.0660326484606&quot; probability: 19.70%
	&quot;0.33209650183&quot; probability: 38.42%
	&quot;0.336192066889&quot; probability: 41.65%
	&quot;0.337436885911&quot; probability: 0.22%</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.z one of { 0.0660326484606, 0.33209650183, 0.336192066889, 0.337436885911 }
	&quot;0.0660326484606&quot; probability: 19.70%
	&quot;0.33209650183&quot; probability: 38.42%
	&quot;0.336192066889&quot; probability: 41.65%
	&quot;0.337436885911&quot; probability: 0.22%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &lt;= 0.337451671597</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.z &lt;= 0.337451671597</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt;= 0.0656214083018</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.z &gt;= 0.0656214083018</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.secs != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z one of { 0.276814966626, 1.05287062785 }
	&quot;0.276814966626&quot; probability: 19.70%
	&quot;1.05287062785&quot; probability: 80.30%</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.z one of { 0.276814966626, 1.05287062785 }
	&quot;0.276814966626&quot; probability: 19.70%
	&quot;1.05287062785&quot; probability: 80.30%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &lt;= 1.0529062497</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.z &lt;= 1.0529062497</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt;= 0.276342236547</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.z &gt;= 0.276342236547</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.nsecs != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x one of { -0.130144391665, -0.124868696131, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.08%
	&quot;-0.124868696131&quot; probability: 0.22%
	&quot;-0.0768714144176&quot; probability: 19.70%</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.x one of { -0.130144391665, -0.124868696131, -0.0768714144176 }
	&quot;-0.130144391665&quot; probability: 80.08%
	&quot;-0.124868696131&quot; probability: 0.22%
	&quot;-0.0768714144176&quot; probability: 19.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &lt;= 4.9E-324</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &gt;= -0.131137880865</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.x &gt;= -0.131137880865</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y one of { -0.0163321065972, 0.0495175525377, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.70%
	&quot;0.0495175525377&quot; probability: 41.88%
	&quot;0.0511190919793&quot; probability: 38.42%</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.y one of { -0.0163321065972, 0.0495175525377, 0.0511190919793 }
	&quot;-0.0163321065972&quot; probability: 19.70%
	&quot;0.0495175525377&quot; probability: 41.88%
	&quot;0.0511190919793&quot; probability: 38.42%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &lt;= 0.0516373403817</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.y &lt;= 0.0516373403817</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &gt;= -0.0164068895762</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.y &gt;= -0.0164068895762</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x one of { -0.00660047310277, -0.00509819561463, -0.0035760342044, 5.12162687346E-4, 0.00183463533815 }
	&quot;-0.00660047310277&quot; probability: 0.20%
	&quot;-0.00509819561463&quot; probability: 19.38%
	&quot;-0.0035760342044&quot; probability: 0.13%
	&quot;5.12162687346E-4&quot; probability: 38.42%
	&quot;0.00183463533815&quot; probability: 41.88%</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.x one of { -0.00660047310277, -0.00509819561463, -0.0035760342044, 5.12162687346E-4, 0.00183463533815 }
	&quot;-0.00660047310277&quot; probability: 0.20%
	&quot;-0.00509819561463&quot; probability: 19.38%
	&quot;-0.0035760342044&quot; probability: 0.13%
	&quot;5.12162687346E-4&quot; probability: 38.42%
	&quot;0.00183463533815&quot; probability: 41.88%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &lt;= 0.00200351910224</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.x &lt;= 0.00200351910224</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &gt;= -0.00682536700315</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.x &gt;= -0.00682536700315</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w one of { 0.941338508324, 0.943236931927, 0.997787593551 }
	&quot;0.941338508324&quot; probability: 41.88%
	&quot;0.943236931927&quot; probability: 38.42%
	&quot;0.997787593551&quot; probability: 19.70%</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.w one of { 0.941338508324, 0.943236931927, 0.997787593551 }
	&quot;0.941338508324&quot; probability: 41.88%
	&quot;0.943236931927&quot; probability: 38.42%
	&quot;0.997787593551&quot; probability: 19.70%</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w != 0</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &lt;= 0.997811861822</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.w &lt;= 0.997811861822</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &gt;= 0.941333245338</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.w &gt;= 0.941333245338</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.rotation.z</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.x</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.rotation.w</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id &gt; return.header.frame_id</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.child_frame_id &gt; return.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt; return.transform.rotation.x</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.z &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &lt; return.transform.rotation.w</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.z &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt; return.transform.translation.x</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.z &gt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt; return.transform.translation.y</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.z &gt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &lt; return.transform.translation.y</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.translation.x &lt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &lt; return.transform.rotation.w</INV> <SAMPLES>27817</SAMPLES> <DAIKON>return.transform.rotation.x &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>viconOBSTACLEOBSTACLE()</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..viconTELLOTELLO():::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt;= 0.15384469518</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.y &lt;= 0.15384469518</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &gt;= -0.148955159691</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.y &gt;= -0.148955159691</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &lt;= 0.989430396819</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.z &lt;= 0.989430396819</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt;= -0.849271705385</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.z &gt;= -0.849271705385</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.secs != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &lt;= 1.27453156025</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.translation.z &lt;= 1.27453156025</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt;= 0.032206663297</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.translation.z &gt;= 0.032206663297</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.nsecs != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &lt;= 0.948488410625</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.translation.x &lt;= 0.948488410625</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &lt;= 1.27086651178</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.translation.y &lt;= 1.27086651178</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &lt;= 0.131962961177</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.x &lt;= 0.131962961177</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &gt;= -0.0748519850936</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.x &gt;= -0.0748519850936</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w != 0</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &lt;= 0.999947187683</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.w &lt;= 0.999947187683</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &gt;= -0.318975844154</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.w &gt;= -0.318975844154</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.z</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.w</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.child_frame_id &gt; return.header.frame_id</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.child_frame_id &gt; return.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.rotation.w</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != return.transform.rotation.w</INV> <SAMPLES>27685</SAMPLES> <DAIKON>return.transform.rotation.x != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>viconTELLOTELLO()</METHOD> </INVINFO>
</PPT>
</INVARIANTS>
