<INVARIANTS>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../obstacle_detector_next(std_msgs/Bool):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>19519</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/obstacle_detector_next(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../obstacle_detector_next(std_msgs/Bool):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == orig(param0.data)</INV> <SAMPLES>19519</SAMPLES> <DAIKON>param0.data == orig(param0.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/obstacle_detector_next(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>19519</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/obstacle_detector_next(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../obstacle_detector_until(std_msgs/Bool):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>13</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/obstacle_detector_until(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../obstacle_detector_until(std_msgs/Bool):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == orig(param0.data)</INV> <SAMPLES>13</SAMPLES> <DAIKON>param0.data == orig(param0.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/obstacle_detector_until(std_msgs/Bool)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>13</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/obstacle_detector_until(std_msgs/Bool)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../state_next(std_msgs/String):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>10426</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/state_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 8.21%	count:848.0 total:10327.0
	&quot;Finished behavior&quot; probability: 0.12%	count:12.0 total:10327.0
	&quot;GO TO GOAL&quot; probability: 74.61%	count:7705.0 total:10327.0
	&quot;GOAL REACHED&quot; probability: 0.07%	count:7.0 total:10327.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 4.37%	count:451.0 total:10327.0
	&quot;NO VICON DATA; LANDING&quot; probability: 12.63%	count:1304.0 total:10327.0</INV> <SAMPLES>10426</SAMPLES> <DAIKON>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 8.21%	count:848.0 total:10327.0
	&quot;Finished behavior&quot; probability: 0.12%	count:12.0 total:10327.0
	&quot;GO TO GOAL&quot; probability: 74.61%	count:7705.0 total:10327.0
	&quot;GOAL REACHED&quot; probability: 0.07%	count:7.0 total:10327.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 4.37%	count:451.0 total:10327.0
	&quot;NO VICON DATA; LANDING&quot; probability: 12.63%	count:1304.0 total:10327.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/state_next(std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../state_next(std_msgs/String):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == orig(param0.data)</INV> <SAMPLES>10426</SAMPLES> <DAIKON>param0.data == orig(param0.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/state_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 8.21%	count:848.0 total:10327.0
	&quot;Finished behavior&quot; probability: 0.12%	count:12.0 total:10327.0
	&quot;GO TO GOAL&quot; probability: 74.61%	count:7705.0 total:10327.0
	&quot;GOAL REACHED&quot; probability: 0.07%	count:7.0 total:10327.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 4.37%	count:451.0 total:10327.0
	&quot;NO VICON DATA; LANDING&quot; probability: 12.63%	count:1304.0 total:10327.0</INV> <SAMPLES>10426</SAMPLES> <DAIKON>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 8.21%	count:848.0 total:10327.0
	&quot;Finished behavior&quot; probability: 0.12%	count:12.0 total:10327.0
	&quot;GO TO GOAL&quot; probability: 74.61%	count:7705.0 total:10327.0
	&quot;GOAL REACHED&quot; probability: 0.07%	count:7.0 total:10327.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 4.37%	count:451.0 total:10327.0
	&quot;NO VICON DATA; LANDING&quot; probability: 12.63%	count:1304.0 total:10327.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/state_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>10426</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/state_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 8.21%	count:848.0 total:10328.0
	&quot;Finished behavior&quot; probability: 0.15%	count:16.0 total:10328.0
	&quot;GO TO GOAL&quot; probability: 74.56%	count:7701.0 total:10328.0
	&quot;GOAL REACHED&quot; probability: 0.07%	count:7.0 total:10328.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 4.37%	count:451.0 total:10328.0
	&quot;NO VICON DATA; LANDING&quot; probability: 12.64%	count:1305.0 total:10328.0</INV> <SAMPLES>10426</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 8.21%	count:848.0 total:10328.0
	&quot;Finished behavior&quot; probability: 0.15%	count:16.0 total:10328.0
	&quot;GO TO GOAL&quot; probability: 74.56%	count:7701.0 total:10328.0
	&quot;GOAL REACHED&quot; probability: 0.07%	count:7.0 total:10328.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 4.37%	count:451.0 total:10328.0
	&quot;NO VICON DATA; LANDING&quot; probability: 12.64%	count:1305.0 total:10328.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/state_next(std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../state_until(std_msgs/String):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>43</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/state_until(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 18.60%	count:8.0 total:43.0
	&quot;Finished behavior&quot; probability: 2.33%	count:1.0 total:43.0
	&quot;GO TO GOAL&quot; probability: 62.79%	count:27.0 total:43.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;NO VICON DATA; LANDING&quot; probability: 4.65%	count:2.0 total:43.0</INV> <SAMPLES>43</SAMPLES> <DAIKON>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 18.60%	count:8.0 total:43.0
	&quot;Finished behavior&quot; probability: 2.33%	count:1.0 total:43.0
	&quot;GO TO GOAL&quot; probability: 62.79%	count:27.0 total:43.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;NO VICON DATA; LANDING&quot; probability: 4.65%	count:2.0 total:43.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/state_until(std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../state_until(std_msgs/String):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == orig(param0.data)</INV> <SAMPLES>43</SAMPLES> <DAIKON>param0.data == orig(param0.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/state_until(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 18.60%	count:8.0 total:43.0
	&quot;Finished behavior&quot; probability: 2.33%	count:1.0 total:43.0
	&quot;GO TO GOAL&quot; probability: 62.79%	count:27.0 total:43.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;NO VICON DATA; LANDING&quot; probability: 4.65%	count:2.0 total:43.0</INV> <SAMPLES>43</SAMPLES> <DAIKON>param0.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 18.60%	count:8.0 total:43.0
	&quot;Finished behavior&quot; probability: 2.33%	count:1.0 total:43.0
	&quot;GO TO GOAL&quot; probability: 62.79%	count:27.0 total:43.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;NO VICON DATA; LANDING&quot; probability: 4.65%	count:2.0 total:43.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/state_until(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>43</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/state_until(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 16.28%	count:7.0 total:43.0
	&quot;Finished behavior&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;GO TO GOAL&quot; probability: 37.21%	count:16.0 total:43.0
	&quot;GOAL REACHED&quot; probability: 16.28%	count:7.0 total:43.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;NO VICON DATA; LANDING&quot; probability: 6.98%	count:3.0 total:43.0</INV> <SAMPLES>43</SAMPLES> <DAIKON>return.data one of { &quot;AVOIDING&quot;, &quot;Finished behavior&quot;, &quot;GO TO GOAL&quot;, &quot;GOAL REACHED&quot;, &quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot;, &quot;NO VICON DATA; LANDING&quot; }
	&quot;AVOIDING&quot; probability: 16.28%	count:7.0 total:43.0
	&quot;Finished behavior&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;GO TO GOAL&quot; probability: 37.21%	count:16.0 total:43.0
	&quot;GOAL REACHED&quot; probability: 16.28%	count:7.0 total:43.0
	&quot;HOVERING AT OBSTACLE; WAITING FOR USER INPUT&quot; probability: 11.63%	count:5.0 total:43.0
	&quot;NO VICON DATA; LANDING&quot; probability: 6.98%	count:3.0 total:43.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/state_until(std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../user_input_next(std_msgs/String):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>4</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.data == &quot;y&quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>param0.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.data == &quot;y&quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>param0.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../user_input_next(std_msgs/String):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == return.data</INV> <SAMPLES>4</SAMPLES> <DAIKON>param0.data == return.data</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == orig(param0.data)</INV> <SAMPLES>4</SAMPLES> <DAIKON>param0.data == orig(param0.data)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == &quot;y&quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>param0.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.data == &quot;y&quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>param0.data == &quot;y&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>4</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/user_input_next(std_msgs/String)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../velocity_next(geometry_msgs/Twist):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == param0.angular.x</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == param0.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == param0.angular.z</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == param0.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.y &lt;= 1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.y &gt;= -1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.x &lt;= 1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.x &gt;= -1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 12.19%	count:1332.0 total:10931.0
	&quot;-200.0&quot; probability: 0.24%	count:26.0 total:10931.0
	&quot;0.0&quot; probability: 87.58%	count:9573.0 total:10931.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 12.19%	count:1332.0 total:10931.0
	&quot;-200.0&quot; probability: 0.24%	count:26.0 total:10931.0
	&quot;0.0&quot; probability: 87.58%	count:9573.0 total:10931.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.z &lt;= param0.angular.y</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z &lt;= param0.angular.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../velocity_next(geometry_msgs/Twist):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.y == orig(param0.linear.y)</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.y == orig(param0.linear.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.x == orig(param0.linear.x)</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.x == orig(param0.linear.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z == orig(param0.linear.z)</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z == orig(param0.linear.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == param0.angular.x</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == param0.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == param0.angular.z</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == param0.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == return.angular.y</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == return.angular.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == return.angular.x</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == return.angular.z</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == orig(param0.angular.y)</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == orig(param0.angular.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == orig(param0.angular.x)</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == orig(param0.angular.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == orig(param0.angular.z)</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == orig(param0.angular.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.y &lt;= 1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.y &gt;= -1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.x &lt;= 1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.x &gt;= -1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 12.19%	count:1332.0 total:10931.0
	&quot;-200.0&quot; probability: 0.24%	count:26.0 total:10931.0
	&quot;0.0&quot; probability: 87.58%	count:9573.0 total:10931.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 12.19%	count:1332.0 total:10931.0
	&quot;-200.0&quot; probability: 0.24%	count:26.0 total:10931.0
	&quot;0.0&quot; probability: 87.58%	count:9573.0 total:10931.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>12233</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -500.0, -200.0, 0.0 }</INV> <SAMPLES>12233</SAMPLES> <DAIKON>return.linear.z one of { -500.0, -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 12.19%	count:1333.0 total:10932.0
	&quot;-200.0&quot; probability: 0.27%	count:30.0 total:10932.0
	&quot;0.0&quot; probability: 87.53%	count:9569.0 total:10932.0</INV> <SAMPLES>12233</SAMPLES> <DAIKON>return.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 12.19%	count:1333.0 total:10932.0
	&quot;-200.0&quot; probability: 0.27%	count:30.0 total:10932.0
	&quot;0.0&quot; probability: 87.53%	count:9569.0 total:10932.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z &lt;= param0.angular.y</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z &lt;= param0.angular.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z &gt;= return.linear.z</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.linear.z &gt;= return.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y &gt;= return.linear.z</INV> <SAMPLES>12233</SAMPLES> <DAIKON>param0.angular.y &gt;= return.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS> <METHOD>/velocity_next(geometry_msgs/Twist)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../velocity_until(geometry_msgs/Twist):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == param0.angular.x</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == param0.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == param0.angular.z</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == param0.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.y &lt;= 0.299910584918</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.y &lt;= 0.299910584918</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.y &gt;= -1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.x &lt;= 0.183023385646</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.x &lt;= 0.183023385646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.x &gt;= -1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 1.28%	count:30.0 total:2343.0
	&quot;-200.0&quot; probability: 0.64%	count:15.0 total:2343.0
	&quot;0.0&quot; probability: 98.08%	count:2298.0 total:2343.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 1.28%	count:30.0 total:2343.0
	&quot;-200.0&quot; probability: 0.64%	count:15.0 total:2343.0
	&quot;0.0&quot; probability: 98.08%	count:2298.0 total:2343.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.y &gt;= param0.linear.x</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.y &gt;= param0.linear.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.linear.z &lt;= param0.angular.y</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z &lt;= param0.angular.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../velocity_until(geometry_msgs/Twist):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.y == orig(param0.linear.y)</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.y == orig(param0.linear.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.x == orig(param0.linear.x)</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.x == orig(param0.linear.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z == orig(param0.linear.z)</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z == orig(param0.linear.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == param0.angular.x</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == param0.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == param0.angular.z</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == param0.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == return.angular.y</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == return.angular.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == return.angular.x</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == return.angular.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == return.angular.z</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == return.angular.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == orig(param0.angular.y)</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == orig(param0.angular.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == orig(param0.angular.x)</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == orig(param0.angular.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == orig(param0.angular.z)</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == orig(param0.angular.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.y &lt;= 0.299910584918</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.y &lt;= 0.299910584918</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.y &gt;= -1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.x &lt;= 0.183023385646</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.x &lt;= 0.183023385646</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.x &gt;= -1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 1.28%	count:30.0 total:2343.0
	&quot;-200.0&quot; probability: 0.64%	count:15.0 total:2343.0
	&quot;0.0&quot; probability: 98.08%	count:2298.0 total:2343.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 1.28%	count:30.0 total:2343.0
	&quot;-200.0&quot; probability: 0.64%	count:15.0 total:2343.0
	&quot;0.0&quot; probability: 98.08%	count:2298.0 total:2343.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y == 0.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>5915</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &lt;= 1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>return.linear.y &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.y &gt;= -1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>return.linear.y &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &lt;= 1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>return.linear.x &lt;= 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.x &gt;= -1.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>return.linear.x &gt;= -1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -500.0, -200.0, 0.0 }</INV> <SAMPLES>5915</SAMPLES> <DAIKON>return.linear.z one of { -500.0, -200.0, 0.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 0.58%	count:31.0 total:5319.0
	&quot;-200.0&quot; probability: 0.36%	count:19.0 total:5319.0
	&quot;0.0&quot; probability: 99.06%	count:5269.0 total:5319.0</INV> <SAMPLES>5915</SAMPLES> <DAIKON>return.linear.z one of { -500.0, -200.0, 0.0 }
	&quot;-500.0&quot; probability: 0.58%	count:31.0 total:5319.0
	&quot;-200.0&quot; probability: 0.36%	count:19.0 total:5319.0
	&quot;0.0&quot; probability: 99.06%	count:5269.0 total:5319.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.y &gt;= param0.linear.x</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.y &gt;= param0.linear.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z &lt;= param0.angular.y</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z &lt;= param0.angular.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.linear.z &gt;= return.linear.z</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.linear.z &gt;= return.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.angular.y &gt;= return.linear.z</INV> <SAMPLES>5915</SAMPLES> <DAIKON>param0.angular.y &gt;= return.linear.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS> <METHOD>/velocity_until(geometry_msgs/Twist)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y == -0.0105208839982</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y == -0.0105208839982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt;= 4.9E-324</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0111733374392</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0111733374392</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z == 0.818811947658</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z == 0.818811947658</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &lt;= 0.819544261703</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.819544261703</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt;= 0.818296585909</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= 0.818296585909</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z == 0.279116385858</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z == 0.279116385858</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &lt;= 0.279758435524</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.279758435524</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt;= 0.278205928629</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.278205928629</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x one of { 0.0621190733053, 0.0635759116858 }
	&quot;0.0621190733053&quot; probability: 50.55%	count:25004.0 total:49461.0
	&quot;0.0635759116858&quot; probability: 49.45%	count:24457.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x one of { 0.0621190733053, 0.0635759116858 }
	&quot;0.0621190733053&quot; probability: 50.55%	count:25004.0 total:49461.0
	&quot;0.0635759116858&quot; probability: 49.45%	count:24457.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x &lt;= 0.0640522618037</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.0640522618037</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x &gt;= 0.0620358680305</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &gt;= 0.0620358680305</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y == 0.0829663294191</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y == 0.0829663294191</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y &lt;= 0.0833076772892</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 0.0833076772892</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y &gt;= 0.0825048181016</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &gt;= 0.0825048181016</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x one of { -0.0045950947767, -0.003495158897, -0.00247449186303, -0.00134354687998, -2.22561677504E-4 }
	&quot;-0.0045950947767&quot; probability: 0.06%	count:30.0 total:49461.0
	&quot;-0.003495158897&quot; probability: 0.02%	count:8.0 total:49461.0
	&quot;-0.00247449186303&quot; probability: 0.15%	count:74.0 total:49461.0
	&quot;-0.00134354687998&quot; probability: 99.77%	count:49347.0 total:49461.0
	&quot;-2.22561677504E-4&quot; probability: 0.00%	count:2.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x one of { -0.0045950947767, -0.003495158897, -0.00247449186303, -0.00134354687998, -2.22561677504E-4 }
	&quot;-0.0045950947767&quot; probability: 0.06%	count:30.0 total:49461.0
	&quot;-0.003495158897&quot; probability: 0.02%	count:8.0 total:49461.0
	&quot;-0.00247449186303&quot; probability: 0.15%	count:74.0 total:49461.0
	&quot;-0.00134354687998&quot; probability: 99.77%	count:49347.0 total:49461.0
	&quot;-2.22561677504E-4&quot; probability: 0.00%	count:2.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt;= 4.9E-324</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt;= -0.00463780310853</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= -0.00463780310853</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w one of { 0.572955475991, 0.573963849257 }
	&quot;0.572955475991&quot; probability: 0.01%	count:7.0 total:49461.0
	&quot;0.573963849257&quot; probability: 99.99%	count:49454.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.572955475991, 0.573963849257 }
	&quot;0.572955475991&quot; probability: 0.01%	count:7.0 total:49461.0
	&quot;0.573963849257&quot; probability: 99.99%	count:49454.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &lt;= 0.574689134208</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.574689134208</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &gt;= 0.572918225042</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.572918225042</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.secs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>3.8061267027E10 * param0.transform.rotation.z + 2.7798941578E10 * param0.transform.rotation.w - 4.7120607698E10 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>3.8061267027E10 * param0.transform.rotation.z + 2.7798941578E10 * param0.transform.rotation.w - 4.7120607698E10 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.LinearBinaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x &lt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>1.592748547050921E15 * param0.transform.rotation.y - 1.30072994336335392E17 * param0.transform.rotation.z - 9.0971183985941024E16 * param0.transform.rotation.w + 1.5873624988498208E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.592748547050921E15 * param0.transform.rotation.y - 1.30072994336335392E17 * param0.transform.rotation.z - 9.0971183985941024E16 * param0.transform.rotation.w + 1.5873624988498208E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>5.0267433342602227E17 * param0.transform.rotation.z - 3.73421201491225E14 * param0.transform.translation.z + 3.5036910104103405E17 * param0.transform.rotation.w - 6.1259090183194112E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>5.0267433342602227E17 * param0.transform.rotation.z - 3.73421201491225E14 * param0.transform.translation.z + 3.5036910104103405E17 * param0.transform.rotation.w - 6.1259090183194112E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>1.79170851690447053E18 * param0.transform.rotation.z - 1.499922006664487E15 * param0.transform.translation.x + 1.24228383919509965E18 * param0.transform.rotation.w - 2.18000518081107507E18 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.79170851690447053E18 * param0.transform.rotation.z - 1.499922006664487E15 * param0.transform.translation.x + 1.24228383919509965E18 * param0.transform.rotation.w - 2.18000518081107507E18 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>2.71482801600748736E17 * param0.transform.rotation.z - 3.99996326586705E14 * param0.transform.translation.y + 1.88281668208992864E17 * param0.transform.rotation.w - 3.3032704633712435E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>2.71482801600748736E17 * param0.transform.rotation.z - 3.99996326586705E14 * param0.transform.translation.y + 1.88281668208992864E17 * param0.transform.rotation.w - 3.3032704633712435E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>1.07065823781194864E17 * param0.transform.rotation.z + 3.99996326586705E14 * param0.transform.rotation.x + 7.4047235076773296E16 * param0.transform.rotation.w - 1.30166674355574528E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.07065823781194864E17 * param0.transform.rotation.z + 3.99996326586705E14 * param0.transform.rotation.x + 7.4047235076773296E16 * param0.transform.rotation.w - 1.30166674355574528E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq == orig(param0.header.seq)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq == orig(param0.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y == orig(param0.transform.rotation.y)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y == orig(param0.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == return.child_frame_id</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id == return.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == orig(param0.child_frame_id)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id == orig(param0.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == return.header.frame_id</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.frame_id == return.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == orig(param0.header.frame_id)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.frame_id == orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z == orig(param0.transform.rotation.z)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z == orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs == orig(param0.header.stamp.secs)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs == orig(param0.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z == orig(param0.transform.translation.z)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z == orig(param0.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs == orig(param0.header.stamp.nsecs)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.nsecs == orig(param0.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x == orig(param0.transform.translation.x)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x == orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y == orig(param0.transform.translation.y)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y == orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x == orig(param0.transform.rotation.x)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x == orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w == orig(param0.transform.rotation.w)</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w == orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y == -0.0105208839982</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y == -0.0105208839982</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt;= 4.9E-324</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &gt;= -0.0111733374392</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.0111733374392</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/OBSTACLE/OBSTACLE&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z == 0.818811947658</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z == 0.818811947658</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &lt;= 0.819544261703</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.819544261703</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt;= 0.818296585909</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= 0.818296585909</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z == 0.279116385858</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z == 0.279116385858</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &lt;= 0.279758435524</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 0.279758435524</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt;= 0.278205928629</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.278205928629</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x one of { 0.0621190733053, 0.0635759116858 }
	&quot;0.0621190733053&quot; probability: 50.55%	count:25004.0 total:49461.0
	&quot;0.0635759116858&quot; probability: 49.45%	count:24457.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x one of { 0.0621190733053, 0.0635759116858 }
	&quot;0.0621190733053&quot; probability: 50.55%	count:25004.0 total:49461.0
	&quot;0.0635759116858&quot; probability: 49.45%	count:24457.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &lt;= 0.0640522618037</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt;= 0.0640522618037</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &gt;= 0.0620358680305</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &gt;= 0.0620358680305</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y == 0.0829663294191</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y == 0.0829663294191</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &lt;= 0.0833076772892</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &lt;= 0.0833076772892</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &gt;= 0.0825048181016</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &gt;= 0.0825048181016</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x one of { -0.0045950947767, -0.003495158897, -0.00247449186303, -0.00134354687998, -2.22561677504E-4 }
	&quot;-0.0045950947767&quot; probability: 0.06%	count:30.0 total:49461.0
	&quot;-0.003495158897&quot; probability: 0.02%	count:8.0 total:49461.0
	&quot;-0.00247449186303&quot; probability: 0.15%	count:74.0 total:49461.0
	&quot;-0.00134354687998&quot; probability: 99.77%	count:49347.0 total:49461.0
	&quot;-2.22561677504E-4&quot; probability: 0.00%	count:2.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x one of { -0.0045950947767, -0.003495158897, -0.00247449186303, -0.00134354687998, -2.22561677504E-4 }
	&quot;-0.0045950947767&quot; probability: 0.06%	count:30.0 total:49461.0
	&quot;-0.003495158897&quot; probability: 0.02%	count:8.0 total:49461.0
	&quot;-0.00247449186303&quot; probability: 0.15%	count:74.0 total:49461.0
	&quot;-0.00134354687998&quot; probability: 99.77%	count:49347.0 total:49461.0
	&quot;-2.22561677504E-4&quot; probability: 0.00%	count:2.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt;= 4.9E-324</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &gt;= -0.00463780310853</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= -0.00463780310853</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w one of { 0.572955475991, 0.573963849257 }
	&quot;0.572955475991&quot; probability: 0.01%	count:7.0 total:49461.0
	&quot;0.573963849257&quot; probability: 99.99%	count:49454.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w one of { 0.572955475991, 0.573963849257 }
	&quot;0.572955475991&quot; probability: 0.01%	count:7.0 total:49461.0
	&quot;0.573963849257&quot; probability: 99.99%	count:49454.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &lt;= 0.574689134208</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.574689134208</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &gt;= 0.572918225042</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= 0.572918225042</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y == -0.010489929217</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y == -0.010489929217</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt;= 4.9E-324</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &gt;= -0.0111733374392</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &gt;= -0.0111733374392</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z == 0.818818120263</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z == 0.818818120263</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &lt;= 0.819544261703</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z &lt;= 0.819544261703</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt;= 0.818296585909</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z &gt;= 0.818296585909</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.secs != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z == 0.27912125938</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z == 0.27912125938</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &lt;= 0.279758435524</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z &lt;= 0.279758435524</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt;= 0.278205928629</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z &gt;= 0.278205928629</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.nsecs != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x one of { 0.062494938404, 0.0635759116858 }
	&quot;0.062494938404&quot; probability: 53.98%	count:26701.0 total:49461.0
	&quot;0.0635759116858&quot; probability: 46.02%	count:22760.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.x one of { 0.062494938404, 0.0635759116858 }
	&quot;0.062494938404&quot; probability: 53.98%	count:26701.0 total:49461.0
	&quot;0.0635759116858&quot; probability: 46.02%	count:22760.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &lt;= 0.0640522618037</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.x &lt;= 0.0640522618037</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &gt;= 0.0620358680305</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.x &gt;= 0.0620358680305</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y == 0.0831776599207</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.y == 0.0831776599207</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &lt;= 0.0833076772892</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.y &lt;= 0.0833076772892</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &gt;= 0.0825048181016</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.y &gt;= 0.0825048181016</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x one of { -0.0045950947767, -0.003495158897, -0.00247449186303, -0.001431246974, -2.22561677504E-4 }
	&quot;-0.0045950947767&quot; probability: 0.06%	count:30.0 total:49461.0
	&quot;-0.003495158897&quot; probability: 0.02%	count:8.0 total:49461.0
	&quot;-0.00247449186303&quot; probability: 0.01%	count:6.0 total:49461.0
	&quot;-0.001431246974&quot; probability: 99.91%	count:49415.0 total:49461.0
	&quot;-2.22561677504E-4&quot; probability: 0.00%	count:2.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.x one of { -0.0045950947767, -0.003495158897, -0.00247449186303, -0.001431246974, -2.22561677504E-4 }
	&quot;-0.0045950947767&quot; probability: 0.06%	count:30.0 total:49461.0
	&quot;-0.003495158897&quot; probability: 0.02%	count:8.0 total:49461.0
	&quot;-0.00247449186303&quot; probability: 0.01%	count:6.0 total:49461.0
	&quot;-0.001431246974&quot; probability: 99.91%	count:49415.0 total:49461.0
	&quot;-2.22561677504E-4&quot; probability: 0.00%	count:2.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &lt;= 4.9E-324</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.x &lt;= 4.9E-324</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &gt;= -0.00463780310853</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.x &gt;= -0.00463780310853</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w one of { 0.57295072683, 0.573955397958 }
	&quot;0.57295072683&quot; probability: 0.01%	count:5.0 total:49461.0
	&quot;0.573955397958&quot; probability: 99.99%	count:49456.0 total:49461.0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.w one of { 0.57295072683, 0.573955397958 }
	&quot;0.57295072683&quot; probability: 0.01%	count:5.0 total:49461.0
	&quot;0.573955397958&quot; probability: 99.99%	count:49456.0 total:49461.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w != 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &lt;= 0.574689134208</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.w &lt;= 0.574689134208</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &gt;= 0.572918225042</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.w &gt;= 0.572918225042</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.secs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq - return.header.seq + 1 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq - return.header.seq + 1 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.LinearBinary</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; return.header.stamp.secs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq &lt; return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; return.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.seq &lt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; return.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.y &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>3.8061267027E10 * param0.transform.rotation.z + 2.7798941578E10 * param0.transform.rotation.w - 4.7120607698E10 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>3.8061267027E10 * param0.transform.rotation.z + 2.7798941578E10 * param0.transform.rotation.w - 4.7120607698E10 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.LinearBinaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; return.transform.rotation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.z &gt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &gt; return.header.seq</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; return.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &lt;= return.header.stamp.secs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs &lt;= return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &gt; return.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt; return.transform.rotation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &lt; return.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.z &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs &gt; return.header.seq</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.nsecs &gt; return.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs &lt; return.header.stamp.secs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.nsecs &lt; return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs != return.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.header.stamp.nsecs != return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &lt; param0.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &gt; return.transform.rotation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &gt; return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &lt; return.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &lt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &lt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.x &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &gt; param0.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &gt; param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &gt; return.transform.rotation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &gt; return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &lt; return.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &lt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &lt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &gt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &gt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.translation.y &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt; param0.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &gt; return.transform.rotation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &gt; return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt; return.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.x &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &gt; return.transform.rotation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &lt; return.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &gt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &gt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &gt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>param0.transform.rotation.w &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq &lt; return.header.stamp.secs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.header.seq &lt; return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq &lt; return.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.header.seq &lt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.rotation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.y &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt; return.transform.translation.z</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z &gt; return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z &gt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z &gt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>3.02039034106E11 * return.transform.rotation.z + 2.0958153888E11 * return.transform.rotation.w - 3.67605489705E11 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>3.02039034106E11 * return.transform.rotation.z + 2.0958153888E11 * return.transform.rotation.w - 3.67605489705E11 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.LinearBinaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.z &gt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.secs &gt; return.header.stamp.nsecs</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.header.stamp.secs &gt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt; return.transform.translation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z &gt; return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z &gt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.z &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &lt; return.transform.translation.y</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.x &lt; return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.x &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.x &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &gt; return.transform.rotation.x</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.y &gt; return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.translation.y &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &lt; return.transform.rotation.w</INV> <SAMPLES>49461</SAMPLES> <DAIKON>return.transform.rotation.x &lt; return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>1.592748547050921E15 * param0.transform.rotation.y - 1.30072994336335392E17 * param0.transform.rotation.z - 9.0971183985941024E16 * param0.transform.rotation.w + 1.5873624988498208E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.592748547050921E15 * param0.transform.rotation.y - 1.30072994336335392E17 * param0.transform.rotation.z - 9.0971183985941024E16 * param0.transform.rotation.w + 1.5873624988498208E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>5.9423570293865E13 * param0.transform.rotation.y - 1.7443363190089374E16 * return.transform.rotation.z - 1.2208905077162282E16 * return.transform.rotation.w + 2.1290934019057736E16 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>5.9423570293865E13 * param0.transform.rotation.y - 1.7443363190089374E16 * return.transform.rotation.z - 1.2208905077162282E16 * return.transform.rotation.w + 2.1290934019057736E16 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>5.0267433342602227E17 * param0.transform.rotation.z - 3.73421201491225E14 * param0.transform.translation.z + 3.5036910104103405E17 * param0.transform.rotation.w - 6.1259090183194112E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>5.0267433342602227E17 * param0.transform.rotation.z - 3.73421201491225E14 * param0.transform.translation.z + 3.5036910104103405E17 * param0.transform.rotation.w - 6.1259090183194112E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>1.79170851690447053E18 * param0.transform.rotation.z - 1.499922006664487E15 * param0.transform.translation.x + 1.24228383919509965E18 * param0.transform.rotation.w - 2.18000518081107507E18 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.79170851690447053E18 * param0.transform.rotation.z - 1.499922006664487E15 * param0.transform.translation.x + 1.24228383919509965E18 * param0.transform.rotation.w - 2.18000518081107507E18 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>2.71482801600748736E17 * param0.transform.rotation.z - 3.99996326586705E14 * param0.transform.translation.y + 1.88281668208992864E17 * param0.transform.rotation.w - 3.3032704633712435E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>2.71482801600748736E17 * param0.transform.rotation.z - 3.99996326586705E14 * param0.transform.translation.y + 1.88281668208992864E17 * param0.transform.rotation.w - 3.3032704633712435E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>1.07065823781194864E17 * param0.transform.rotation.z + 3.99996326586705E14 * param0.transform.rotation.x + 7.4047235076773296E16 * param0.transform.rotation.w - 1.30166674355574528E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.07065823781194864E17 * param0.transform.rotation.z + 3.99996326586705E14 * param0.transform.rotation.x + 7.4047235076773296E16 * param0.transform.rotation.w - 1.30166674355574528E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>4.4925340052707648E17 * param0.transform.rotation.z + 3.1177993000392077E17 * param0.transform.rotation.w - 5.704768784611823E15 * return.transform.rotation.y - 5.4686430324443341E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>4.4925340052707648E17 * param0.transform.rotation.z + 3.1177993000392077E17 * param0.transform.rotation.w - 5.704768784611823E15 * return.transform.rotation.y - 5.4686430324443341E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>9.7258553655069728E16 * param0.transform.rotation.z + 6.1622936594870776E16 * param0.transform.rotation.w + 4.36241603075009E14 * return.transform.rotation.z - 1.15363083346389792E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>9.7258553655069728E16 * param0.transform.rotation.z + 6.1622936594870776E16 * param0.transform.rotation.w + 4.36241603075009E14 * return.transform.rotation.z - 1.15363083346389792E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>6.3867322830949325E17 * param0.transform.rotation.z + 4.4326465133025818E17 * param0.transform.rotation.w - 6.7603082203709E13 * return.transform.translation.z - 7.7735248278807872E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>6.3867322830949325E17 * param0.transform.rotation.z + 4.4326465133025818E17 * param0.transform.rotation.w - 6.7603082203709E13 * return.transform.translation.z - 7.7735248278807872E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>5.712547394124448E17 * param0.transform.rotation.z + 4.0510652896744397E17 * param0.transform.rotation.w + 3.73421201491225E14 * return.transform.translation.x - 7.0029043714374234E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>5.712547394124448E17 * param0.transform.rotation.z + 4.0510652896744397E17 * param0.transform.rotation.w + 3.73421201491225E14 * return.transform.translation.x - 7.0029043714374234E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>3.027673688380952E16 * param0.transform.rotation.z + 2.1066639047168628E16 * param0.transform.rotation.w + 6.7603082203709E13 * return.transform.translation.y - 3.6888075422921424E16 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>3.027673688380952E16 * param0.transform.rotation.z + 2.1066639047168628E16 * param0.transform.rotation.w + 6.7603082203709E13 * return.transform.translation.y - 3.6888075422921424E16 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>1.02933372916987878E18 * param0.transform.rotation.z + 7.1609844211098342E17 * param0.transform.rotation.w - 5.704768784611823E15 * return.transform.rotation.x - 1.25385353878568218E18 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.02933372916987878E18 * param0.transform.rotation.z + 7.1609844211098342E17 * param0.transform.rotation.w - 5.704768784611823E15 * return.transform.rotation.x - 1.25385353878568218E18 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>1.39171919563848384E17 * param0.transform.rotation.z + 8.8187198884553824E16 * param0.transform.rotation.w - 4.36241603075009E14 * return.transform.rotation.w - 1.6432162174012528E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.39171919563848384E17 * param0.transform.rotation.z + 8.8187198884553824E16 * param0.transform.rotation.w - 4.36241603075009E14 * return.transform.rotation.w - 1.6432162174012528E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>7.4282231739865E13 * param0.transform.rotation.z - 5.71159204664713E15 * return.transform.rotation.z - 3.968855658727803E15 * return.transform.rotation.w + 6.893878013540378E15 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>7.4282231739865E13 * param0.transform.rotation.z - 5.71159204664713E15 * return.transform.rotation.z - 3.968855658727803E15 * return.transform.rotation.w + 6.893878013540378E15 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>9.7232123712117E13 * param0.transform.translation.z + 1.36906526438344784E17 * return.transform.rotation.z + 9.5368348049551984E16 * return.transform.rotation.w - 1.66865922827141952E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>9.7232123712117E13 * param0.transform.translation.z + 1.36906526438344784E17 * return.transform.rotation.z + 9.5368348049551984E16 * return.transform.rotation.w - 1.66865922827141952E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>5.9423570293865E13 * param0.transform.translation.x - 2.2706991629514688E17 * return.transform.rotation.z - 1.5913259337685952E17 * return.transform.rotation.w + 2.77260281651653792E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>5.9423570293865E13 * param0.transform.translation.x - 2.2706991629514688E17 * return.transform.rotation.z - 1.5913259337685952E17 * return.transform.rotation.w + 2.77260281651653792E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>9.72684790653149E14 * param0.transform.translation.y - 4.4734675196092659E17 * return.transform.rotation.z - 3.1339669685889389E17 * return.transform.rotation.w + 5.4609065232401126E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>9.72684790653149E14 * param0.transform.translation.y - 4.4734675196092659E17 * return.transform.rotation.z - 3.1339669685889389E17 * return.transform.rotation.w + 5.4609065232401126E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>6.957864352738E12 * param0.transform.rotation.x - 7.32817345376388E15 * return.transform.rotation.z - 5.117417002931502E15 * return.transform.rotation.w + 8.937620921099417E15 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>6.957864352738E12 * param0.transform.rotation.x - 7.32817345376388E15 * return.transform.rotation.z - 5.117417002931502E15 * return.transform.rotation.w + 8.937620921099417E15 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>7.4282231739865E13 * param0.transform.rotation.w + 8.184503483532468E15 * return.transform.rotation.z + 5.684906669805152E15 * return.transform.rotation.w - 1.0007137943354948E16 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>7.4282231739865E13 * param0.transform.rotation.w + 8.184503483532468E15 * return.transform.rotation.z + 5.684906669805152E15 * return.transform.rotation.w - 1.0007137943354948E16 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>9.7232123712117E13 * return.transform.rotation.y - 5.139156474679958E15 * return.transform.rotation.z - 3.602150825730423E15 * return.transform.rotation.w + 6.276527987810966E15 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>9.7232123712117E13 * return.transform.rotation.y - 5.139156474679958E15 * return.transform.rotation.z - 3.602150825730423E15 * return.transform.rotation.w + 6.276527987810966E15 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>5.0267433342602227E17 * return.transform.rotation.z - 3.73421201491225E14 * return.transform.translation.z + 3.5036910104103405E17 * return.transform.rotation.w - 6.1259090183194112E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>5.0267433342602227E17 * return.transform.rotation.z - 3.73421201491225E14 * return.transform.translation.z + 3.5036910104103405E17 * return.transform.rotation.w - 6.1259090183194112E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>3.4205320361776768E17 * return.transform.rotation.z - 5.5901415737181E13 * return.transform.translation.x + 2.41611681815615264E17 * return.transform.rotation.w - 4.1875034098031341E17 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>3.4205320361776768E17 * return.transform.rotation.z - 5.5901415737181E13 * return.transform.translation.x + 2.41611681815615264E17 * return.transform.rotation.w - 4.1875034098031341E17 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>1.5091171966343708E16 * return.transform.rotation.z + 2.75573709028115E14 * return.transform.translation.y + 1.053858926156172E16 * return.transform.rotation.w - 1.8428526831835424E16 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>1.5091171966343708E16 * return.transform.rotation.z + 2.75573709028115E14 * return.transform.translation.y + 1.053858926156172E16 * return.transform.rotation.w - 1.8428526831835424E16 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>4.1512944065663344E16 * return.transform.rotation.z - 2.75573709028115E14 * return.transform.rotation.x + 2.897385482270462E16 * return.transform.rotation.w - 5.0621645615609432E16 == 0</INV> <SAMPLES>49461</SAMPLES> <DAIKON>4.1512944065663344E16 * return.transform.rotation.z - 2.75573709028115E14 * return.transform.rotation.x + 2.897385482270462E16 * return.transform.rotation.w - 5.0621645615609432E16 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.ternary.threeScalar.LinearTernaryFloat</DAIKONCLASS> <METHOD>/vicon/OBSTACLE/OBSTACLE_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped):::ENTER</PPTNAME>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0 != null</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0 != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &lt;= 0.165534916989</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.165534916989</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y &gt;= -0.204478604573</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.204478604573</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &lt;= 0.989806819629</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.989806819629</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z &gt;= -0.851000652949</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.851000652949</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &lt;= 1.30182860535</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.30182860535</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z &gt;= 0.0308198551475</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0308198551475</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &lt;= 0.188536059819</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.188536059819</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x &gt;= -0.0475050142035</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= -0.0475050142035</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &lt;= 0.997908584696</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.997908584696</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.w &gt;= -0.49145877999</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.49145877999</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.secs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.z != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.x != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.translation.y != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>ENTER</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>../vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped):::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq == orig(param0.header.seq)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq == orig(param0.header.seq)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y == orig(param0.transform.rotation.y)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y == orig(param0.transform.rotation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == return.child_frame_id</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id == return.child_frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == orig(param0.child_frame_id)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id == orig(param0.child_frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == return.header.frame_id</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.frame_id == return.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == orig(param0.header.frame_id)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.frame_id == orig(param0.header.frame_id)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z == orig(param0.transform.rotation.z)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z == orig(param0.transform.rotation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs == orig(param0.header.stamp.secs)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs == orig(param0.header.stamp.secs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z == orig(param0.transform.translation.z)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z == orig(param0.transform.translation.z)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs == orig(param0.header.stamp.nsecs)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.nsecs == orig(param0.header.stamp.nsecs)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x == orig(param0.transform.translation.x)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x == orig(param0.transform.translation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y == orig(param0.transform.translation.y)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y == orig(param0.transform.translation.y)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x == orig(param0.transform.rotation.x)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x == orig(param0.transform.rotation.x)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w == orig(param0.transform.rotation.w)</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w == orig(param0.transform.rotation.w)</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &lt;= 0.165534916989</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y &lt;= 0.165534916989</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y &gt;= -0.204478604573</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y &gt;= -0.204478604573</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id == &quot;vicon/TELLO/TELLO&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.frame_id == &quot;/world&quot;</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.frame_id == &quot;/world&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.ProbabilisticString</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &lt;= 0.989806819629</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z &lt;= 0.989806819629</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z &gt;= -0.851000652949</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z &gt;= -0.851000652949</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &lt;= 1.30182860535</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z &lt;= 1.30182860535</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z &gt;= 0.0308198551475</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z &gt;= 0.0308198551475</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &lt;= 0.188536059819</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x &lt;= 0.188536059819</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x &gt;= -0.0475050142035</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x &gt;= -0.0475050142035</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &lt;= 0.997908584696</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w &lt;= 0.997908584696</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w &gt;= -0.49145877999</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w &gt;= -0.49145877999</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return != null</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return != null</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.header.seq != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &lt;= 0.165534916989</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y &lt;= 0.165534916989</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y &gt;= -0.204478604573</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y &gt;= -0.204478604573</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &lt;= 0.989806819629</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z &lt;= 0.989806819629</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z &gt;= -0.851000652949</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z &gt;= -0.851000652949</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.secs != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.header.stamp.secs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.z != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &lt;= 1.30182860535</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.z &lt;= 1.30182860535</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z &gt;= 0.0308198551475</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.z &gt;= 0.0308198551475</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.nsecs != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.header.stamp.nsecs != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZero</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.y != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.x != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &lt;= 0.188536059819</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.x &lt;= 0.188536059819</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x &gt;= -0.0475050142035</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.x &gt;= -0.0475050142035</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w != 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.w != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &lt;= 0.997908584696</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.w &lt;= 0.997908584696</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.UpperBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.w &gt;= -0.49145877999</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.w &gt;= -0.49145877999</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.secs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; param0.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq &lt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq - return.header.seq + 1 == 0</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq - return.header.seq + 1 == 0</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.LinearBinary</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; return.header.stamp.secs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq &lt; return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.seq &lt; return.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.seq &lt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != param0.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != param0.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != param0.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != return.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != return.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != return.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.y != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.y != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.child_frame_id &gt; param0.header.frame_id</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.child_frame_id &gt; param0.header.frame_id</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != param0.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != param0.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != param0.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != return.transform.rotation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != return.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.z != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.z != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; param0.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &gt; return.header.seq</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; return.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &lt;= return.header.stamp.secs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs &lt;= return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.secs &gt; return.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.secs &gt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != return.transform.rotation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != return.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != return.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != return.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.z != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.z != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs &gt; return.header.seq</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.nsecs &gt; return.header.seq</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs &lt; return.header.stamp.secs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.nsecs &lt; return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.header.stamp.nsecs != return.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.header.stamp.nsecs != return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x != return.transform.rotation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x != return.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.x != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.x != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y != param0.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != param0.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y != return.transform.rotation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y != return.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.translation.y != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.translation.y != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != param0.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != param0.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != return.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != return.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != return.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.x != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.x != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w != return.transform.rotation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w != return.transform.rotation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w != return.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w != return.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>param0.transform.rotation.w != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>param0.transform.rotation.w != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq &lt; return.header.stamp.secs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.header.seq &lt; return.header.stamp.secs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.seq &lt; return.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.header.seq &lt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntLessThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.y != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.y != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.translation.z</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.translation.z</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.translation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.translation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.translation.y</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.translation.y</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.z != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.z != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.header.stamp.secs &gt; return.header.stamp.nsecs</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.header.stamp.secs &gt; return.header.stamp.nsecs</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.IntGreaterThan</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.z != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.z != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.z != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.x != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.x != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.translation.y != return.transform.rotation.x</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.translation.y != return.transform.rotation.x</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return.transform.rotation.x != return.transform.rotation.w</INV> <SAMPLES>48192</SAMPLES> <DAIKON>return.transform.rotation.x != return.transform.rotation.w</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS> <METHOD>/vicon/TELLO/TELLO_next(geometry_msgs/TransformStamped)</METHOD> </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>..main():::EXIT</PPTNAME>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return == 0</INV> <SAMPLES>5</SAMPLES> <DAIKON>return == 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfScalar</DAIKONCLASS> <METHOD>main()</METHOD> </INVINFO>
<INVINFO> <PARENT>EXIT</PARENT> <INV>return == 0</INV> <SAMPLES>5</SAMPLES> <DAIKON>return == 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.ProbabilisticScalar</DAIKONCLASS> <METHOD>main()</METHOD> </INVINFO>
</PPT>
</INVARIANTS>
