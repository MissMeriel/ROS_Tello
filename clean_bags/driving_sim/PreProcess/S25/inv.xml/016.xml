<INVARIANTS>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>aprogram.point:::Mode_H2M_autonomous2manual</PPTNAME>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>Trust_Human == RangeN_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>Trust_Human == RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>Trust_Human == Reliability_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>Trust_Human == Reliability_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>Alarm_M2H == EventN_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>Alarm_M2H == EventN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>ManualBrake_H2M == CurrentBrake_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M == CurrentBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>ManualGear_H2M == CurrentGear_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == CurrentGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>ManualGear_H2M == AutoGear_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == AutoGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>ManualThrottle_H2M == CurrentThrottle_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualThrottle_H2M == CurrentThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>Trust_Human == 0.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>Trust_Human == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>Alarm_M2H == &quot; &quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>Alarm_M2H == &quot; &quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>Mode_H2M == &quot;manual&quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>Mode_H2M == &quot;manual&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>ManualBrake_H2M one of { 0.0, 3.7949187457084013, 5.5481803616388286 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M one of { 0.0, 3.7949187457084013, 5.5481803616388286 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>ManualGear_H2M == 1.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>ManualThrottle_H2M one of { 0.0, 25.61532005798428 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualThrottle_H2M one of { 0.0, 25.61532005798428 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>AutoBrake_Machine one of { 0.0, 81.73244857788086, 83.73026084899901 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>AutoBrake_Machine one of { 0.0, 81.73244857788086, 83.73026084899901 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>AutoThrottle_Machine one of { 0.0, 20.0 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>AutoThrottle_Machine one of { 0.0, 20.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>PupilRight_Human == 5.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>PupilRight_Human == 5.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</INV> <SAMPLES>4</SAMPLES> <DAIKON>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>RangeW_Machine one of { 0.0, 25.42324638366699, 26.08918380737305 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>RangeW_Machine one of { 0.0, 25.42324638366699, 26.08918380737305 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>AverageTrust_Human == 2.0445859872611467</INV> <SAMPLES>4</SAMPLES> <DAIKON>AverageTrust_Human == 2.0445859872611467</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>TrustChange_Human one of { -3.0, -1.0 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>TrustChange_Human one of { -3.0, -1.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_autonomous2manual</PARENT> <INV>2 * ManualWheel_H2M + CurrentWheel_Machine == 0</INV> <SAMPLES>4</SAMPLES> <DAIKON>2 * ManualWheel_H2M + CurrentWheel_Machine == 0</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.LinearBinaryFloat</DAIKONCLASS>  </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>aprogram.point:::Mode_H2M_manual2autonomous</PPTNAME>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>Trust_Human == TrustChange_Human</INV> <SAMPLES>4</SAMPLES> <DAIKON>Trust_Human == TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>Alarm_M2H == EventN_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>Alarm_M2H == EventN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>ManualBrake_H2M == RangeN_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M == RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>ManualBrake_H2M == Reliability_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M == Reliability_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>ManualGear_H2M == CurrentGear_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == CurrentGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>ManualGear_H2M == AutoGear_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == AutoGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>CurrentBrake_Machine == AutoBrake_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentBrake_Machine == AutoBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>CurrentWheel_Machine == AutoWheel_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentWheel_Machine == AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>CurrentThrottle_Machine == AutoThrottle_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentThrottle_Machine == AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>Trust_Human == 3.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>Trust_Human == 3.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>Alarm_M2H == &quot; &quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>Alarm_M2H == &quot; &quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>Mode_H2M == &quot;autonomous&quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>Mode_H2M == &quot;autonomous&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>ManualBrake_H2M == 0.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>ManualGear_H2M == 1.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>ManualThrottle_H2M one of { 0.0, 9.852750438696873 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualThrottle_H2M one of { 0.0, 9.852750438696873 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>CurrentBrake_Machine one of { 0.0, 78.51510238647461, 83.93318176269531 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentBrake_Machine one of { 0.0, 78.51510238647461, 83.93318176269531 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>CurrentThrottle_Machine one of { 0.0, 20.0 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentThrottle_Machine one of { 0.0, 20.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>PupilRight_Human one of { 4.41, 5.0 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>PupilRight_Human one of { 4.41, 5.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</INV> <SAMPLES>4</SAMPLES> <DAIKON>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>RangeW_Machine one of { 0.0, 25.35560607910156, 27.1616325378418 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>RangeW_Machine one of { 0.0, 25.35560607910156, 27.1616325378418 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>PupilChange_Human != 0</INV> <SAMPLES>4</SAMPLES> <DAIKON>PupilChange_Human != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Mode_H2M_manual2autonomous</PARENT> <INV>AverageTrust_Human == 2.0445859872611467</INV> <SAMPLES>4</SAMPLES> <DAIKON>AverageTrust_Human == 2.0445859872611467</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>aprogram.point:::Trust_Human_Dec</PPTNAME>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Alarm_M2H == EventN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Alarm_M2H == EventN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M == CurrentBrake_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M == CurrentBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M == CurrentGear_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M == CurrentGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M == AutoGear_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M == AutoGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeN_Machine == Reliability_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeN_Machine == Reliability_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human one of { 0.0, 1.0, 2.0 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human one of { 0.0, 1.0, 2.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Alarm_M2H == &quot; &quot;</INV> <SAMPLES>8</SAMPLES> <DAIKON>Alarm_M2H == &quot; &quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Mode_H2M one of { &quot;autonomous&quot;, &quot;manual&quot; }</INV> <SAMPLES>8</SAMPLES> <DAIKON>Mode_H2M one of { &quot;autonomous&quot;, &quot;manual&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M one of { 0.0, 3.7949187457084013, 5.5481803616388286 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M one of { 0.0, 3.7949187457084013, 5.5481803616388286 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M == 1.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M == 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M one of { 0.0, 25.61532005798428 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M one of { 0.0, 25.61532005798428 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine &gt;= 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine &gt;= 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.LowerBoundFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine one of { 0.0, 81.73244857788086, 83.73026084899901 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine one of { 0.0, 81.73244857788086, 83.73026084899901 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine one of { 0.0, 15.0, 20.0 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine one of { 0.0, 15.0, 20.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeN_Machine == 0.0</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeN_Machine == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</INV> <SAMPLES>8</SAMPLES> <DAIKON>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeW_Machine one of { 0.0, 25.42324638366699, 26.08918380737305 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeW_Machine one of { 0.0, 25.42324638366699, 26.08918380737305 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilChange_Human != 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilChange_Human != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AverageTrust_Human == 2.0445859872611467</INV> <SAMPLES>8</SAMPLES> <DAIKON>AverageTrust_Human == 2.0445859872611467</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TrustChange_Human one of { -3.0, -1.0 }</INV> <SAMPLES>8</SAMPLES> <DAIKON>TrustChange_Human one of { -3.0, -1.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; Trust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; Trust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; ManualBrake_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; ManualBrake_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; ManualGear_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; ManualGear_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; ManualThrottle_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; ManualThrottle_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; ManualWheel_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; ManualWheel_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; CurrentWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; CurrentWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; CurrentThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; CurrentThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; AutoBrake_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; AutoBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; AutoThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec != GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec != GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>TimeSignal_Sec &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>TimeSignal_Sec &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &lt;= CurrentThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &lt;= CurrentThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &lt;= AutoThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &lt;= AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &lt; Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &lt; Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &lt; PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &lt; PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &lt; PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &lt; PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &gt;= RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &gt;= RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &lt; AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &lt; AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human % TrustChange_Human == 0</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human % TrustChange_Human == 0</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.NumericFloat$Divides</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Trust_Human &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Trust_Human &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Alarm_M2H &lt; Mode_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>Alarm_M2H &lt; Mode_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Alarm_M2H &lt;= EventW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Alarm_M2H &lt;= EventW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Mode_H2M != EventW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Mode_H2M != EventW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M != ManualGear_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M != ManualGear_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M &lt;= AutoThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M &lt;= AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M &lt; Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M &lt; Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M &gt;= RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M &gt;= RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualBrake_H2M &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualBrake_H2M &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != ManualThrottle_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != ManualThrottle_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != ManualWheel_H2M</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != ManualWheel_H2M</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != CurrentWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != CurrentWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != CurrentThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != CurrentThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != AutoBrake_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != AutoBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != AutoThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M &lt; PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M &lt; PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M &lt; PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M &lt; PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M &gt; PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M &gt; PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualGear_H2M &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualGear_H2M &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M &lt;= CurrentThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M &lt;= CurrentThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M &lt;= AutoBrake_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M &lt;= AutoBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M != Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M != Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M &gt;= RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M &gt;= RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualThrottle_H2M &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualThrottle_H2M &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M != AutoBrake_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M != AutoBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M &lt;= AutoThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M &lt;= AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M &lt; Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M &lt; Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>ManualWheel_H2M &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>ManualWheel_H2M &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine &lt;= CurrentThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine &lt;= CurrentThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine != AutoBrake_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine != AutoBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine != Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine != Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine &lt; PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine &lt; PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine &lt; PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine &lt; PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentWheel_Machine != TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentWheel_Machine != TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine != Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine != Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine &gt;= RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine &gt;= RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>CurrentThrottle_Machine &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>CurrentThrottle_Machine &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != AutoThrottle_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine &gt;= RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine &gt;= RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine &gt;= RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine &gt;= RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoBrake_Machine &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoBrake_Machine &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine != AutoWheel_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine != AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine != Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine != Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine &gt;= RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine &gt;= RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoThrottle_Machine &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoThrottle_Machine &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != Speed_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != Speed_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AutoWheel_Machine != TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AutoWheel_Machine != TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine != PupilLeft_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine != PupilLeft_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine &gt; RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine &gt; RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>Speed_Machine &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>Speed_Machine &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilLeft_Human != PupilRight_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilLeft_Human != PupilRight_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilLeft_Human &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilLeft_Human &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilLeft_Human &gt; RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilLeft_Human &gt; RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilLeft_Human != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilLeft_Human != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilLeft_Human &gt; PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilLeft_Human &gt; PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilLeft_Human &gt; AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilLeft_Human &gt; AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilLeft_Human &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilLeft_Human &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilRight_Human &lt; GSR_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilRight_Human &lt; GSR_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilRight_Human &gt; RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilRight_Human &gt; RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilRight_Human != RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilRight_Human != RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilRight_Human &gt; PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilRight_Human &gt; PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilRight_Human &gt; AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilRight_Human &gt; AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilRight_Human &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilRight_Human &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>GSR_Human &gt; RangeN_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>GSR_Human &gt; RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>GSR_Human &gt; RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>GSR_Human &gt; RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>GSR_Human &gt; PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>GSR_Human &gt; PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>GSR_Human &gt; AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>GSR_Human &gt; AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>GSR_Human &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>GSR_Human &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeN_Machine &lt;= RangeW_Machine</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeN_Machine &lt;= RangeW_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeN_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeN_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeN_Machine &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeN_Machine &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeW_Machine != PupilChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeW_Machine != PupilChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeW_Machine != AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeW_Machine != AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatNonEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>RangeW_Machine &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>RangeW_Machine &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilChange_Human &lt; AverageTrust_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilChange_Human &lt; AverageTrust_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatLessThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>PupilChange_Human &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>PupilChange_Human &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Dec</PARENT> <INV>AverageTrust_Human &gt; TrustChange_Human</INV> <SAMPLES>8</SAMPLES> <DAIKON>AverageTrust_Human &gt; TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatGreaterThan</DAIKONCLASS>  </INVINFO>
</PPT>
<!-- =========================================================================== -->
<PPT>
<PPTNAME>aprogram.point:::Trust_Human_Inc</PPTNAME>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>Trust_Human == TrustChange_Human</INV> <SAMPLES>4</SAMPLES> <DAIKON>Trust_Human == TrustChange_Human</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>Alarm_M2H == EventN_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>Alarm_M2H == EventN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoString.StringEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>ManualBrake_H2M == RangeN_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M == RangeN_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>ManualBrake_H2M == Reliability_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M == Reliability_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>ManualGear_H2M == CurrentGear_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == CurrentGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>ManualGear_H2M == AutoGear_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == AutoGear_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>CurrentBrake_Machine == AutoBrake_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentBrake_Machine == AutoBrake_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>CurrentWheel_Machine == AutoWheel_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentWheel_Machine == AutoWheel_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>CurrentThrottle_Machine == AutoThrottle_Machine</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentThrottle_Machine == AutoThrottle_Machine</DAIKON> <DAIKONCLASS>class daikon.inv.binary.twoScalar.FloatEqual</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>Trust_Human == 3.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>Trust_Human == 3.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>Alarm_M2H == &quot; &quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>Alarm_M2H == &quot; &quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>Mode_H2M == &quot;autonomous&quot;</INV> <SAMPLES>4</SAMPLES> <DAIKON>Mode_H2M == &quot;autonomous&quot;</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>ManualBrake_H2M == 0.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualBrake_H2M == 0.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>ManualGear_H2M == 1.0</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualGear_H2M == 1.0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>ManualThrottle_H2M one of { 0.0, 9.852750438696873 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>ManualThrottle_H2M one of { 0.0, 9.852750438696873 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>CurrentBrake_Machine one of { 0.0, 78.51510238647461, 83.93318176269531 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentBrake_Machine one of { 0.0, 78.51510238647461, 83.93318176269531 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>CurrentThrottle_Machine one of { 0.0, 20.0 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>CurrentThrottle_Machine one of { 0.0, 20.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>PupilRight_Human one of { 4.41, 5.0 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>PupilRight_Human one of { 4.41, 5.0 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</INV> <SAMPLES>4</SAMPLES> <DAIKON>EventW_Machine one of { &quot; &quot;, &quot;pedestrian detected&quot; }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.string.OneOfString</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>RangeW_Machine one of { 0.0, 25.35560607910156, 27.1616325378418 }</INV> <SAMPLES>4</SAMPLES> <DAIKON>RangeW_Machine one of { 0.0, 25.35560607910156, 27.1616325378418 }</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>PupilChange_Human != 0</INV> <SAMPLES>4</SAMPLES> <DAIKON>PupilChange_Human != 0</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.NonZeroFloat</DAIKONCLASS>  </INVINFO>
<INVINFO> <PARENT>Trust_Human_Inc</PARENT> <INV>AverageTrust_Human == 2.0445859872611467</INV> <SAMPLES>4</SAMPLES> <DAIKON>AverageTrust_Human == 2.0445859872611467</DAIKON> <DAIKONCLASS>class daikon.inv.unary.scalar.OneOfFloat</DAIKONCLASS>  </INVINFO>
</PPT>
</INVARIANTS>
